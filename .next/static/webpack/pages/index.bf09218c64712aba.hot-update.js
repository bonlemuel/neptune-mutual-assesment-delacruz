/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/chart.js/dist/chart.esm.js":
/*!*************************************************!*\
  !*** ./node_modules/chart.js/dist/chart.esm.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Animation\": function() { return /* binding */ Animation; },\n/* harmony export */   \"Animations\": function() { return /* binding */ Animations; },\n/* harmony export */   \"ArcElement\": function() { return /* binding */ ArcElement; },\n/* harmony export */   \"BarController\": function() { return /* binding */ BarController; },\n/* harmony export */   \"BarElement\": function() { return /* binding */ BarElement; },\n/* harmony export */   \"BasePlatform\": function() { return /* binding */ BasePlatform; },\n/* harmony export */   \"BasicPlatform\": function() { return /* binding */ BasicPlatform; },\n/* harmony export */   \"BubbleController\": function() { return /* binding */ BubbleController; },\n/* harmony export */   \"CategoryScale\": function() { return /* binding */ CategoryScale; },\n/* harmony export */   \"Chart\": function() { return /* binding */ Chart; },\n/* harmony export */   \"DatasetController\": function() { return /* binding */ DatasetController; },\n/* harmony export */   \"Decimation\": function() { return /* binding */ plugin_decimation; },\n/* harmony export */   \"DomPlatform\": function() { return /* binding */ DomPlatform; },\n/* harmony export */   \"DoughnutController\": function() { return /* binding */ DoughnutController; },\n/* harmony export */   \"Element\": function() { return /* binding */ Element; },\n/* harmony export */   \"Filler\": function() { return /* binding */ plugin_filler; },\n/* harmony export */   \"Interaction\": function() { return /* binding */ Interaction; },\n/* harmony export */   \"Legend\": function() { return /* binding */ plugin_legend; },\n/* harmony export */   \"LineController\": function() { return /* binding */ LineController; },\n/* harmony export */   \"LineElement\": function() { return /* binding */ LineElement; },\n/* harmony export */   \"LinearScale\": function() { return /* binding */ LinearScale; },\n/* harmony export */   \"LogarithmicScale\": function() { return /* binding */ LogarithmicScale; },\n/* harmony export */   \"PieController\": function() { return /* binding */ PieController; },\n/* harmony export */   \"PointElement\": function() { return /* binding */ PointElement; },\n/* harmony export */   \"PolarAreaController\": function() { return /* binding */ PolarAreaController; },\n/* harmony export */   \"RadarController\": function() { return /* binding */ RadarController; },\n/* harmony export */   \"RadialLinearScale\": function() { return /* binding */ RadialLinearScale; },\n/* harmony export */   \"Scale\": function() { return /* binding */ Scale; },\n/* harmony export */   \"ScatterController\": function() { return /* binding */ ScatterController; },\n/* harmony export */   \"SubTitle\": function() { return /* binding */ plugin_subtitle; },\n/* harmony export */   \"Ticks\": function() { return /* binding */ Ticks; },\n/* harmony export */   \"TimeScale\": function() { return /* binding */ TimeScale; },\n/* harmony export */   \"TimeSeriesScale\": function() { return /* binding */ TimeSeriesScale; },\n/* harmony export */   \"Title\": function() { return /* binding */ plugin_title; },\n/* harmony export */   \"Tooltip\": function() { return /* binding */ plugin_tooltip; },\n/* harmony export */   \"_adapters\": function() { return /* binding */ adapters; },\n/* harmony export */   \"_detectPlatform\": function() { return /* binding */ _detectPlatform; },\n/* harmony export */   \"animator\": function() { return /* binding */ animator; },\n/* harmony export */   \"controllers\": function() { return /* binding */ controllers; },\n/* harmony export */   \"defaults\": function() { return /* reexport safe */ _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d; },\n/* harmony export */   \"elements\": function() { return /* binding */ elements; },\n/* harmony export */   \"layouts\": function() { return /* binding */ layouts; },\n/* harmony export */   \"plugins\": function() { return /* binding */ plugins; },\n/* harmony export */   \"registerables\": function() { return /* binding */ registerables; },\n/* harmony export */   \"registry\": function() { return /* binding */ registry; },\n/* harmony export */   \"scales\": function() { return /* binding */ scales; }\n/* harmony export */ });\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunks/helpers.segment.js */ \"./node_modules/chart.js/dist/chunks/helpers.segment.js\");\n/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.r.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(from || transparent);\n    const c1 = c0.valid && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.c)(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([cfg.to, to, currentValue, cfg.from]);\n    const from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e[cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.e.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([cfg.to, to, currentValue, cfg.from]);\n      this._from = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(otherValue) && (singleMode || (value === 0 || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) === (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.u)(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.l)(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, xAxisKey), index),\n        y: yScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, iAxisKey), i);\n      parsed.push(parseValue((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(value) !== (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P, startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.m)(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.n)(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(Math.min(\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(Math.max(\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y)(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.A : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(element, {x: position.x, y: position.y});\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.G)(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.G)(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.J ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.y)(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.I)((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.E)(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.F)(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.K)() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(this.x) && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe('scales', {\n  _fallback: 'scale',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.M)(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorStart, 0);\n  const end = Math.min((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.font, fallback);\n  const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(options.padding);\n  const lines = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, left, right);\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_userMin, _suggestedMin),\n      max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(_userMax, _suggestedMax),\n      minDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMin),\n      maxDefined: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(min, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(max, min)),\n      max: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(max, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Q)(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.R)(Math.min(\n        Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(label) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {\n        width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(nestedLabel) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(nestedLabel)) {\n            width = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.S)(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.U)(this._alignToPixels ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.V)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(title.font);\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(position)) {\n      offset += padding.bottom;\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d[scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a2)(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a3)(method);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(component['before' + camelMethod], [], component);\n    registry[method](component);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.f)(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a4, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1[type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a4\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6)(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(context)\n      ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a6)(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a7)(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a8)(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(value) || hasFunction(value)))\n      || (indexable && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.K)() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aa)();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ab)(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ac)(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ad)(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ac)(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ae)(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a5)(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.j)(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ad)(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ag)(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(options.onHover, [e, active, this], this);\n      if (isClick) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a1\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ai)(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(o.innerStart, 0, innerLimit),\n    innerEnd: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n      if (circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T === 0) {\n        endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.B)(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.p)(angle, startAngle, endAngle);\n    const withinRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T ? Math.floor(circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ap;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aq;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.am;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.an;\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ao;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aj)(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ak)(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.al)(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.z)(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar)(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.at)(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(x, bounds.left, bounds.right))\n\t\t&& (skipY || (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(minIndex) && !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a)([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.i)(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(start);\n    end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.al)(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.av)(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.W)(ctx, this);\n      this._draw();\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Y)(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.color;\n    const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(opts.rtl, this.left, this.width);\n    const labelFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineWidth, 1);\n      ctx.fillStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar)(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as)(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.az)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(titleOpts.font);\n    const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(titleOpts.font);\n    const titlePadding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(x, this.left, this.right)\n      && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(x, hitBox.left, hitBox.left + hitBox.width)\n          && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ah)(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(opts.text) ? opts.text.length : 1;\n    this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(opts.padding);\n    const textSize = lineCount * (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a0)(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.$)(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aC)(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.bodyFont);\n  const titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.titleFont);\n  const footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(body, (bodyItem) => {\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(bodyItem.before, maxLineWidth);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(bodyItem.lines, maxLineWidth);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(x, 0, chart.width - size.width),\n    y: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar)(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ar)(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as)(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.as)(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.D)(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ax)(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.au)(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.ay)(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aA)(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.af)(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB,\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aB\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(min);\n  const maxDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(max);\n  const countDefined = !(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aE)((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aE)(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aF)((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)(spacing),\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aH)(niceMin)\n  );\n  factor = Math.pow(10, (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aG)(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(min);\n      const maxSign = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.s)(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aD)(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? min : 0;\n    this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(generationOptions.min, Math.pow(10, Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(dataRange.min))));\n  let exp = Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.N)(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) ? Math.max(0, min) : null;\n    this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aD)(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.o)(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(start);\n    this._valueRange = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(this.max) - (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.L)(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(tickOpts.backdropPadding);\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.d.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.b)(label) ? label : [label];\n  return {\n    w: (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aI)(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.R)(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.P / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.R)((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(pointLabelPosition.angle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(backdropColor)) {\n      const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.h)(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : 0;\n    this.max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.T / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aw)(index * angleMultiplier + (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.H + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.Z)(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.C)(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.X)(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.k)(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!(0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && ((0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aK)(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.a9)(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.g)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(start, 0, limit);\n    end = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.w)(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.v)(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.q)(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.O)(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.t)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__._)(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = (0,_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__.x)(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/chart.js/dist/chart.esm.js\n");

/***/ }),

/***/ "./node_modules/chart.js/dist/chunks/helpers.segment.js":
/*!**************************************************************!*\
  !*** ./node_modules/chart.js/dist/chunks/helpers.segment.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$\": function() { return /* binding */ _toLeftRightCenter; },\n/* harmony export */   \"A\": function() { return /* binding */ _rlookupByKey; },\n/* harmony export */   \"B\": function() { return /* binding */ getAngleFromPoint; },\n/* harmony export */   \"C\": function() { return /* binding */ toPadding; },\n/* harmony export */   \"D\": function() { return /* binding */ each; },\n/* harmony export */   \"E\": function() { return /* binding */ getMaximumSize; },\n/* harmony export */   \"F\": function() { return /* binding */ _getParentNode; },\n/* harmony export */   \"G\": function() { return /* binding */ readUsedSize; },\n/* harmony export */   \"H\": function() { return /* binding */ HALF_PI; },\n/* harmony export */   \"I\": function() { return /* binding */ throttled; },\n/* harmony export */   \"J\": function() { return /* binding */ supportsEventListenerOptions; },\n/* harmony export */   \"K\": function() { return /* binding */ _isDomSupported; },\n/* harmony export */   \"L\": function() { return /* binding */ log10; },\n/* harmony export */   \"M\": function() { return /* binding */ _factorize; },\n/* harmony export */   \"N\": function() { return /* binding */ finiteOrDefault; },\n/* harmony export */   \"O\": function() { return /* binding */ callback; },\n/* harmony export */   \"P\": function() { return /* binding */ PI; },\n/* harmony export */   \"Q\": function() { return /* binding */ _addGrace; },\n/* harmony export */   \"R\": function() { return /* binding */ toDegrees; },\n/* harmony export */   \"S\": function() { return /* binding */ _measureText; },\n/* harmony export */   \"T\": function() { return /* binding */ TAU; },\n/* harmony export */   \"U\": function() { return /* binding */ _int16Range; },\n/* harmony export */   \"V\": function() { return /* binding */ _alignPixel; },\n/* harmony export */   \"W\": function() { return /* binding */ clipArea; },\n/* harmony export */   \"X\": function() { return /* binding */ renderText; },\n/* harmony export */   \"Y\": function() { return /* binding */ unclipArea; },\n/* harmony export */   \"Z\": function() { return /* binding */ toFont; },\n/* harmony export */   \"_\": function() { return /* binding */ _arrayUnique; },\n/* harmony export */   \"a\": function() { return /* binding */ resolve; },\n/* harmony export */   \"a$\": function() { return /* binding */ _angleDiff; },\n/* harmony export */   \"a0\": function() { return /* binding */ _alignStartEnd; },\n/* harmony export */   \"a1\": function() { return /* binding */ overrides; },\n/* harmony export */   \"a2\": function() { return /* binding */ merge; },\n/* harmony export */   \"a3\": function() { return /* binding */ _capitalize; },\n/* harmony export */   \"a4\": function() { return /* binding */ descriptors; },\n/* harmony export */   \"a5\": function() { return /* binding */ isFunction; },\n/* harmony export */   \"a6\": function() { return /* binding */ _attachContext; },\n/* harmony export */   \"a7\": function() { return /* binding */ _createResolver; },\n/* harmony export */   \"a8\": function() { return /* binding */ _descriptors; },\n/* harmony export */   \"a9\": function() { return /* binding */ mergeIf; },\n/* harmony export */   \"aA\": function() { return /* binding */ restoreTextDirection; },\n/* harmony export */   \"aB\": function() { return /* binding */ noop; },\n/* harmony export */   \"aC\": function() { return /* binding */ distanceBetweenPoints; },\n/* harmony export */   \"aD\": function() { return /* binding */ _setMinAndMaxByKey; },\n/* harmony export */   \"aE\": function() { return /* binding */ niceNum; },\n/* harmony export */   \"aF\": function() { return /* binding */ almostWhole; },\n/* harmony export */   \"aG\": function() { return /* binding */ almostEquals; },\n/* harmony export */   \"aH\": function() { return /* binding */ _decimalPlaces; },\n/* harmony export */   \"aI\": function() { return /* binding */ _longestText; },\n/* harmony export */   \"aJ\": function() { return /* binding */ _filterBetween; },\n/* harmony export */   \"aK\": function() { return /* binding */ _lookup; },\n/* harmony export */   \"aL\": function() { return /* binding */ getHoverColor; },\n/* harmony export */   \"aM\": function() { return /* binding */ clone$1; },\n/* harmony export */   \"aN\": function() { return /* binding */ _merger; },\n/* harmony export */   \"aO\": function() { return /* binding */ _mergerIf; },\n/* harmony export */   \"aP\": function() { return /* binding */ _deprecated; },\n/* harmony export */   \"aQ\": function() { return /* binding */ toFontString; },\n/* harmony export */   \"aR\": function() { return /* binding */ splineCurve; },\n/* harmony export */   \"aS\": function() { return /* binding */ splineCurveMonotone; },\n/* harmony export */   \"aT\": function() { return /* binding */ getStyle; },\n/* harmony export */   \"aU\": function() { return /* binding */ fontString; },\n/* harmony export */   \"aV\": function() { return /* binding */ toLineHeight; },\n/* harmony export */   \"aW\": function() { return /* binding */ PITAU; },\n/* harmony export */   \"aX\": function() { return /* binding */ INFINITY; },\n/* harmony export */   \"aY\": function() { return /* binding */ RAD_PER_DEG; },\n/* harmony export */   \"aZ\": function() { return /* binding */ QUARTER_PI; },\n/* harmony export */   \"a_\": function() { return /* binding */ TWO_THIRDS_PI; },\n/* harmony export */   \"aa\": function() { return /* binding */ uid; },\n/* harmony export */   \"ab\": function() { return /* binding */ debounce; },\n/* harmony export */   \"ac\": function() { return /* binding */ retinaScale; },\n/* harmony export */   \"ad\": function() { return /* binding */ clearCanvas; },\n/* harmony export */   \"ae\": function() { return /* binding */ setsEqual; },\n/* harmony export */   \"af\": function() { return /* binding */ _elementsEqual; },\n/* harmony export */   \"ag\": function() { return /* binding */ _isClickEvent; },\n/* harmony export */   \"ah\": function() { return /* binding */ _isBetween; },\n/* harmony export */   \"ai\": function() { return /* binding */ _readValueToProps; },\n/* harmony export */   \"aj\": function() { return /* binding */ _updateBezierControlPoints; },\n/* harmony export */   \"ak\": function() { return /* binding */ _computeSegments; },\n/* harmony export */   \"al\": function() { return /* binding */ _boundSegments; },\n/* harmony export */   \"am\": function() { return /* binding */ _steppedInterpolation; },\n/* harmony export */   \"an\": function() { return /* binding */ _bezierInterpolation; },\n/* harmony export */   \"ao\": function() { return /* binding */ _pointInLine; },\n/* harmony export */   \"ap\": function() { return /* binding */ _steppedLineTo; },\n/* harmony export */   \"aq\": function() { return /* binding */ _bezierCurveTo; },\n/* harmony export */   \"ar\": function() { return /* binding */ drawPoint; },\n/* harmony export */   \"as\": function() { return /* binding */ addRoundedRectPath; },\n/* harmony export */   \"at\": function() { return /* binding */ toTRBL; },\n/* harmony export */   \"au\": function() { return /* binding */ toTRBLCorners; },\n/* harmony export */   \"av\": function() { return /* binding */ _boundSegment; },\n/* harmony export */   \"aw\": function() { return /* binding */ _normalizeAngle; },\n/* harmony export */   \"ax\": function() { return /* binding */ getRtlAdapter; },\n/* harmony export */   \"ay\": function() { return /* binding */ overrideTextDirection; },\n/* harmony export */   \"az\": function() { return /* binding */ _textX; },\n/* harmony export */   \"b\": function() { return /* binding */ isArray; },\n/* harmony export */   \"c\": function() { return /* binding */ color; },\n/* harmony export */   \"d\": function() { return /* binding */ defaults; },\n/* harmony export */   \"e\": function() { return /* binding */ effects; },\n/* harmony export */   \"f\": function() { return /* binding */ resolveObjectKey; },\n/* harmony export */   \"g\": function() { return /* binding */ isNumberFinite; },\n/* harmony export */   \"h\": function() { return /* binding */ createContext; },\n/* harmony export */   \"i\": function() { return /* binding */ isObject; },\n/* harmony export */   \"j\": function() { return /* binding */ defined; },\n/* harmony export */   \"k\": function() { return /* binding */ isNullOrUndef; },\n/* harmony export */   \"l\": function() { return /* binding */ listenArrayEvents; },\n/* harmony export */   \"m\": function() { return /* binding */ toPercentage; },\n/* harmony export */   \"n\": function() { return /* binding */ toDimension; },\n/* harmony export */   \"o\": function() { return /* binding */ formatNumber; },\n/* harmony export */   \"p\": function() { return /* binding */ _angleBetween; },\n/* harmony export */   \"q\": function() { return /* binding */ isNumber; },\n/* harmony export */   \"r\": function() { return /* binding */ requestAnimFrame; },\n/* harmony export */   \"s\": function() { return /* binding */ sign; },\n/* harmony export */   \"t\": function() { return /* binding */ toRadians; },\n/* harmony export */   \"u\": function() { return /* binding */ unlistenArrayEvents; },\n/* harmony export */   \"v\": function() { return /* binding */ valueOrDefault; },\n/* harmony export */   \"w\": function() { return /* binding */ _limitValue; },\n/* harmony export */   \"x\": function() { return /* binding */ _lookupByKey; },\n/* harmony export */   \"y\": function() { return /* binding */ getRelativePosition; },\n/* harmony export */   \"z\": function() { return /* binding */ _isPointInArea; }\n/* harmony export */ });\n/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2hhcnQuanMvZGlzdC9jaHVua3MvaGVscGVycy5zZWdtZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBLE1BQU07QUFDTixrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxVQUFVO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFVBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxVQUFVO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxrQkFBa0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxVQUFVO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksU0FBUztBQUM5QyxZQUFZLElBQUksSUFBSSxJQUFJLElBQUksSUFBSTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxTQUFTO0FBQ3pDLFdBQVcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBLGNBQWMsa0JBQWtCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTix1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsa0JBQWtCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG9CQUFvQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDZDQUE2QztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsVUFBVTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLFVBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsVUFBVTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHNDQUFzQyxzQ0FBc0M7QUFDNUU7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlDQUF5QyxrQ0FBa0M7QUFDM0UsU0FBUyxpR0FBaUc7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0RBQXdEO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxxQ0FBcUM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx3REFBd0Q7QUFDakU7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsVUFBVTtBQUNuQyx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsVUFBVTtBQUNuQyx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZUFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsVUFBVTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxzQ0FBc0MsVUFBVTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGtCQUFrQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFNBQVMsaUNBQWlDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXO0FBQ3BCO0FBQ0E7QUFDQSxPQUFPLGVBQWU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxlQUFlO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsYUFBYTtBQUMxQyw0QkFBNEIsWUFBWTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLCtCQUErQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw0Q0FBNEM7QUFDckQsU0FBUyxvQkFBb0I7QUFDN0I7QUFDQSxPQUFPLGtCQUFrQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixVQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw0Q0FBNEM7QUFDckQ7QUFDQSxTQUFTLDZCQUE2QjtBQUN0QyxTQUFTLHlCQUF5QjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFVBQVU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNENBQTRDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx5Q0FBeUM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbURBQW1EO0FBQ3hFO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4Q0FBOEM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsWUFBWTtBQUNyQjtBQUNBLGlDQUFpQyxpQkFBaUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdUNBQXVDLFdBQVc7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFxRDtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTR0RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY2hhcnQuanMvZGlzdC9jaHVua3MvaGVscGVycy5zZWdtZW50LmpzP2NmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDaGFydC5qcyB2My43LjFcbiAqIGh0dHBzOi8vd3d3LmNoYXJ0anMub3JnXG4gKiAoYykgMjAyMiBDaGFydC5qcyBDb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZVxuICovXG5mdW5jdGlvbiBmb250U3RyaW5nKHBpeGVsU2l6ZSwgZm9udFN0eWxlLCBmb250RmFtaWx5KSB7XG4gIHJldHVybiBmb250U3R5bGUgKyAnICcgKyBwaXhlbFNpemUgKyAncHggJyArIGZvbnRGYW1pbHk7XG59XG5jb25zdCByZXF1ZXN0QW5pbUZyYW1lID0gKGZ1bmN0aW9uKCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgIHJldHVybiBjYWxsYmFjaygpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG59KCkpO1xuZnVuY3Rpb24gdGhyb3R0bGVkKGZuLCB0aGlzQXJnLCB1cGRhdGVGbikge1xuICBjb25zdCB1cGRhdGVBcmdzID0gdXBkYXRlRm4gfHwgKChhcmdzKSA9PiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmdzKSk7XG4gIGxldCB0aWNraW5nID0gZmFsc2U7XG4gIGxldCBhcmdzID0gW107XG4gIHJldHVybiBmdW5jdGlvbiguLi5yZXN0KSB7XG4gICAgYXJncyA9IHVwZGF0ZUFyZ3MocmVzdCk7XG4gICAgaWYgKCF0aWNraW5nKSB7XG4gICAgICB0aWNraW5nID0gdHJ1ZTtcbiAgICAgIHJlcXVlc3RBbmltRnJhbWUuY2FsbCh3aW5kb3csICgpID0+IHtcbiAgICAgICAgdGlja2luZyA9IGZhbHNlO1xuICAgICAgICBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGRlYm91bmNlKGZuLCBkZWxheSkge1xuICBsZXQgdGltZW91dDtcbiAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICBpZiAoZGVsYXkpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZuLCBkZWxheSwgYXJncyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gZGVsYXk7XG4gIH07XG59XG5jb25zdCBfdG9MZWZ0UmlnaHRDZW50ZXIgPSAoYWxpZ24pID0+IGFsaWduID09PSAnc3RhcnQnID8gJ2xlZnQnIDogYWxpZ24gPT09ICdlbmQnID8gJ3JpZ2h0JyA6ICdjZW50ZXInO1xuY29uc3QgX2FsaWduU3RhcnRFbmQgPSAoYWxpZ24sIHN0YXJ0LCBlbmQpID0+IGFsaWduID09PSAnc3RhcnQnID8gc3RhcnQgOiBhbGlnbiA9PT0gJ2VuZCcgPyBlbmQgOiAoc3RhcnQgKyBlbmQpIC8gMjtcbmNvbnN0IF90ZXh0WCA9IChhbGlnbiwgbGVmdCwgcmlnaHQsIHJ0bCkgPT4ge1xuICBjb25zdCBjaGVjayA9IHJ0bCA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gIHJldHVybiBhbGlnbiA9PT0gY2hlY2sgPyByaWdodCA6IGFsaWduID09PSAnY2VudGVyJyA/IChsZWZ0ICsgcmlnaHQpIC8gMiA6IGxlZnQ7XG59O1xuXG5mdW5jdGlvbiBub29wKCkge31cbmNvbnN0IHVpZCA9IChmdW5jdGlvbigpIHtcbiAgbGV0IGlkID0gMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBpZCsrO1xuICB9O1xufSgpKTtcbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWYodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCc7XG59XG5mdW5jdGlvbiBpc0FycmF5KHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5ICYmIEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgY29uc3QgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIGlmICh0eXBlLnN1YnN0cigwLCA3KSA9PT0gJ1tvYmplY3QnICYmIHR5cGUuc3Vic3RyKC02KSA9PT0gJ0FycmF5XScpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSc7XG59XG5jb25zdCBpc051bWJlckZpbml0ZSA9ICh2YWx1ZSkgPT4gKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgfHwgdmFsdWUgaW5zdGFuY2VvZiBOdW1iZXIpICYmIGlzRmluaXRlKCt2YWx1ZSk7XG5mdW5jdGlvbiBmaW5pdGVPckRlZmF1bHQodmFsdWUsIGRlZmF1bHRWYWx1ZSkge1xuICByZXR1cm4gaXNOdW1iZXJGaW5pdGUodmFsdWUpID8gdmFsdWUgOiBkZWZhdWx0VmFsdWU7XG59XG5mdW5jdGlvbiB2YWx1ZU9yRGVmYXVsdCh2YWx1ZSwgZGVmYXVsdFZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gZGVmYXVsdFZhbHVlIDogdmFsdWU7XG59XG5jb25zdCB0b1BlcmNlbnRhZ2UgPSAodmFsdWUsIGRpbWVuc2lvbikgPT5cbiAgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5lbmRzV2l0aCgnJScpID9cbiAgICBwYXJzZUZsb2F0KHZhbHVlKSAvIDEwMFxuICAgIDogdmFsdWUgLyBkaW1lbnNpb247XG5jb25zdCB0b0RpbWVuc2lvbiA9ICh2YWx1ZSwgZGltZW5zaW9uKSA9PlxuICB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmVuZHNXaXRoKCclJykgP1xuICAgIHBhcnNlRmxvYXQodmFsdWUpIC8gMTAwICogZGltZW5zaW9uXG4gICAgOiArdmFsdWU7XG5mdW5jdGlvbiBjYWxsYmFjayhmbiwgYXJncywgdGhpc0FyZykge1xuICBpZiAoZm4gJiYgdHlwZW9mIGZuLmNhbGwgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH1cbn1cbmZ1bmN0aW9uIGVhY2gobG9vcGFibGUsIGZuLCB0aGlzQXJnLCByZXZlcnNlKSB7XG4gIGxldCBpLCBsZW4sIGtleXM7XG4gIGlmIChpc0FycmF5KGxvb3BhYmxlKSkge1xuICAgIGxlbiA9IGxvb3BhYmxlLmxlbmd0aDtcbiAgICBpZiAocmV2ZXJzZSkge1xuICAgICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgZm4uY2FsbCh0aGlzQXJnLCBsb29wYWJsZVtpXSwgaSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBmbi5jYWxsKHRoaXNBcmcsIGxvb3BhYmxlW2ldLCBpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNPYmplY3QobG9vcGFibGUpKSB7XG4gICAga2V5cyA9IE9iamVjdC5rZXlzKGxvb3BhYmxlKTtcbiAgICBsZW4gPSBrZXlzLmxlbmd0aDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGZuLmNhbGwodGhpc0FyZywgbG9vcGFibGVba2V5c1tpXV0sIGtleXNbaV0pO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gX2VsZW1lbnRzRXF1YWwoYTAsIGExKSB7XG4gIGxldCBpLCBpbGVuLCB2MCwgdjE7XG4gIGlmICghYTAgfHwgIWExIHx8IGEwLmxlbmd0aCAhPT0gYTEubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAoaSA9IDAsIGlsZW4gPSBhMC5sZW5ndGg7IGkgPCBpbGVuOyArK2kpIHtcbiAgICB2MCA9IGEwW2ldO1xuICAgIHYxID0gYTFbaV07XG4gICAgaWYgKHYwLmRhdGFzZXRJbmRleCAhPT0gdjEuZGF0YXNldEluZGV4IHx8IHYwLmluZGV4ICE9PSB2MS5pbmRleCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGNsb25lJDEoc291cmNlKSB7XG4gIGlmIChpc0FycmF5KHNvdXJjZSkpIHtcbiAgICByZXR1cm4gc291cmNlLm1hcChjbG9uZSQxKTtcbiAgfVxuICBpZiAoaXNPYmplY3Qoc291cmNlKSkge1xuICAgIGNvbnN0IHRhcmdldCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gICAgY29uc3Qga2xlbiA9IGtleXMubGVuZ3RoO1xuICAgIGxldCBrID0gMDtcbiAgICBmb3IgKDsgayA8IGtsZW47ICsraykge1xuICAgICAgdGFyZ2V0W2tleXNba11dID0gY2xvbmUkMShzb3VyY2Vba2V5c1trXV0pO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9XG4gIHJldHVybiBzb3VyY2U7XG59XG5mdW5jdGlvbiBpc1ZhbGlkS2V5KGtleSkge1xuICByZXR1cm4gWydfX3Byb3RvX18nLCAncHJvdG90eXBlJywgJ2NvbnN0cnVjdG9yJ10uaW5kZXhPZihrZXkpID09PSAtMTtcbn1cbmZ1bmN0aW9uIF9tZXJnZXIoa2V5LCB0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuICBpZiAoIWlzVmFsaWRLZXkoa2V5KSkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB0dmFsID0gdGFyZ2V0W2tleV07XG4gIGNvbnN0IHN2YWwgPSBzb3VyY2Vba2V5XTtcbiAgaWYgKGlzT2JqZWN0KHR2YWwpICYmIGlzT2JqZWN0KHN2YWwpKSB7XG4gICAgbWVyZ2UodHZhbCwgc3ZhbCwgb3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0W2tleV0gPSBjbG9uZSQxKHN2YWwpO1xuICB9XG59XG5mdW5jdGlvbiBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuICBjb25zdCBzb3VyY2VzID0gaXNBcnJheShzb3VyY2UpID8gc291cmNlIDogW3NvdXJjZV07XG4gIGNvbnN0IGlsZW4gPSBzb3VyY2VzLmxlbmd0aDtcbiAgaWYgKCFpc09iamVjdCh0YXJnZXQpKSB7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgY29uc3QgbWVyZ2VyID0gb3B0aW9ucy5tZXJnZXIgfHwgX21lcmdlcjtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbGVuOyArK2kpIHtcbiAgICBzb3VyY2UgPSBzb3VyY2VzW2ldO1xuICAgIGlmICghaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICAgIGZvciAobGV0IGsgPSAwLCBrbGVuID0ga2V5cy5sZW5ndGg7IGsgPCBrbGVuOyArK2spIHtcbiAgICAgIG1lcmdlcihrZXlzW2tdLCB0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucyk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0YXJnZXQ7XG59XG5mdW5jdGlvbiBtZXJnZUlmKHRhcmdldCwgc291cmNlKSB7XG4gIHJldHVybiBtZXJnZSh0YXJnZXQsIHNvdXJjZSwge21lcmdlcjogX21lcmdlcklmfSk7XG59XG5mdW5jdGlvbiBfbWVyZ2VySWYoa2V5LCB0YXJnZXQsIHNvdXJjZSkge1xuICBpZiAoIWlzVmFsaWRLZXkoa2V5KSkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB0dmFsID0gdGFyZ2V0W2tleV07XG4gIGNvbnN0IHN2YWwgPSBzb3VyY2Vba2V5XTtcbiAgaWYgKGlzT2JqZWN0KHR2YWwpICYmIGlzT2JqZWN0KHN2YWwpKSB7XG4gICAgbWVyZ2VJZih0dmFsLCBzdmFsKTtcbiAgfSBlbHNlIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwga2V5KSkge1xuICAgIHRhcmdldFtrZXldID0gY2xvbmUkMShzdmFsKTtcbiAgfVxufVxuZnVuY3Rpb24gX2RlcHJlY2F0ZWQoc2NvcGUsIHZhbHVlLCBwcmV2aW91cywgY3VycmVudCkge1xuICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnNvbGUud2FybihzY29wZSArICc6IFwiJyArIHByZXZpb3VzICtcblx0XHRcdCdcIiBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIFwiJyArIGN1cnJlbnQgKyAnXCIgaW5zdGVhZCcpO1xuICB9XG59XG5jb25zdCBlbXB0eVN0cmluZyA9ICcnO1xuY29uc3QgZG90ID0gJy4nO1xuZnVuY3Rpb24gaW5kZXhPZkRvdE9yTGVuZ3RoKGtleSwgc3RhcnQpIHtcbiAgY29uc3QgaWR4ID0ga2V5LmluZGV4T2YoZG90LCBzdGFydCk7XG4gIHJldHVybiBpZHggPT09IC0xID8ga2V5Lmxlbmd0aCA6IGlkeDtcbn1cbmZ1bmN0aW9uIHJlc29sdmVPYmplY3RLZXkob2JqLCBrZXkpIHtcbiAgaWYgKGtleSA9PT0gZW1wdHlTdHJpbmcpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIGxldCBwb3MgPSAwO1xuICBsZXQgaWR4ID0gaW5kZXhPZkRvdE9yTGVuZ3RoKGtleSwgcG9zKTtcbiAgd2hpbGUgKG9iaiAmJiBpZHggPiBwb3MpIHtcbiAgICBvYmogPSBvYmpba2V5LnN1YnN0cihwb3MsIGlkeCAtIHBvcyldO1xuICAgIHBvcyA9IGlkeCArIDE7XG4gICAgaWR4ID0gaW5kZXhPZkRvdE9yTGVuZ3RoKGtleSwgcG9zKTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gX2NhcGl0YWxpemUoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG5jb25zdCBkZWZpbmVkID0gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnO1xuY29uc3QgaXNGdW5jdGlvbiA9ICh2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xuY29uc3Qgc2V0c0VxdWFsID0gKGEsIGIpID0+IHtcbiAgaWYgKGEuc2l6ZSAhPT0gYi5zaXplKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAoY29uc3QgaXRlbSBvZiBhKSB7XG4gICAgaWYgKCFiLmhhcyhpdGVtKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG5mdW5jdGlvbiBfaXNDbGlja0V2ZW50KGUpIHtcbiAgcmV0dXJuIGUudHlwZSA9PT0gJ21vdXNldXAnIHx8IGUudHlwZSA9PT0gJ2NsaWNrJyB8fCBlLnR5cGUgPT09ICdjb250ZXh0bWVudSc7XG59XG5cbmNvbnN0IFBJID0gTWF0aC5QSTtcbmNvbnN0IFRBVSA9IDIgKiBQSTtcbmNvbnN0IFBJVEFVID0gVEFVICsgUEk7XG5jb25zdCBJTkZJTklUWSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbmNvbnN0IFJBRF9QRVJfREVHID0gUEkgLyAxODA7XG5jb25zdCBIQUxGX1BJID0gUEkgLyAyO1xuY29uc3QgUVVBUlRFUl9QSSA9IFBJIC8gNDtcbmNvbnN0IFRXT19USElSRFNfUEkgPSBQSSAqIDIgLyAzO1xuY29uc3QgbG9nMTAgPSBNYXRoLmxvZzEwO1xuY29uc3Qgc2lnbiA9IE1hdGguc2lnbjtcbmZ1bmN0aW9uIG5pY2VOdW0ocmFuZ2UpIHtcbiAgY29uc3Qgcm91bmRlZFJhbmdlID0gTWF0aC5yb3VuZChyYW5nZSk7XG4gIHJhbmdlID0gYWxtb3N0RXF1YWxzKHJhbmdlLCByb3VuZGVkUmFuZ2UsIHJhbmdlIC8gMTAwMCkgPyByb3VuZGVkUmFuZ2UgOiByYW5nZTtcbiAgY29uc3QgbmljZVJhbmdlID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IobG9nMTAocmFuZ2UpKSk7XG4gIGNvbnN0IGZyYWN0aW9uID0gcmFuZ2UgLyBuaWNlUmFuZ2U7XG4gIGNvbnN0IG5pY2VGcmFjdGlvbiA9IGZyYWN0aW9uIDw9IDEgPyAxIDogZnJhY3Rpb24gPD0gMiA/IDIgOiBmcmFjdGlvbiA8PSA1ID8gNSA6IDEwO1xuICByZXR1cm4gbmljZUZyYWN0aW9uICogbmljZVJhbmdlO1xufVxuZnVuY3Rpb24gX2ZhY3Rvcml6ZSh2YWx1ZSkge1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgY29uc3Qgc3FydCA9IE1hdGguc3FydCh2YWx1ZSk7XG4gIGxldCBpO1xuICBmb3IgKGkgPSAxOyBpIDwgc3FydDsgaSsrKSB7XG4gICAgaWYgKHZhbHVlICUgaSA9PT0gMCkge1xuICAgICAgcmVzdWx0LnB1c2goaSk7XG4gICAgICByZXN1bHQucHVzaCh2YWx1ZSAvIGkpO1xuICAgIH1cbiAgfVxuICBpZiAoc3FydCA9PT0gKHNxcnQgfCAwKSkge1xuICAgIHJlc3VsdC5wdXNoKHNxcnQpO1xuICB9XG4gIHJlc3VsdC5zb3J0KChhLCBiKSA9PiBhIC0gYikucG9wKCk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBpc051bWJlcihuKSB7XG4gIHJldHVybiAhaXNOYU4ocGFyc2VGbG9hdChuKSkgJiYgaXNGaW5pdGUobik7XG59XG5mdW5jdGlvbiBhbG1vc3RFcXVhbHMoeCwgeSwgZXBzaWxvbikge1xuICByZXR1cm4gTWF0aC5hYnMoeCAtIHkpIDwgZXBzaWxvbjtcbn1cbmZ1bmN0aW9uIGFsbW9zdFdob2xlKHgsIGVwc2lsb24pIHtcbiAgY29uc3Qgcm91bmRlZCA9IE1hdGgucm91bmQoeCk7XG4gIHJldHVybiAoKHJvdW5kZWQgLSBlcHNpbG9uKSA8PSB4KSAmJiAoKHJvdW5kZWQgKyBlcHNpbG9uKSA+PSB4KTtcbn1cbmZ1bmN0aW9uIF9zZXRNaW5BbmRNYXhCeUtleShhcnJheSwgdGFyZ2V0LCBwcm9wZXJ0eSkge1xuICBsZXQgaSwgaWxlbiwgdmFsdWU7XG4gIGZvciAoaSA9IDAsIGlsZW4gPSBhcnJheS5sZW5ndGg7IGkgPCBpbGVuOyBpKyspIHtcbiAgICB2YWx1ZSA9IGFycmF5W2ldW3Byb3BlcnR5XTtcbiAgICBpZiAoIWlzTmFOKHZhbHVlKSkge1xuICAgICAgdGFyZ2V0Lm1pbiA9IE1hdGgubWluKHRhcmdldC5taW4sIHZhbHVlKTtcbiAgICAgIHRhcmdldC5tYXggPSBNYXRoLm1heCh0YXJnZXQubWF4LCB2YWx1ZSk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiB0b1JhZGlhbnMoZGVncmVlcykge1xuICByZXR1cm4gZGVncmVlcyAqIChQSSAvIDE4MCk7XG59XG5mdW5jdGlvbiB0b0RlZ3JlZXMocmFkaWFucykge1xuICByZXR1cm4gcmFkaWFucyAqICgxODAgLyBQSSk7XG59XG5mdW5jdGlvbiBfZGVjaW1hbFBsYWNlcyh4KSB7XG4gIGlmICghaXNOdW1iZXJGaW5pdGUoeCkpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IGUgPSAxO1xuICBsZXQgcCA9IDA7XG4gIHdoaWxlIChNYXRoLnJvdW5kKHggKiBlKSAvIGUgIT09IHgpIHtcbiAgICBlICo9IDEwO1xuICAgIHArKztcbiAgfVxuICByZXR1cm4gcDtcbn1cbmZ1bmN0aW9uIGdldEFuZ2xlRnJvbVBvaW50KGNlbnRyZVBvaW50LCBhbmdsZVBvaW50KSB7XG4gIGNvbnN0IGRpc3RhbmNlRnJvbVhDZW50ZXIgPSBhbmdsZVBvaW50LnggLSBjZW50cmVQb2ludC54O1xuICBjb25zdCBkaXN0YW5jZUZyb21ZQ2VudGVyID0gYW5nbGVQb2ludC55IC0gY2VudHJlUG9pbnQueTtcbiAgY29uc3QgcmFkaWFsRGlzdGFuY2VGcm9tQ2VudGVyID0gTWF0aC5zcXJ0KGRpc3RhbmNlRnJvbVhDZW50ZXIgKiBkaXN0YW5jZUZyb21YQ2VudGVyICsgZGlzdGFuY2VGcm9tWUNlbnRlciAqIGRpc3RhbmNlRnJvbVlDZW50ZXIpO1xuICBsZXQgYW5nbGUgPSBNYXRoLmF0YW4yKGRpc3RhbmNlRnJvbVlDZW50ZXIsIGRpc3RhbmNlRnJvbVhDZW50ZXIpO1xuICBpZiAoYW5nbGUgPCAoLTAuNSAqIFBJKSkge1xuICAgIGFuZ2xlICs9IFRBVTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGFuZ2xlLFxuICAgIGRpc3RhbmNlOiByYWRpYWxEaXN0YW5jZUZyb21DZW50ZXJcbiAgfTtcbn1cbmZ1bmN0aW9uIGRpc3RhbmNlQmV0d2VlblBvaW50cyhwdDEsIHB0Mikge1xuICByZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KHB0Mi54IC0gcHQxLngsIDIpICsgTWF0aC5wb3cocHQyLnkgLSBwdDEueSwgMikpO1xufVxuZnVuY3Rpb24gX2FuZ2xlRGlmZihhLCBiKSB7XG4gIHJldHVybiAoYSAtIGIgKyBQSVRBVSkgJSBUQVUgLSBQSTtcbn1cbmZ1bmN0aW9uIF9ub3JtYWxpemVBbmdsZShhKSB7XG4gIHJldHVybiAoYSAlIFRBVSArIFRBVSkgJSBUQVU7XG59XG5mdW5jdGlvbiBfYW5nbGVCZXR3ZWVuKGFuZ2xlLCBzdGFydCwgZW5kLCBzYW1lQW5nbGVJc0Z1bGxDaXJjbGUpIHtcbiAgY29uc3QgYSA9IF9ub3JtYWxpemVBbmdsZShhbmdsZSk7XG4gIGNvbnN0IHMgPSBfbm9ybWFsaXplQW5nbGUoc3RhcnQpO1xuICBjb25zdCBlID0gX25vcm1hbGl6ZUFuZ2xlKGVuZCk7XG4gIGNvbnN0IGFuZ2xlVG9TdGFydCA9IF9ub3JtYWxpemVBbmdsZShzIC0gYSk7XG4gIGNvbnN0IGFuZ2xlVG9FbmQgPSBfbm9ybWFsaXplQW5nbGUoZSAtIGEpO1xuICBjb25zdCBzdGFydFRvQW5nbGUgPSBfbm9ybWFsaXplQW5nbGUoYSAtIHMpO1xuICBjb25zdCBlbmRUb0FuZ2xlID0gX25vcm1hbGl6ZUFuZ2xlKGEgLSBlKTtcbiAgcmV0dXJuIGEgPT09IHMgfHwgYSA9PT0gZSB8fCAoc2FtZUFuZ2xlSXNGdWxsQ2lyY2xlICYmIHMgPT09IGUpXG4gICAgfHwgKGFuZ2xlVG9TdGFydCA+IGFuZ2xlVG9FbmQgJiYgc3RhcnRUb0FuZ2xlIDwgZW5kVG9BbmdsZSk7XG59XG5mdW5jdGlvbiBfbGltaXRWYWx1ZSh2YWx1ZSwgbWluLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGgubWF4KG1pbiwgTWF0aC5taW4obWF4LCB2YWx1ZSkpO1xufVxuZnVuY3Rpb24gX2ludDE2UmFuZ2UodmFsdWUpIHtcbiAgcmV0dXJuIF9saW1pdFZhbHVlKHZhbHVlLCAtMzI3NjgsIDMyNzY3KTtcbn1cbmZ1bmN0aW9uIF9pc0JldHdlZW4odmFsdWUsIHN0YXJ0LCBlbmQsIGVwc2lsb24gPSAxZS02KSB7XG4gIHJldHVybiB2YWx1ZSA+PSBNYXRoLm1pbihzdGFydCwgZW5kKSAtIGVwc2lsb24gJiYgdmFsdWUgPD0gTWF0aC5tYXgoc3RhcnQsIGVuZCkgKyBlcHNpbG9uO1xufVxuXG5jb25zdCBhdEVkZ2UgPSAodCkgPT4gdCA9PT0gMCB8fCB0ID09PSAxO1xuY29uc3QgZWxhc3RpY0luID0gKHQsIHMsIHApID0+IC0oTWF0aC5wb3coMiwgMTAgKiAodCAtPSAxKSkgKiBNYXRoLnNpbigodCAtIHMpICogVEFVIC8gcCkpO1xuY29uc3QgZWxhc3RpY091dCA9ICh0LCBzLCBwKSA9PiBNYXRoLnBvdygyLCAtMTAgKiB0KSAqIE1hdGguc2luKCh0IC0gcykgKiBUQVUgLyBwKSArIDE7XG5jb25zdCBlZmZlY3RzID0ge1xuICBsaW5lYXI6IHQgPT4gdCxcbiAgZWFzZUluUXVhZDogdCA9PiB0ICogdCxcbiAgZWFzZU91dFF1YWQ6IHQgPT4gLXQgKiAodCAtIDIpLFxuICBlYXNlSW5PdXRRdWFkOiB0ID0+ICgodCAvPSAwLjUpIDwgMSlcbiAgICA/IDAuNSAqIHQgKiB0XG4gICAgOiAtMC41ICogKCgtLXQpICogKHQgLSAyKSAtIDEpLFxuICBlYXNlSW5DdWJpYzogdCA9PiB0ICogdCAqIHQsXG4gIGVhc2VPdXRDdWJpYzogdCA9PiAodCAtPSAxKSAqIHQgKiB0ICsgMSxcbiAgZWFzZUluT3V0Q3ViaWM6IHQgPT4gKCh0IC89IDAuNSkgPCAxKVxuICAgID8gMC41ICogdCAqIHQgKiB0XG4gICAgOiAwLjUgKiAoKHQgLT0gMikgKiB0ICogdCArIDIpLFxuICBlYXNlSW5RdWFydDogdCA9PiB0ICogdCAqIHQgKiB0LFxuICBlYXNlT3V0UXVhcnQ6IHQgPT4gLSgodCAtPSAxKSAqIHQgKiB0ICogdCAtIDEpLFxuICBlYXNlSW5PdXRRdWFydDogdCA9PiAoKHQgLz0gMC41KSA8IDEpXG4gICAgPyAwLjUgKiB0ICogdCAqIHQgKiB0XG4gICAgOiAtMC41ICogKCh0IC09IDIpICogdCAqIHQgKiB0IC0gMiksXG4gIGVhc2VJblF1aW50OiB0ID0+IHQgKiB0ICogdCAqIHQgKiB0LFxuICBlYXNlT3V0UXVpbnQ6IHQgPT4gKHQgLT0gMSkgKiB0ICogdCAqIHQgKiB0ICsgMSxcbiAgZWFzZUluT3V0UXVpbnQ6IHQgPT4gKCh0IC89IDAuNSkgPCAxKVxuICAgID8gMC41ICogdCAqIHQgKiB0ICogdCAqIHRcbiAgICA6IDAuNSAqICgodCAtPSAyKSAqIHQgKiB0ICogdCAqIHQgKyAyKSxcbiAgZWFzZUluU2luZTogdCA9PiAtTWF0aC5jb3ModCAqIEhBTEZfUEkpICsgMSxcbiAgZWFzZU91dFNpbmU6IHQgPT4gTWF0aC5zaW4odCAqIEhBTEZfUEkpLFxuICBlYXNlSW5PdXRTaW5lOiB0ID0+IC0wLjUgKiAoTWF0aC5jb3MoUEkgKiB0KSAtIDEpLFxuICBlYXNlSW5FeHBvOiB0ID0+ICh0ID09PSAwKSA/IDAgOiBNYXRoLnBvdygyLCAxMCAqICh0IC0gMSkpLFxuICBlYXNlT3V0RXhwbzogdCA9PiAodCA9PT0gMSkgPyAxIDogLU1hdGgucG93KDIsIC0xMCAqIHQpICsgMSxcbiAgZWFzZUluT3V0RXhwbzogdCA9PiBhdEVkZ2UodCkgPyB0IDogdCA8IDAuNVxuICAgID8gMC41ICogTWF0aC5wb3coMiwgMTAgKiAodCAqIDIgLSAxKSlcbiAgICA6IDAuNSAqICgtTWF0aC5wb3coMiwgLTEwICogKHQgKiAyIC0gMSkpICsgMiksXG4gIGVhc2VJbkNpcmM6IHQgPT4gKHQgPj0gMSkgPyB0IDogLShNYXRoLnNxcnQoMSAtIHQgKiB0KSAtIDEpLFxuICBlYXNlT3V0Q2lyYzogdCA9PiBNYXRoLnNxcnQoMSAtICh0IC09IDEpICogdCksXG4gIGVhc2VJbk91dENpcmM6IHQgPT4gKCh0IC89IDAuNSkgPCAxKVxuICAgID8gLTAuNSAqIChNYXRoLnNxcnQoMSAtIHQgKiB0KSAtIDEpXG4gICAgOiAwLjUgKiAoTWF0aC5zcXJ0KDEgLSAodCAtPSAyKSAqIHQpICsgMSksXG4gIGVhc2VJbkVsYXN0aWM6IHQgPT4gYXRFZGdlKHQpID8gdCA6IGVsYXN0aWNJbih0LCAwLjA3NSwgMC4zKSxcbiAgZWFzZU91dEVsYXN0aWM6IHQgPT4gYXRFZGdlKHQpID8gdCA6IGVsYXN0aWNPdXQodCwgMC4wNzUsIDAuMyksXG4gIGVhc2VJbk91dEVsYXN0aWModCkge1xuICAgIGNvbnN0IHMgPSAwLjExMjU7XG4gICAgY29uc3QgcCA9IDAuNDU7XG4gICAgcmV0dXJuIGF0RWRnZSh0KSA/IHQgOlxuICAgICAgdCA8IDAuNVxuICAgICAgICA/IDAuNSAqIGVsYXN0aWNJbih0ICogMiwgcywgcClcbiAgICAgICAgOiAwLjUgKyAwLjUgKiBlbGFzdGljT3V0KHQgKiAyIC0gMSwgcywgcCk7XG4gIH0sXG4gIGVhc2VJbkJhY2sodCkge1xuICAgIGNvbnN0IHMgPSAxLjcwMTU4O1xuICAgIHJldHVybiB0ICogdCAqICgocyArIDEpICogdCAtIHMpO1xuICB9LFxuICBlYXNlT3V0QmFjayh0KSB7XG4gICAgY29uc3QgcyA9IDEuNzAxNTg7XG4gICAgcmV0dXJuICh0IC09IDEpICogdCAqICgocyArIDEpICogdCArIHMpICsgMTtcbiAgfSxcbiAgZWFzZUluT3V0QmFjayh0KSB7XG4gICAgbGV0IHMgPSAxLjcwMTU4O1xuICAgIGlmICgodCAvPSAwLjUpIDwgMSkge1xuICAgICAgcmV0dXJuIDAuNSAqICh0ICogdCAqICgoKHMgKj0gKDEuNTI1KSkgKyAxKSAqIHQgLSBzKSk7XG4gICAgfVxuICAgIHJldHVybiAwLjUgKiAoKHQgLT0gMikgKiB0ICogKCgocyAqPSAoMS41MjUpKSArIDEpICogdCArIHMpICsgMik7XG4gIH0sXG4gIGVhc2VJbkJvdW5jZTogdCA9PiAxIC0gZWZmZWN0cy5lYXNlT3V0Qm91bmNlKDEgLSB0KSxcbiAgZWFzZU91dEJvdW5jZSh0KSB7XG4gICAgY29uc3QgbSA9IDcuNTYyNTtcbiAgICBjb25zdCBkID0gMi43NTtcbiAgICBpZiAodCA8ICgxIC8gZCkpIHtcbiAgICAgIHJldHVybiBtICogdCAqIHQ7XG4gICAgfVxuICAgIGlmICh0IDwgKDIgLyBkKSkge1xuICAgICAgcmV0dXJuIG0gKiAodCAtPSAoMS41IC8gZCkpICogdCArIDAuNzU7XG4gICAgfVxuICAgIGlmICh0IDwgKDIuNSAvIGQpKSB7XG4gICAgICByZXR1cm4gbSAqICh0IC09ICgyLjI1IC8gZCkpICogdCArIDAuOTM3NTtcbiAgICB9XG4gICAgcmV0dXJuIG0gKiAodCAtPSAoMi42MjUgLyBkKSkgKiB0ICsgMC45ODQzNzU7XG4gIH0sXG4gIGVhc2VJbk91dEJvdW5jZTogdCA9PiAodCA8IDAuNSlcbiAgICA/IGVmZmVjdHMuZWFzZUluQm91bmNlKHQgKiAyKSAqIDAuNVxuICAgIDogZWZmZWN0cy5lYXNlT3V0Qm91bmNlKHQgKiAyIC0gMSkgKiAwLjUgKyAwLjUsXG59O1xuXG4vKiFcbiAqIEBrdXJrbGUvY29sb3IgdjAuMS45XG4gKiBodHRwczovL2dpdGh1Yi5jb20va3Vya2xlL2NvbG9yI3JlYWRtZVxuICogKGMpIDIwMjAgSnVra2EgS3Vya2VsYVxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlXG4gKi9cbmNvbnN0IG1hcCA9IHswOiAwLCAxOiAxLCAyOiAyLCAzOiAzLCA0OiA0LCA1OiA1LCA2OiA2LCA3OiA3LCA4OiA4LCA5OiA5LCBBOiAxMCwgQjogMTEsIEM6IDEyLCBEOiAxMywgRTogMTQsIEY6IDE1LCBhOiAxMCwgYjogMTEsIGM6IDEyLCBkOiAxMywgZTogMTQsIGY6IDE1fTtcbmNvbnN0IGhleCA9ICcwMTIzNDU2Nzg5QUJDREVGJztcbmNvbnN0IGgxID0gKGIpID0+IGhleFtiICYgMHhGXTtcbmNvbnN0IGgyID0gKGIpID0+IGhleFsoYiAmIDB4RjApID4+IDRdICsgaGV4W2IgJiAweEZdO1xuY29uc3QgZXEgPSAoYikgPT4gKCgoYiAmIDB4RjApID4+IDQpID09PSAoYiAmIDB4RikpO1xuZnVuY3Rpb24gaXNTaG9ydCh2KSB7XG5cdHJldHVybiBlcSh2LnIpICYmIGVxKHYuZykgJiYgZXEodi5iKSAmJiBlcSh2LmEpO1xufVxuZnVuY3Rpb24gaGV4UGFyc2Uoc3RyKSB7XG5cdHZhciBsZW4gPSBzdHIubGVuZ3RoO1xuXHR2YXIgcmV0O1xuXHRpZiAoc3RyWzBdID09PSAnIycpIHtcblx0XHRpZiAobGVuID09PSA0IHx8IGxlbiA9PT0gNSkge1xuXHRcdFx0cmV0ID0ge1xuXHRcdFx0XHRyOiAyNTUgJiBtYXBbc3RyWzFdXSAqIDE3LFxuXHRcdFx0XHRnOiAyNTUgJiBtYXBbc3RyWzJdXSAqIDE3LFxuXHRcdFx0XHRiOiAyNTUgJiBtYXBbc3RyWzNdXSAqIDE3LFxuXHRcdFx0XHRhOiBsZW4gPT09IDUgPyBtYXBbc3RyWzRdXSAqIDE3IDogMjU1XG5cdFx0XHR9O1xuXHRcdH0gZWxzZSBpZiAobGVuID09PSA3IHx8IGxlbiA9PT0gOSkge1xuXHRcdFx0cmV0ID0ge1xuXHRcdFx0XHRyOiBtYXBbc3RyWzFdXSA8PCA0IHwgbWFwW3N0clsyXV0sXG5cdFx0XHRcdGc6IG1hcFtzdHJbM11dIDw8IDQgfCBtYXBbc3RyWzRdXSxcblx0XHRcdFx0YjogbWFwW3N0cls1XV0gPDwgNCB8IG1hcFtzdHJbNl1dLFxuXHRcdFx0XHRhOiBsZW4gPT09IDkgPyAobWFwW3N0cls3XV0gPDwgNCB8IG1hcFtzdHJbOF1dKSA6IDI1NVxuXHRcdFx0fTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJldDtcbn1cbmZ1bmN0aW9uIGhleFN0cmluZyh2KSB7XG5cdHZhciBmID0gaXNTaG9ydCh2KSA/IGgxIDogaDI7XG5cdHJldHVybiB2XG5cdFx0PyAnIycgKyBmKHYucikgKyBmKHYuZykgKyBmKHYuYikgKyAodi5hIDwgMjU1ID8gZih2LmEpIDogJycpXG5cdFx0OiB2O1xufVxuZnVuY3Rpb24gcm91bmQodikge1xuXHRyZXR1cm4gdiArIDAuNSB8IDA7XG59XG5jb25zdCBsaW0gPSAodiwgbCwgaCkgPT4gTWF0aC5tYXgoTWF0aC5taW4odiwgaCksIGwpO1xuZnVuY3Rpb24gcDJiKHYpIHtcblx0cmV0dXJuIGxpbShyb3VuZCh2ICogMi41NSksIDAsIDI1NSk7XG59XG5mdW5jdGlvbiBuMmIodikge1xuXHRyZXR1cm4gbGltKHJvdW5kKHYgKiAyNTUpLCAwLCAyNTUpO1xufVxuZnVuY3Rpb24gYjJuKHYpIHtcblx0cmV0dXJuIGxpbShyb3VuZCh2IC8gMi41NSkgLyAxMDAsIDAsIDEpO1xufVxuZnVuY3Rpb24gbjJwKHYpIHtcblx0cmV0dXJuIGxpbShyb3VuZCh2ICogMTAwKSwgMCwgMTAwKTtcbn1cbmNvbnN0IFJHQl9SRSA9IC9ecmdiYT9cXChcXHMqKFstKy5cXGRdKykoJSk/W1xccyxdKyhbLSsuZVxcZF0rKSglKT9bXFxzLF0rKFstKy5lXFxkXSspKCUpPyg/OltcXHMsL10rKFstKy5lXFxkXSspKCUpPyk/XFxzKlxcKSQvO1xuZnVuY3Rpb24gcmdiUGFyc2Uoc3RyKSB7XG5cdGNvbnN0IG0gPSBSR0JfUkUuZXhlYyhzdHIpO1xuXHRsZXQgYSA9IDI1NTtcblx0bGV0IHIsIGcsIGI7XG5cdGlmICghbSkge1xuXHRcdHJldHVybjtcblx0fVxuXHRpZiAobVs3XSAhPT0gcikge1xuXHRcdGNvbnN0IHYgPSArbVs3XTtcblx0XHRhID0gMjU1ICYgKG1bOF0gPyBwMmIodikgOiB2ICogMjU1KTtcblx0fVxuXHRyID0gK21bMV07XG5cdGcgPSArbVszXTtcblx0YiA9ICttWzVdO1xuXHRyID0gMjU1ICYgKG1bMl0gPyBwMmIocikgOiByKTtcblx0ZyA9IDI1NSAmIChtWzRdID8gcDJiKGcpIDogZyk7XG5cdGIgPSAyNTUgJiAobVs2XSA/IHAyYihiKSA6IGIpO1xuXHRyZXR1cm4ge1xuXHRcdHI6IHIsXG5cdFx0ZzogZyxcblx0XHRiOiBiLFxuXHRcdGE6IGFcblx0fTtcbn1cbmZ1bmN0aW9uIHJnYlN0cmluZyh2KSB7XG5cdHJldHVybiB2ICYmIChcblx0XHR2LmEgPCAyNTVcblx0XHRcdD8gYHJnYmEoJHt2LnJ9LCAke3YuZ30sICR7di5ifSwgJHtiMm4odi5hKX0pYFxuXHRcdFx0OiBgcmdiKCR7di5yfSwgJHt2Lmd9LCAke3YuYn0pYFxuXHQpO1xufVxuY29uc3QgSFVFX1JFID0gL14oaHNsYT98aHdifGhzdilcXChcXHMqKFstKy5lXFxkXSspKD86ZGVnKT9bXFxzLF0rKFstKy5lXFxkXSspJVtcXHMsXSsoWy0rLmVcXGRdKyklKD86W1xccyxdKyhbLSsuZVxcZF0rKSglKT8pP1xccypcXCkkLztcbmZ1bmN0aW9uIGhzbDJyZ2JuKGgsIHMsIGwpIHtcblx0Y29uc3QgYSA9IHMgKiBNYXRoLm1pbihsLCAxIC0gbCk7XG5cdGNvbnN0IGYgPSAobiwgayA9IChuICsgaCAvIDMwKSAlIDEyKSA9PiBsIC0gYSAqIE1hdGgubWF4KE1hdGgubWluKGsgLSAzLCA5IC0gaywgMSksIC0xKTtcblx0cmV0dXJuIFtmKDApLCBmKDgpLCBmKDQpXTtcbn1cbmZ1bmN0aW9uIGhzdjJyZ2JuKGgsIHMsIHYpIHtcblx0Y29uc3QgZiA9IChuLCBrID0gKG4gKyBoIC8gNjApICUgNikgPT4gdiAtIHYgKiBzICogTWF0aC5tYXgoTWF0aC5taW4oaywgNCAtIGssIDEpLCAwKTtcblx0cmV0dXJuIFtmKDUpLCBmKDMpLCBmKDEpXTtcbn1cbmZ1bmN0aW9uIGh3YjJyZ2JuKGgsIHcsIGIpIHtcblx0Y29uc3QgcmdiID0gaHNsMnJnYm4oaCwgMSwgMC41KTtcblx0bGV0IGk7XG5cdGlmICh3ICsgYiA+IDEpIHtcblx0XHRpID0gMSAvICh3ICsgYik7XG5cdFx0dyAqPSBpO1xuXHRcdGIgKj0gaTtcblx0fVxuXHRmb3IgKGkgPSAwOyBpIDwgMzsgaSsrKSB7XG5cdFx0cmdiW2ldICo9IDEgLSB3IC0gYjtcblx0XHRyZ2JbaV0gKz0gdztcblx0fVxuXHRyZXR1cm4gcmdiO1xufVxuZnVuY3Rpb24gcmdiMmhzbCh2KSB7XG5cdGNvbnN0IHJhbmdlID0gMjU1O1xuXHRjb25zdCByID0gdi5yIC8gcmFuZ2U7XG5cdGNvbnN0IGcgPSB2LmcgLyByYW5nZTtcblx0Y29uc3QgYiA9IHYuYiAvIHJhbmdlO1xuXHRjb25zdCBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcblx0Y29uc3QgbWluID0gTWF0aC5taW4ociwgZywgYik7XG5cdGNvbnN0IGwgPSAobWF4ICsgbWluKSAvIDI7XG5cdGxldCBoLCBzLCBkO1xuXHRpZiAobWF4ICE9PSBtaW4pIHtcblx0XHRkID0gbWF4IC0gbWluO1xuXHRcdHMgPSBsID4gMC41ID8gZCAvICgyIC0gbWF4IC0gbWluKSA6IGQgLyAobWF4ICsgbWluKTtcblx0XHRoID0gbWF4ID09PSByXG5cdFx0XHQ/ICgoZyAtIGIpIC8gZCkgKyAoZyA8IGIgPyA2IDogMClcblx0XHRcdDogbWF4ID09PSBnXG5cdFx0XHRcdD8gKGIgLSByKSAvIGQgKyAyXG5cdFx0XHRcdDogKHIgLSBnKSAvIGQgKyA0O1xuXHRcdGggPSBoICogNjAgKyAwLjU7XG5cdH1cblx0cmV0dXJuIFtoIHwgMCwgcyB8fCAwLCBsXTtcbn1cbmZ1bmN0aW9uIGNhbGxuKGYsIGEsIGIsIGMpIHtcblx0cmV0dXJuIChcblx0XHRBcnJheS5pc0FycmF5KGEpXG5cdFx0XHQ/IGYoYVswXSwgYVsxXSwgYVsyXSlcblx0XHRcdDogZihhLCBiLCBjKVxuXHQpLm1hcChuMmIpO1xufVxuZnVuY3Rpb24gaHNsMnJnYihoLCBzLCBsKSB7XG5cdHJldHVybiBjYWxsbihoc2wycmdibiwgaCwgcywgbCk7XG59XG5mdW5jdGlvbiBod2IycmdiKGgsIHcsIGIpIHtcblx0cmV0dXJuIGNhbGxuKGh3YjJyZ2JuLCBoLCB3LCBiKTtcbn1cbmZ1bmN0aW9uIGhzdjJyZ2IoaCwgcywgdikge1xuXHRyZXR1cm4gY2FsbG4oaHN2MnJnYm4sIGgsIHMsIHYpO1xufVxuZnVuY3Rpb24gaHVlKGgpIHtcblx0cmV0dXJuIChoICUgMzYwICsgMzYwKSAlIDM2MDtcbn1cbmZ1bmN0aW9uIGh1ZVBhcnNlKHN0cikge1xuXHRjb25zdCBtID0gSFVFX1JFLmV4ZWMoc3RyKTtcblx0bGV0IGEgPSAyNTU7XG5cdGxldCB2O1xuXHRpZiAoIW0pIHtcblx0XHRyZXR1cm47XG5cdH1cblx0aWYgKG1bNV0gIT09IHYpIHtcblx0XHRhID0gbVs2XSA/IHAyYigrbVs1XSkgOiBuMmIoK21bNV0pO1xuXHR9XG5cdGNvbnN0IGggPSBodWUoK21bMl0pO1xuXHRjb25zdCBwMSA9ICttWzNdIC8gMTAwO1xuXHRjb25zdCBwMiA9ICttWzRdIC8gMTAwO1xuXHRpZiAobVsxXSA9PT0gJ2h3YicpIHtcblx0XHR2ID0gaHdiMnJnYihoLCBwMSwgcDIpO1xuXHR9IGVsc2UgaWYgKG1bMV0gPT09ICdoc3YnKSB7XG5cdFx0diA9IGhzdjJyZ2IoaCwgcDEsIHAyKTtcblx0fSBlbHNlIHtcblx0XHR2ID0gaHNsMnJnYihoLCBwMSwgcDIpO1xuXHR9XG5cdHJldHVybiB7XG5cdFx0cjogdlswXSxcblx0XHRnOiB2WzFdLFxuXHRcdGI6IHZbMl0sXG5cdFx0YTogYVxuXHR9O1xufVxuZnVuY3Rpb24gcm90YXRlKHYsIGRlZykge1xuXHR2YXIgaCA9IHJnYjJoc2wodik7XG5cdGhbMF0gPSBodWUoaFswXSArIGRlZyk7XG5cdGggPSBoc2wycmdiKGgpO1xuXHR2LnIgPSBoWzBdO1xuXHR2LmcgPSBoWzFdO1xuXHR2LmIgPSBoWzJdO1xufVxuZnVuY3Rpb24gaHNsU3RyaW5nKHYpIHtcblx0aWYgKCF2KSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cdGNvbnN0IGEgPSByZ2IyaHNsKHYpO1xuXHRjb25zdCBoID0gYVswXTtcblx0Y29uc3QgcyA9IG4ycChhWzFdKTtcblx0Y29uc3QgbCA9IG4ycChhWzJdKTtcblx0cmV0dXJuIHYuYSA8IDI1NVxuXHRcdD8gYGhzbGEoJHtofSwgJHtzfSUsICR7bH0lLCAke2Iybih2LmEpfSlgXG5cdFx0OiBgaHNsKCR7aH0sICR7c30lLCAke2x9JSlgO1xufVxuY29uc3QgbWFwJDEgPSB7XG5cdHg6ICdkYXJrJyxcblx0WjogJ2xpZ2h0Jyxcblx0WTogJ3JlJyxcblx0WDogJ2JsdScsXG5cdFc6ICdncicsXG5cdFY6ICdtZWRpdW0nLFxuXHRVOiAnc2xhdGUnLFxuXHRBOiAnZWUnLFxuXHRUOiAnb2wnLFxuXHRTOiAnb3InLFxuXHRCOiAncmEnLFxuXHRDOiAnbGF0ZWcnLFxuXHREOiAnaWdodHMnLFxuXHRSOiAnaW4nLFxuXHRROiAndHVycXVvaXMnLFxuXHRFOiAnaGknLFxuXHRQOiAncm8nLFxuXHRPOiAnYWwnLFxuXHROOiAnbGUnLFxuXHRNOiAnZGUnLFxuXHRMOiAneWVsbG8nLFxuXHRGOiAnZW4nLFxuXHRLOiAnY2gnLFxuXHRHOiAnYXJrcycsXG5cdEg6ICdlYScsXG5cdEk6ICdpZ2h0ZycsXG5cdEo6ICd3aCdcbn07XG5jb25zdCBuYW1lcyA9IHtcblx0T2ljZVhlOiAnZjBmOGZmJyxcblx0YW50aXF1ZXdFdGU6ICdmYWViZDcnLFxuXHRhcXVhOiAnZmZmZicsXG5cdGFxdWFtYXJSZTogJzdmZmZkNCcsXG5cdGF6dVk6ICdmMGZmZmYnLFxuXHRiZWlnZTogJ2Y1ZjVkYycsXG5cdGJpc3F1ZTogJ2ZmZTRjNCcsXG5cdGJsYWNrOiAnMCcsXG5cdGJsYW5LZWRPbW9uZDogJ2ZmZWJjZCcsXG5cdFhlOiAnZmYnLFxuXHRYZXZpVGV0OiAnOGEyYmUyJyxcblx0YlB3bjogJ2E1MmEyYScsXG5cdGJ1cmx5d29vZDogJ2RlYjg4NycsXG5cdGNhTXRYZTogJzVmOWVhMCcsXG5cdEthcnRZdXNlOiAnN2ZmZjAwJyxcblx0S29jVGF0ZTogJ2QyNjkxZScsXG5cdGNTTzogJ2ZmN2Y1MCcsXG5cdGNTbmZsb3dlclhlOiAnNjQ5NWVkJyxcblx0Y1Nuc2lsazogJ2ZmZjhkYycsXG5cdGNyaW1zb246ICdkYzE0M2MnLFxuXHRjeWFuOiAnZmZmZicsXG5cdHhYZTogJzhiJyxcblx0eGN5YW46ICc4YjhiJyxcblx0eGdUTW5QZDogJ2I4ODYwYicsXG5cdHhXYXk6ICdhOWE5YTknLFxuXHR4Z1lGOiAnNjQwMCcsXG5cdHhnWXk6ICdhOWE5YTknLFxuXHR4a2hha2k6ICdiZGI3NmInLFxuXHR4bWFnRnRhOiAnOGIwMDhiJyxcblx0eFRpdmVnWUY6ICc1NTZiMmYnLFxuXHR4U2FuZ2U6ICdmZjhjMDAnLFxuXHR4U2NFZDogJzk5MzJjYycsXG5cdHhZZDogJzhiMDAwMCcsXG5cdHhzT21vbjogJ2U5OTY3YScsXG5cdHhzSGdZRjogJzhmYmM4ZicsXG5cdHhVWGU6ICc0ODNkOGInLFxuXHR4VVdheTogJzJmNGY0ZicsXG5cdHhVZ1l5OiAnMmY0ZjRmJyxcblx0eFFlOiAnY2VkMScsXG5cdHh2aVRldDogJzk0MDBkMycsXG5cdGRBcHBSazogJ2ZmMTQ5MycsXG5cdGRBcHNreVhlOiAnYmZmZicsXG5cdGRpbVdheTogJzY5Njk2OScsXG5cdGRpbWdZeTogJzY5Njk2OScsXG5cdGRvZGdlclhlOiAnMWU5MGZmJyxcblx0ZmlZYnJpY2s6ICdiMjIyMjInLFxuXHRmbFNPd0V0ZTogJ2ZmZmFmMCcsXG5cdGZvWXN0V0FuOiAnMjI4YjIyJyxcblx0ZnVLc2lhOiAnZmYwMGZmJyxcblx0Z2FSc2JTbzogJ2RjZGNkYycsXG5cdGdob3N0d0V0ZTogJ2Y4ZjhmZicsXG5cdGdUZDogJ2ZmZDcwMCcsXG5cdGdUTW5QZDogJ2RhYTUyMCcsXG5cdFdheTogJzgwODA4MCcsXG5cdGdZRjogJzgwMDAnLFxuXHRnWUZMdzogJ2FkZmYyZicsXG5cdGdZeTogJzgwODA4MCcsXG5cdGhvbmV5TXc6ICdmMGZmZjAnLFxuXHRob3RwUms6ICdmZjY5YjQnLFxuXHRSZGlhbllkOiAnY2Q1YzVjJyxcblx0UmRpZ286ICc0YjAwODInLFxuXHRpdlN5OiAnZmZmZmYwJyxcblx0a2hha2k6ICdmMGU2OGMnLFxuXHRsYXZGTXI6ICdlNmU2ZmEnLFxuXHRsYXZGTXJYc2g6ICdmZmYwZjUnLFxuXHRsYXduZ1lGOiAnN2NmYzAwJyxcblx0Tm1vbmNFZmZvbjogJ2ZmZmFjZCcsXG5cdFpYZTogJ2FkZDhlNicsXG5cdFpjU086ICdmMDgwODAnLFxuXHRaY3lhbjogJ2UwZmZmZicsXG5cdFpnVE1uUGRMdzogJ2ZhZmFkMicsXG5cdFpXYXk6ICdkM2QzZDMnLFxuXHRaZ1lGOiAnOTBlZTkwJyxcblx0WmdZeTogJ2QzZDNkMycsXG5cdFpwUms6ICdmZmI2YzEnLFxuXHRac09tb246ICdmZmEwN2EnLFxuXHRac0hnWUY6ICcyMGIyYWEnLFxuXHRac2t5WGU6ICc4N2NlZmEnLFxuXHRaVVdheTogJzc3ODg5OScsXG5cdFpVZ1l5OiAnNzc4ODk5Jyxcblx0WnN0QWxYZTogJ2IwYzRkZScsXG5cdFpMdzogJ2ZmZmZlMCcsXG5cdGxpbWU6ICdmZjAwJyxcblx0bGltZWdZRjogJzMyY2QzMicsXG5cdGxSRjogJ2ZhZjBlNicsXG5cdG1hZ0Z0YTogJ2ZmMDBmZicsXG5cdG1hUG9uOiAnODAwMDAwJyxcblx0VmFxdWFtYXJSZTogJzY2Y2RhYScsXG5cdFZYZTogJ2NkJyxcblx0VlNjRWQ6ICdiYTU1ZDMnLFxuXHRWcHVycE46ICc5MzcwZGInLFxuXHRWc0hnWUY6ICczY2IzNzEnLFxuXHRWVVhlOiAnN2I2OGVlJyxcblx0VnNwclJnZ1lGOiAnZmE5YScsXG5cdFZRZTogJzQ4ZDFjYycsXG5cdFZ2aVRldFlkOiAnYzcxNTg1Jyxcblx0bWlkbmlnaHRYZTogJzE5MTk3MCcsXG5cdG1SdGNZYW06ICdmNWZmZmEnLFxuXHRtaXN0eVBzZTogJ2ZmZTRlMScsXG5cdG1vY2Nhc1I6ICdmZmU0YjUnLFxuXHRuYXZham93RXRlOiAnZmZkZWFkJyxcblx0bmF2eTogJzgwJyxcblx0VGRsYWNlOiAnZmRmNWU2Jyxcblx0VGl2ZTogJzgwODAwMCcsXG5cdFRpdmVkQmI6ICc2YjhlMjMnLFxuXHRTYW5nZTogJ2ZmYTUwMCcsXG5cdFNhbmdlWWQ6ICdmZjQ1MDAnLFxuXHRTY0VkOiAnZGE3MGQ2Jyxcblx0cE9lZ1RNblBkOiAnZWVlOGFhJyxcblx0cE9lZ1lGOiAnOThmYjk4Jyxcblx0cE9lUWU6ICdhZmVlZWUnLFxuXHRwT2V2aVRldFlkOiAnZGI3MDkzJyxcblx0cGFwYXlhd0VwOiAnZmZlZmQ1Jyxcblx0cEhLcHVmZjogJ2ZmZGFiOScsXG5cdHBlcnU6ICdjZDg1M2YnLFxuXHRwUms6ICdmZmMwY2InLFxuXHRwbHVtOiAnZGRhMGRkJyxcblx0cG93TXJYZTogJ2IwZTBlNicsXG5cdHB1cnBOOiAnODAwMDgwJyxcblx0WWJlY2NhcHVycE46ICc2NjMzOTknLFxuXHRZZDogJ2ZmMDAwMCcsXG5cdFBzeWJyb3duOiAnYmM4ZjhmJyxcblx0UHlPWGU6ICc0MTY5ZTEnLFxuXHRzYWRkTmJQd246ICc4YjQ1MTMnLFxuXHRzT21vbjogJ2ZhODA3MicsXG5cdHNhbmR5YlB3bjogJ2Y0YTQ2MCcsXG5cdHNIZ1lGOiAnMmU4YjU3Jyxcblx0c0hzaGVsbDogJ2ZmZjVlZScsXG5cdHNpRm5hOiAnYTA1MjJkJyxcblx0c2lsdmVyOiAnYzBjMGMwJyxcblx0c2t5WGU6ICc4N2NlZWInLFxuXHRVWGU6ICc2YTVhY2QnLFxuXHRVV2F5OiAnNzA4MDkwJyxcblx0VWdZeTogJzcwODA5MCcsXG5cdHNub3c6ICdmZmZhZmEnLFxuXHRzcHJSZ2dZRjogJ2ZmN2YnLFxuXHRzdEFsWGU6ICc0NjgyYjQnLFxuXHR0YW46ICdkMmI0OGMnLFxuXHR0ZU86ICc4MDgwJyxcblx0dEVzdE46ICdkOGJmZDgnLFxuXHR0b21hdG86ICdmZjYzNDcnLFxuXHRRZTogJzQwZTBkMCcsXG5cdHZpVGV0OiAnZWU4MmVlJyxcblx0Skh0OiAnZjVkZWIzJyxcblx0d0V0ZTogJ2ZmZmZmZicsXG5cdHdFdGVzbW9rZTogJ2Y1ZjVmNScsXG5cdEx3OiAnZmZmZjAwJyxcblx0THdnWUY6ICc5YWNkMzInXG59O1xuZnVuY3Rpb24gdW5wYWNrKCkge1xuXHRjb25zdCB1bnBhY2tlZCA9IHt9O1xuXHRjb25zdCBrZXlzID0gT2JqZWN0LmtleXMobmFtZXMpO1xuXHRjb25zdCB0a2V5cyA9IE9iamVjdC5rZXlzKG1hcCQxKTtcblx0bGV0IGksIGosIGssIG9rLCBuaztcblx0Zm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcblx0XHRvayA9IG5rID0ga2V5c1tpXTtcblx0XHRmb3IgKGogPSAwOyBqIDwgdGtleXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdGsgPSB0a2V5c1tqXTtcblx0XHRcdG5rID0gbmsucmVwbGFjZShrLCBtYXAkMVtrXSk7XG5cdFx0fVxuXHRcdGsgPSBwYXJzZUludChuYW1lc1tva10sIDE2KTtcblx0XHR1bnBhY2tlZFtua10gPSBbayA+PiAxNiAmIDB4RkYsIGsgPj4gOCAmIDB4RkYsIGsgJiAweEZGXTtcblx0fVxuXHRyZXR1cm4gdW5wYWNrZWQ7XG59XG5sZXQgbmFtZXMkMTtcbmZ1bmN0aW9uIG5hbWVQYXJzZShzdHIpIHtcblx0aWYgKCFuYW1lcyQxKSB7XG5cdFx0bmFtZXMkMSA9IHVucGFjaygpO1xuXHRcdG5hbWVzJDEudHJhbnNwYXJlbnQgPSBbMCwgMCwgMCwgMF07XG5cdH1cblx0Y29uc3QgYSA9IG5hbWVzJDFbc3RyLnRvTG93ZXJDYXNlKCldO1xuXHRyZXR1cm4gYSAmJiB7XG5cdFx0cjogYVswXSxcblx0XHRnOiBhWzFdLFxuXHRcdGI6IGFbMl0sXG5cdFx0YTogYS5sZW5ndGggPT09IDQgPyBhWzNdIDogMjU1XG5cdH07XG59XG5mdW5jdGlvbiBtb2RIU0wodiwgaSwgcmF0aW8pIHtcblx0aWYgKHYpIHtcblx0XHRsZXQgdG1wID0gcmdiMmhzbCh2KTtcblx0XHR0bXBbaV0gPSBNYXRoLm1heCgwLCBNYXRoLm1pbih0bXBbaV0gKyB0bXBbaV0gKiByYXRpbywgaSA9PT0gMCA/IDM2MCA6IDEpKTtcblx0XHR0bXAgPSBoc2wycmdiKHRtcCk7XG5cdFx0di5yID0gdG1wWzBdO1xuXHRcdHYuZyA9IHRtcFsxXTtcblx0XHR2LmIgPSB0bXBbMl07XG5cdH1cbn1cbmZ1bmN0aW9uIGNsb25lKHYsIHByb3RvKSB7XG5cdHJldHVybiB2ID8gT2JqZWN0LmFzc2lnbihwcm90byB8fCB7fSwgdikgOiB2O1xufVxuZnVuY3Rpb24gZnJvbU9iamVjdChpbnB1dCkge1xuXHR2YXIgdiA9IHtyOiAwLCBnOiAwLCBiOiAwLCBhOiAyNTV9O1xuXHRpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcblx0XHRpZiAoaW5wdXQubGVuZ3RoID49IDMpIHtcblx0XHRcdHYgPSB7cjogaW5wdXRbMF0sIGc6IGlucHV0WzFdLCBiOiBpbnB1dFsyXSwgYTogMjU1fTtcblx0XHRcdGlmIChpbnB1dC5sZW5ndGggPiAzKSB7XG5cdFx0XHRcdHYuYSA9IG4yYihpbnB1dFszXSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHYgPSBjbG9uZShpbnB1dCwge3I6IDAsIGc6IDAsIGI6IDAsIGE6IDF9KTtcblx0XHR2LmEgPSBuMmIodi5hKTtcblx0fVxuXHRyZXR1cm4gdjtcbn1cbmZ1bmN0aW9uIGZ1bmN0aW9uUGFyc2Uoc3RyKSB7XG5cdGlmIChzdHIuY2hhckF0KDApID09PSAncicpIHtcblx0XHRyZXR1cm4gcmdiUGFyc2Uoc3RyKTtcblx0fVxuXHRyZXR1cm4gaHVlUGFyc2Uoc3RyKTtcbn1cbmNsYXNzIENvbG9yIHtcblx0Y29uc3RydWN0b3IoaW5wdXQpIHtcblx0XHRpZiAoaW5wdXQgaW5zdGFuY2VvZiBDb2xvcikge1xuXHRcdFx0cmV0dXJuIGlucHV0O1xuXHRcdH1cblx0XHRjb25zdCB0eXBlID0gdHlwZW9mIGlucHV0O1xuXHRcdGxldCB2O1xuXHRcdGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0diA9IGZyb21PYmplY3QoaW5wdXQpO1xuXHRcdH0gZWxzZSBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcblx0XHRcdHYgPSBoZXhQYXJzZShpbnB1dCkgfHwgbmFtZVBhcnNlKGlucHV0KSB8fCBmdW5jdGlvblBhcnNlKGlucHV0KTtcblx0XHR9XG5cdFx0dGhpcy5fcmdiID0gdjtcblx0XHR0aGlzLl92YWxpZCA9ICEhdjtcblx0fVxuXHRnZXQgdmFsaWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3ZhbGlkO1xuXHR9XG5cdGdldCByZ2IoKSB7XG5cdFx0dmFyIHYgPSBjbG9uZSh0aGlzLl9yZ2IpO1xuXHRcdGlmICh2KSB7XG5cdFx0XHR2LmEgPSBiMm4odi5hKTtcblx0XHR9XG5cdFx0cmV0dXJuIHY7XG5cdH1cblx0c2V0IHJnYihvYmopIHtcblx0XHR0aGlzLl9yZ2IgPSBmcm9tT2JqZWN0KG9iaik7XG5cdH1cblx0cmdiU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLl92YWxpZCA/IHJnYlN0cmluZyh0aGlzLl9yZ2IpIDogdGhpcy5fcmdiO1xuXHR9XG5cdGhleFN0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5fdmFsaWQgPyBoZXhTdHJpbmcodGhpcy5fcmdiKSA6IHRoaXMuX3JnYjtcblx0fVxuXHRoc2xTdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX3ZhbGlkID8gaHNsU3RyaW5nKHRoaXMuX3JnYikgOiB0aGlzLl9yZ2I7XG5cdH1cblx0bWl4KGNvbG9yLCB3ZWlnaHQpIHtcblx0XHRjb25zdCBtZSA9IHRoaXM7XG5cdFx0aWYgKGNvbG9yKSB7XG5cdFx0XHRjb25zdCBjMSA9IG1lLnJnYjtcblx0XHRcdGNvbnN0IGMyID0gY29sb3IucmdiO1xuXHRcdFx0bGV0IHcyO1xuXHRcdFx0Y29uc3QgcCA9IHdlaWdodCA9PT0gdzIgPyAwLjUgOiB3ZWlnaHQ7XG5cdFx0XHRjb25zdCB3ID0gMiAqIHAgLSAxO1xuXHRcdFx0Y29uc3QgYSA9IGMxLmEgLSBjMi5hO1xuXHRcdFx0Y29uc3QgdzEgPSAoKHcgKiBhID09PSAtMSA/IHcgOiAodyArIGEpIC8gKDEgKyB3ICogYSkpICsgMSkgLyAyLjA7XG5cdFx0XHR3MiA9IDEgLSB3MTtcblx0XHRcdGMxLnIgPSAweEZGICYgdzEgKiBjMS5yICsgdzIgKiBjMi5yICsgMC41O1xuXHRcdFx0YzEuZyA9IDB4RkYgJiB3MSAqIGMxLmcgKyB3MiAqIGMyLmcgKyAwLjU7XG5cdFx0XHRjMS5iID0gMHhGRiAmIHcxICogYzEuYiArIHcyICogYzIuYiArIDAuNTtcblx0XHRcdGMxLmEgPSBwICogYzEuYSArICgxIC0gcCkgKiBjMi5hO1xuXHRcdFx0bWUucmdiID0gYzE7XG5cdFx0fVxuXHRcdHJldHVybiBtZTtcblx0fVxuXHRjbG9uZSgpIHtcblx0XHRyZXR1cm4gbmV3IENvbG9yKHRoaXMucmdiKTtcblx0fVxuXHRhbHBoYShhKSB7XG5cdFx0dGhpcy5fcmdiLmEgPSBuMmIoYSk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblx0Y2xlYXJlcihyYXRpbykge1xuXHRcdGNvbnN0IHJnYiA9IHRoaXMuX3JnYjtcblx0XHRyZ2IuYSAqPSAxIC0gcmF0aW87XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblx0Z3JleXNjYWxlKCkge1xuXHRcdGNvbnN0IHJnYiA9IHRoaXMuX3JnYjtcblx0XHRjb25zdCB2YWwgPSByb3VuZChyZ2IuciAqIDAuMyArIHJnYi5nICogMC41OSArIHJnYi5iICogMC4xMSk7XG5cdFx0cmdiLnIgPSByZ2IuZyA9IHJnYi5iID0gdmFsO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cdG9wYXF1ZXIocmF0aW8pIHtcblx0XHRjb25zdCByZ2IgPSB0aGlzLl9yZ2I7XG5cdFx0cmdiLmEgKj0gMSArIHJhdGlvO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cdG5lZ2F0ZSgpIHtcblx0XHRjb25zdCB2ID0gdGhpcy5fcmdiO1xuXHRcdHYuciA9IDI1NSAtIHYucjtcblx0XHR2LmcgPSAyNTUgLSB2Lmc7XG5cdFx0di5iID0gMjU1IC0gdi5iO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cdGxpZ2h0ZW4ocmF0aW8pIHtcblx0XHRtb2RIU0wodGhpcy5fcmdiLCAyLCByYXRpbyk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblx0ZGFya2VuKHJhdGlvKSB7XG5cdFx0bW9kSFNMKHRoaXMuX3JnYiwgMiwgLXJhdGlvKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXHRzYXR1cmF0ZShyYXRpbykge1xuXHRcdG1vZEhTTCh0aGlzLl9yZ2IsIDEsIHJhdGlvKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXHRkZXNhdHVyYXRlKHJhdGlvKSB7XG5cdFx0bW9kSFNMKHRoaXMuX3JnYiwgMSwgLXJhdGlvKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXHRyb3RhdGUoZGVnKSB7XG5cdFx0cm90YXRlKHRoaXMuX3JnYiwgZGVnKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufVxuZnVuY3Rpb24gaW5kZXhfZXNtKGlucHV0KSB7XG5cdHJldHVybiBuZXcgQ29sb3IoaW5wdXQpO1xufVxuXG5jb25zdCBpc1BhdHRlcm5PckdyYWRpZW50ID0gKHZhbHVlKSA9PiB2YWx1ZSBpbnN0YW5jZW9mIENhbnZhc0dyYWRpZW50IHx8IHZhbHVlIGluc3RhbmNlb2YgQ2FudmFzUGF0dGVybjtcbmZ1bmN0aW9uIGNvbG9yKHZhbHVlKSB7XG4gIHJldHVybiBpc1BhdHRlcm5PckdyYWRpZW50KHZhbHVlKSA/IHZhbHVlIDogaW5kZXhfZXNtKHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldEhvdmVyQ29sb3IodmFsdWUpIHtcbiAgcmV0dXJuIGlzUGF0dGVybk9yR3JhZGllbnQodmFsdWUpXG4gICAgPyB2YWx1ZVxuICAgIDogaW5kZXhfZXNtKHZhbHVlKS5zYXR1cmF0ZSgwLjUpLmRhcmtlbigwLjEpLmhleFN0cmluZygpO1xufVxuXG5jb25zdCBvdmVycmlkZXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuY29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuZnVuY3Rpb24gZ2V0U2NvcGUkMShub2RlLCBrZXkpIHtcbiAgaWYgKCFrZXkpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuICBjb25zdCBrZXlzID0ga2V5LnNwbGl0KCcuJyk7XG4gIGZvciAobGV0IGkgPSAwLCBuID0ga2V5cy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBjb25zdCBrID0ga2V5c1tpXTtcbiAgICBub2RlID0gbm9kZVtrXSB8fCAobm9kZVtrXSA9IE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICB9XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gc2V0KHJvb3QsIHNjb3BlLCB2YWx1ZXMpIHtcbiAgaWYgKHR5cGVvZiBzY29wZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbWVyZ2UoZ2V0U2NvcGUkMShyb290LCBzY29wZSksIHZhbHVlcyk7XG4gIH1cbiAgcmV0dXJuIG1lcmdlKGdldFNjb3BlJDEocm9vdCwgJycpLCBzY29wZSk7XG59XG5jbGFzcyBEZWZhdWx0cyB7XG4gIGNvbnN0cnVjdG9yKF9kZXNjcmlwdG9ycykge1xuICAgIHRoaXMuYW5pbWF0aW9uID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuYmFja2dyb3VuZENvbG9yID0gJ3JnYmEoMCwwLDAsMC4xKSc7XG4gICAgdGhpcy5ib3JkZXJDb2xvciA9ICdyZ2JhKDAsMCwwLDAuMSknO1xuICAgIHRoaXMuY29sb3IgPSAnIzY2Nic7XG4gICAgdGhpcy5kYXRhc2V0cyA9IHt9O1xuICAgIHRoaXMuZGV2aWNlUGl4ZWxSYXRpbyA9IChjb250ZXh0KSA9PiBjb250ZXh0LmNoYXJ0LnBsYXRmb3JtLmdldERldmljZVBpeGVsUmF0aW8oKTtcbiAgICB0aGlzLmVsZW1lbnRzID0ge307XG4gICAgdGhpcy5ldmVudHMgPSBbXG4gICAgICAnbW91c2Vtb3ZlJyxcbiAgICAgICdtb3VzZW91dCcsXG4gICAgICAnY2xpY2snLFxuICAgICAgJ3RvdWNoc3RhcnQnLFxuICAgICAgJ3RvdWNobW92ZSdcbiAgICBdO1xuICAgIHRoaXMuZm9udCA9IHtcbiAgICAgIGZhbWlseTogXCInSGVsdmV0aWNhIE5ldWUnLCAnSGVsdmV0aWNhJywgJ0FyaWFsJywgc2Fucy1zZXJpZlwiLFxuICAgICAgc2l6ZTogMTIsXG4gICAgICBzdHlsZTogJ25vcm1hbCcsXG4gICAgICBsaW5lSGVpZ2h0OiAxLjIsXG4gICAgICB3ZWlnaHQ6IG51bGxcbiAgICB9O1xuICAgIHRoaXMuaG92ZXIgPSB7fTtcbiAgICB0aGlzLmhvdmVyQmFja2dyb3VuZENvbG9yID0gKGN0eCwgb3B0aW9ucykgPT4gZ2V0SG92ZXJDb2xvcihvcHRpb25zLmJhY2tncm91bmRDb2xvcik7XG4gICAgdGhpcy5ob3ZlckJvcmRlckNvbG9yID0gKGN0eCwgb3B0aW9ucykgPT4gZ2V0SG92ZXJDb2xvcihvcHRpb25zLmJvcmRlckNvbG9yKTtcbiAgICB0aGlzLmhvdmVyQ29sb3IgPSAoY3R4LCBvcHRpb25zKSA9PiBnZXRIb3ZlckNvbG9yKG9wdGlvbnMuY29sb3IpO1xuICAgIHRoaXMuaW5kZXhBeGlzID0gJ3gnO1xuICAgIHRoaXMuaW50ZXJhY3Rpb24gPSB7XG4gICAgICBtb2RlOiAnbmVhcmVzdCcsXG4gICAgICBpbnRlcnNlY3Q6IHRydWVcbiAgICB9O1xuICAgIHRoaXMubWFpbnRhaW5Bc3BlY3RSYXRpbyA9IHRydWU7XG4gICAgdGhpcy5vbkhvdmVyID0gbnVsbDtcbiAgICB0aGlzLm9uQ2xpY2sgPSBudWxsO1xuICAgIHRoaXMucGFyc2luZyA9IHRydWU7XG4gICAgdGhpcy5wbHVnaW5zID0ge307XG4gICAgdGhpcy5yZXNwb25zaXZlID0gdHJ1ZTtcbiAgICB0aGlzLnNjYWxlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuc2NhbGVzID0ge307XG4gICAgdGhpcy5zaG93TGluZSA9IHRydWU7XG4gICAgdGhpcy5kcmF3QWN0aXZlRWxlbWVudHNPblRvcCA9IHRydWU7XG4gICAgdGhpcy5kZXNjcmliZShfZGVzY3JpcHRvcnMpO1xuICB9XG4gIHNldChzY29wZSwgdmFsdWVzKSB7XG4gICAgcmV0dXJuIHNldCh0aGlzLCBzY29wZSwgdmFsdWVzKTtcbiAgfVxuICBnZXQoc2NvcGUpIHtcbiAgICByZXR1cm4gZ2V0U2NvcGUkMSh0aGlzLCBzY29wZSk7XG4gIH1cbiAgZGVzY3JpYmUoc2NvcGUsIHZhbHVlcykge1xuICAgIHJldHVybiBzZXQoZGVzY3JpcHRvcnMsIHNjb3BlLCB2YWx1ZXMpO1xuICB9XG4gIG92ZXJyaWRlKHNjb3BlLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gc2V0KG92ZXJyaWRlcywgc2NvcGUsIHZhbHVlcyk7XG4gIH1cbiAgcm91dGUoc2NvcGUsIG5hbWUsIHRhcmdldFNjb3BlLCB0YXJnZXROYW1lKSB7XG4gICAgY29uc3Qgc2NvcGVPYmplY3QgPSBnZXRTY29wZSQxKHRoaXMsIHNjb3BlKTtcbiAgICBjb25zdCB0YXJnZXRTY29wZU9iamVjdCA9IGdldFNjb3BlJDEodGhpcywgdGFyZ2V0U2NvcGUpO1xuICAgIGNvbnN0IHByaXZhdGVOYW1lID0gJ18nICsgbmFtZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzY29wZU9iamVjdCwge1xuICAgICAgW3ByaXZhdGVOYW1lXToge1xuICAgICAgICB2YWx1ZTogc2NvcGVPYmplY3RbbmFtZV0sXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9LFxuICAgICAgW25hbWVdOiB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICBjb25zdCBsb2NhbCA9IHRoaXNbcHJpdmF0ZU5hbWVdO1xuICAgICAgICAgIGNvbnN0IHRhcmdldCA9IHRhcmdldFNjb3BlT2JqZWN0W3RhcmdldE5hbWVdO1xuICAgICAgICAgIGlmIChpc09iamVjdChsb2NhbCkpIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCB0YXJnZXQsIGxvY2FsKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHZhbHVlT3JEZWZhdWx0KGxvY2FsLCB0YXJnZXQpO1xuICAgICAgICB9LFxuICAgICAgICBzZXQodmFsdWUpIHtcbiAgICAgICAgICB0aGlzW3ByaXZhdGVOYW1lXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbnZhciBkZWZhdWx0cyA9IG5ldyBEZWZhdWx0cyh7XG4gIF9zY3JpcHRhYmxlOiAobmFtZSkgPT4gIW5hbWUuc3RhcnRzV2l0aCgnb24nKSxcbiAgX2luZGV4YWJsZTogKG5hbWUpID0+IG5hbWUgIT09ICdldmVudHMnLFxuICBob3Zlcjoge1xuICAgIF9mYWxsYmFjazogJ2ludGVyYWN0aW9uJ1xuICB9LFxuICBpbnRlcmFjdGlvbjoge1xuICAgIF9zY3JpcHRhYmxlOiBmYWxzZSxcbiAgICBfaW5kZXhhYmxlOiBmYWxzZSxcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIHRvRm9udFN0cmluZyhmb250KSB7XG4gIGlmICghZm9udCB8fCBpc051bGxPclVuZGVmKGZvbnQuc2l6ZSkgfHwgaXNOdWxsT3JVbmRlZihmb250LmZhbWlseSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gKGZvbnQuc3R5bGUgPyBmb250LnN0eWxlICsgJyAnIDogJycpXG5cdFx0KyAoZm9udC53ZWlnaHQgPyBmb250LndlaWdodCArICcgJyA6ICcnKVxuXHRcdCsgZm9udC5zaXplICsgJ3B4ICdcblx0XHQrIGZvbnQuZmFtaWx5O1xufVxuZnVuY3Rpb24gX21lYXN1cmVUZXh0KGN0eCwgZGF0YSwgZ2MsIGxvbmdlc3QsIHN0cmluZykge1xuICBsZXQgdGV4dFdpZHRoID0gZGF0YVtzdHJpbmddO1xuICBpZiAoIXRleHRXaWR0aCkge1xuICAgIHRleHRXaWR0aCA9IGRhdGFbc3RyaW5nXSA9IGN0eC5tZWFzdXJlVGV4dChzdHJpbmcpLndpZHRoO1xuICAgIGdjLnB1c2goc3RyaW5nKTtcbiAgfVxuICBpZiAodGV4dFdpZHRoID4gbG9uZ2VzdCkge1xuICAgIGxvbmdlc3QgPSB0ZXh0V2lkdGg7XG4gIH1cbiAgcmV0dXJuIGxvbmdlc3Q7XG59XG5mdW5jdGlvbiBfbG9uZ2VzdFRleHQoY3R4LCBmb250LCBhcnJheU9mVGhpbmdzLCBjYWNoZSkge1xuICBjYWNoZSA9IGNhY2hlIHx8IHt9O1xuICBsZXQgZGF0YSA9IGNhY2hlLmRhdGEgPSBjYWNoZS5kYXRhIHx8IHt9O1xuICBsZXQgZ2MgPSBjYWNoZS5nYXJiYWdlQ29sbGVjdCA9IGNhY2hlLmdhcmJhZ2VDb2xsZWN0IHx8IFtdO1xuICBpZiAoY2FjaGUuZm9udCAhPT0gZm9udCkge1xuICAgIGRhdGEgPSBjYWNoZS5kYXRhID0ge307XG4gICAgZ2MgPSBjYWNoZS5nYXJiYWdlQ29sbGVjdCA9IFtdO1xuICAgIGNhY2hlLmZvbnQgPSBmb250O1xuICB9XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC5mb250ID0gZm9udDtcbiAgbGV0IGxvbmdlc3QgPSAwO1xuICBjb25zdCBpbGVuID0gYXJyYXlPZlRoaW5ncy5sZW5ndGg7XG4gIGxldCBpLCBqLCBqbGVuLCB0aGluZywgbmVzdGVkVGhpbmc7XG4gIGZvciAoaSA9IDA7IGkgPCBpbGVuOyBpKyspIHtcbiAgICB0aGluZyA9IGFycmF5T2ZUaGluZ3NbaV07XG4gICAgaWYgKHRoaW5nICE9PSB1bmRlZmluZWQgJiYgdGhpbmcgIT09IG51bGwgJiYgaXNBcnJheSh0aGluZykgIT09IHRydWUpIHtcbiAgICAgIGxvbmdlc3QgPSBfbWVhc3VyZVRleHQoY3R4LCBkYXRhLCBnYywgbG9uZ2VzdCwgdGhpbmcpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheSh0aGluZykpIHtcbiAgICAgIGZvciAoaiA9IDAsIGpsZW4gPSB0aGluZy5sZW5ndGg7IGogPCBqbGVuOyBqKyspIHtcbiAgICAgICAgbmVzdGVkVGhpbmcgPSB0aGluZ1tqXTtcbiAgICAgICAgaWYgKG5lc3RlZFRoaW5nICE9PSB1bmRlZmluZWQgJiYgbmVzdGVkVGhpbmcgIT09IG51bGwgJiYgIWlzQXJyYXkobmVzdGVkVGhpbmcpKSB7XG4gICAgICAgICAgbG9uZ2VzdCA9IF9tZWFzdXJlVGV4dChjdHgsIGRhdGEsIGdjLCBsb25nZXN0LCBuZXN0ZWRUaGluZyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY3R4LnJlc3RvcmUoKTtcbiAgY29uc3QgZ2NMZW4gPSBnYy5sZW5ndGggLyAyO1xuICBpZiAoZ2NMZW4gPiBhcnJheU9mVGhpbmdzLmxlbmd0aCkge1xuICAgIGZvciAoaSA9IDA7IGkgPCBnY0xlbjsgaSsrKSB7XG4gICAgICBkZWxldGUgZGF0YVtnY1tpXV07XG4gICAgfVxuICAgIGdjLnNwbGljZSgwLCBnY0xlbik7XG4gIH1cbiAgcmV0dXJuIGxvbmdlc3Q7XG59XG5mdW5jdGlvbiBfYWxpZ25QaXhlbChjaGFydCwgcGl4ZWwsIHdpZHRoKSB7XG4gIGNvbnN0IGRldmljZVBpeGVsUmF0aW8gPSBjaGFydC5jdXJyZW50RGV2aWNlUGl4ZWxSYXRpbztcbiAgY29uc3QgaGFsZldpZHRoID0gd2lkdGggIT09IDAgPyBNYXRoLm1heCh3aWR0aCAvIDIsIDAuNSkgOiAwO1xuICByZXR1cm4gTWF0aC5yb3VuZCgocGl4ZWwgLSBoYWxmV2lkdGgpICogZGV2aWNlUGl4ZWxSYXRpbykgLyBkZXZpY2VQaXhlbFJhdGlvICsgaGFsZldpZHRoO1xufVxuZnVuY3Rpb24gY2xlYXJDYW52YXMoY2FudmFzLCBjdHgpIHtcbiAgY3R4ID0gY3R4IHx8IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICBjdHguc2F2ZSgpO1xuICBjdHgucmVzZXRUcmFuc2Zvcm0oKTtcbiAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICBjdHgucmVzdG9yZSgpO1xufVxuZnVuY3Rpb24gZHJhd1BvaW50KGN0eCwgb3B0aW9ucywgeCwgeSkge1xuICBsZXQgdHlwZSwgeE9mZnNldCwgeU9mZnNldCwgc2l6ZSwgY29ybmVyUmFkaXVzO1xuICBjb25zdCBzdHlsZSA9IG9wdGlvbnMucG9pbnRTdHlsZTtcbiAgY29uc3Qgcm90YXRpb24gPSBvcHRpb25zLnJvdGF0aW9uO1xuICBjb25zdCByYWRpdXMgPSBvcHRpb25zLnJhZGl1cztcbiAgbGV0IHJhZCA9IChyb3RhdGlvbiB8fCAwKSAqIFJBRF9QRVJfREVHO1xuICBpZiAoc3R5bGUgJiYgdHlwZW9mIHN0eWxlID09PSAnb2JqZWN0Jykge1xuICAgIHR5cGUgPSBzdHlsZS50b1N0cmluZygpO1xuICAgIGlmICh0eXBlID09PSAnW29iamVjdCBIVE1MSW1hZ2VFbGVtZW50XScgfHwgdHlwZSA9PT0gJ1tvYmplY3QgSFRNTENhbnZhc0VsZW1lbnRdJykge1xuICAgICAgY3R4LnNhdmUoKTtcbiAgICAgIGN0eC50cmFuc2xhdGUoeCwgeSk7XG4gICAgICBjdHgucm90YXRlKHJhZCk7XG4gICAgICBjdHguZHJhd0ltYWdlKHN0eWxlLCAtc3R5bGUud2lkdGggLyAyLCAtc3R5bGUuaGVpZ2h0IC8gMiwgc3R5bGUud2lkdGgsIHN0eWxlLmhlaWdodCk7XG4gICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuICBpZiAoaXNOYU4ocmFkaXVzKSB8fCByYWRpdXMgPD0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjdHguYmVnaW5QYXRoKCk7XG4gIHN3aXRjaCAoc3R5bGUpIHtcbiAgZGVmYXVsdDpcbiAgICBjdHguYXJjKHgsIHksIHJhZGl1cywgMCwgVEFVKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ3RyaWFuZ2xlJzpcbiAgICBjdHgubW92ZVRvKHggKyBNYXRoLnNpbihyYWQpICogcmFkaXVzLCB5IC0gTWF0aC5jb3MocmFkKSAqIHJhZGl1cyk7XG4gICAgcmFkICs9IFRXT19USElSRFNfUEk7XG4gICAgY3R4LmxpbmVUbyh4ICsgTWF0aC5zaW4ocmFkKSAqIHJhZGl1cywgeSAtIE1hdGguY29zKHJhZCkgKiByYWRpdXMpO1xuICAgIHJhZCArPSBUV09fVEhJUkRTX1BJO1xuICAgIGN0eC5saW5lVG8oeCArIE1hdGguc2luKHJhZCkgKiByYWRpdXMsIHkgLSBNYXRoLmNvcyhyYWQpICogcmFkaXVzKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ3JlY3RSb3VuZGVkJzpcbiAgICBjb3JuZXJSYWRpdXMgPSByYWRpdXMgKiAwLjUxNjtcbiAgICBzaXplID0gcmFkaXVzIC0gY29ybmVyUmFkaXVzO1xuICAgIHhPZmZzZXQgPSBNYXRoLmNvcyhyYWQgKyBRVUFSVEVSX1BJKSAqIHNpemU7XG4gICAgeU9mZnNldCA9IE1hdGguc2luKHJhZCArIFFVQVJURVJfUEkpICogc2l6ZTtcbiAgICBjdHguYXJjKHggLSB4T2Zmc2V0LCB5IC0geU9mZnNldCwgY29ybmVyUmFkaXVzLCByYWQgLSBQSSwgcmFkIC0gSEFMRl9QSSk7XG4gICAgY3R4LmFyYyh4ICsgeU9mZnNldCwgeSAtIHhPZmZzZXQsIGNvcm5lclJhZGl1cywgcmFkIC0gSEFMRl9QSSwgcmFkKTtcbiAgICBjdHguYXJjKHggKyB4T2Zmc2V0LCB5ICsgeU9mZnNldCwgY29ybmVyUmFkaXVzLCByYWQsIHJhZCArIEhBTEZfUEkpO1xuICAgIGN0eC5hcmMoeCAtIHlPZmZzZXQsIHkgKyB4T2Zmc2V0LCBjb3JuZXJSYWRpdXMsIHJhZCArIEhBTEZfUEksIHJhZCArIFBJKTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ3JlY3QnOlxuICAgIGlmICghcm90YXRpb24pIHtcbiAgICAgIHNpemUgPSBNYXRoLlNRUlQxXzIgKiByYWRpdXM7XG4gICAgICBjdHgucmVjdCh4IC0gc2l6ZSwgeSAtIHNpemUsIDIgKiBzaXplLCAyICogc2l6ZSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgcmFkICs9IFFVQVJURVJfUEk7XG4gIGNhc2UgJ3JlY3RSb3QnOlxuICAgIHhPZmZzZXQgPSBNYXRoLmNvcyhyYWQpICogcmFkaXVzO1xuICAgIHlPZmZzZXQgPSBNYXRoLnNpbihyYWQpICogcmFkaXVzO1xuICAgIGN0eC5tb3ZlVG8oeCAtIHhPZmZzZXQsIHkgLSB5T2Zmc2V0KTtcbiAgICBjdHgubGluZVRvKHggKyB5T2Zmc2V0LCB5IC0geE9mZnNldCk7XG4gICAgY3R4LmxpbmVUbyh4ICsgeE9mZnNldCwgeSArIHlPZmZzZXQpO1xuICAgIGN0eC5saW5lVG8oeCAtIHlPZmZzZXQsIHkgKyB4T2Zmc2V0KTtcbiAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ2Nyb3NzUm90JzpcbiAgICByYWQgKz0gUVVBUlRFUl9QSTtcbiAgY2FzZSAnY3Jvc3MnOlxuICAgIHhPZmZzZXQgPSBNYXRoLmNvcyhyYWQpICogcmFkaXVzO1xuICAgIHlPZmZzZXQgPSBNYXRoLnNpbihyYWQpICogcmFkaXVzO1xuICAgIGN0eC5tb3ZlVG8oeCAtIHhPZmZzZXQsIHkgLSB5T2Zmc2V0KTtcbiAgICBjdHgubGluZVRvKHggKyB4T2Zmc2V0LCB5ICsgeU9mZnNldCk7XG4gICAgY3R4Lm1vdmVUbyh4ICsgeU9mZnNldCwgeSAtIHhPZmZzZXQpO1xuICAgIGN0eC5saW5lVG8oeCAtIHlPZmZzZXQsIHkgKyB4T2Zmc2V0KTtcbiAgICBicmVhaztcbiAgY2FzZSAnc3Rhcic6XG4gICAgeE9mZnNldCA9IE1hdGguY29zKHJhZCkgKiByYWRpdXM7XG4gICAgeU9mZnNldCA9IE1hdGguc2luKHJhZCkgKiByYWRpdXM7XG4gICAgY3R4Lm1vdmVUbyh4IC0geE9mZnNldCwgeSAtIHlPZmZzZXQpO1xuICAgIGN0eC5saW5lVG8oeCArIHhPZmZzZXQsIHkgKyB5T2Zmc2V0KTtcbiAgICBjdHgubW92ZVRvKHggKyB5T2Zmc2V0LCB5IC0geE9mZnNldCk7XG4gICAgY3R4LmxpbmVUbyh4IC0geU9mZnNldCwgeSArIHhPZmZzZXQpO1xuICAgIHJhZCArPSBRVUFSVEVSX1BJO1xuICAgIHhPZmZzZXQgPSBNYXRoLmNvcyhyYWQpICogcmFkaXVzO1xuICAgIHlPZmZzZXQgPSBNYXRoLnNpbihyYWQpICogcmFkaXVzO1xuICAgIGN0eC5tb3ZlVG8oeCAtIHhPZmZzZXQsIHkgLSB5T2Zmc2V0KTtcbiAgICBjdHgubGluZVRvKHggKyB4T2Zmc2V0LCB5ICsgeU9mZnNldCk7XG4gICAgY3R4Lm1vdmVUbyh4ICsgeU9mZnNldCwgeSAtIHhPZmZzZXQpO1xuICAgIGN0eC5saW5lVG8oeCAtIHlPZmZzZXQsIHkgKyB4T2Zmc2V0KTtcbiAgICBicmVhaztcbiAgY2FzZSAnbGluZSc6XG4gICAgeE9mZnNldCA9IE1hdGguY29zKHJhZCkgKiByYWRpdXM7XG4gICAgeU9mZnNldCA9IE1hdGguc2luKHJhZCkgKiByYWRpdXM7XG4gICAgY3R4Lm1vdmVUbyh4IC0geE9mZnNldCwgeSAtIHlPZmZzZXQpO1xuICAgIGN0eC5saW5lVG8oeCArIHhPZmZzZXQsIHkgKyB5T2Zmc2V0KTtcbiAgICBicmVhaztcbiAgY2FzZSAnZGFzaCc6XG4gICAgY3R4Lm1vdmVUbyh4LCB5KTtcbiAgICBjdHgubGluZVRvKHggKyBNYXRoLmNvcyhyYWQpICogcmFkaXVzLCB5ICsgTWF0aC5zaW4ocmFkKSAqIHJhZGl1cyk7XG4gICAgYnJlYWs7XG4gIH1cbiAgY3R4LmZpbGwoKTtcbiAgaWYgKG9wdGlvbnMuYm9yZGVyV2lkdGggPiAwKSB7XG4gICAgY3R4LnN0cm9rZSgpO1xuICB9XG59XG5mdW5jdGlvbiBfaXNQb2ludEluQXJlYShwb2ludCwgYXJlYSwgbWFyZ2luKSB7XG4gIG1hcmdpbiA9IG1hcmdpbiB8fCAwLjU7XG4gIHJldHVybiAhYXJlYSB8fCAocG9pbnQgJiYgcG9pbnQueCA+IGFyZWEubGVmdCAtIG1hcmdpbiAmJiBwb2ludC54IDwgYXJlYS5yaWdodCArIG1hcmdpbiAmJlxuXHRcdHBvaW50LnkgPiBhcmVhLnRvcCAtIG1hcmdpbiAmJiBwb2ludC55IDwgYXJlYS5ib3R0b20gKyBtYXJnaW4pO1xufVxuZnVuY3Rpb24gY2xpcEFyZWEoY3R4LCBhcmVhKSB7XG4gIGN0eC5zYXZlKCk7XG4gIGN0eC5iZWdpblBhdGgoKTtcbiAgY3R4LnJlY3QoYXJlYS5sZWZ0LCBhcmVhLnRvcCwgYXJlYS5yaWdodCAtIGFyZWEubGVmdCwgYXJlYS5ib3R0b20gLSBhcmVhLnRvcCk7XG4gIGN0eC5jbGlwKCk7XG59XG5mdW5jdGlvbiB1bmNsaXBBcmVhKGN0eCkge1xuICBjdHgucmVzdG9yZSgpO1xufVxuZnVuY3Rpb24gX3N0ZXBwZWRMaW5lVG8oY3R4LCBwcmV2aW91cywgdGFyZ2V0LCBmbGlwLCBtb2RlKSB7XG4gIGlmICghcHJldmlvdXMpIHtcbiAgICByZXR1cm4gY3R4LmxpbmVUbyh0YXJnZXQueCwgdGFyZ2V0LnkpO1xuICB9XG4gIGlmIChtb2RlID09PSAnbWlkZGxlJykge1xuICAgIGNvbnN0IG1pZHBvaW50ID0gKHByZXZpb3VzLnggKyB0YXJnZXQueCkgLyAyLjA7XG4gICAgY3R4LmxpbmVUbyhtaWRwb2ludCwgcHJldmlvdXMueSk7XG4gICAgY3R4LmxpbmVUbyhtaWRwb2ludCwgdGFyZ2V0LnkpO1xuICB9IGVsc2UgaWYgKG1vZGUgPT09ICdhZnRlcicgIT09ICEhZmxpcCkge1xuICAgIGN0eC5saW5lVG8ocHJldmlvdXMueCwgdGFyZ2V0LnkpO1xuICB9IGVsc2Uge1xuICAgIGN0eC5saW5lVG8odGFyZ2V0LngsIHByZXZpb3VzLnkpO1xuICB9XG4gIGN0eC5saW5lVG8odGFyZ2V0LngsIHRhcmdldC55KTtcbn1cbmZ1bmN0aW9uIF9iZXppZXJDdXJ2ZVRvKGN0eCwgcHJldmlvdXMsIHRhcmdldCwgZmxpcCkge1xuICBpZiAoIXByZXZpb3VzKSB7XG4gICAgcmV0dXJuIGN0eC5saW5lVG8odGFyZ2V0LngsIHRhcmdldC55KTtcbiAgfVxuICBjdHguYmV6aWVyQ3VydmVUbyhcbiAgICBmbGlwID8gcHJldmlvdXMuY3AxeCA6IHByZXZpb3VzLmNwMngsXG4gICAgZmxpcCA/IHByZXZpb3VzLmNwMXkgOiBwcmV2aW91cy5jcDJ5LFxuICAgIGZsaXAgPyB0YXJnZXQuY3AyeCA6IHRhcmdldC5jcDF4LFxuICAgIGZsaXAgPyB0YXJnZXQuY3AyeSA6IHRhcmdldC5jcDF5LFxuICAgIHRhcmdldC54LFxuICAgIHRhcmdldC55KTtcbn1cbmZ1bmN0aW9uIHJlbmRlclRleHQoY3R4LCB0ZXh0LCB4LCB5LCBmb250LCBvcHRzID0ge30pIHtcbiAgY29uc3QgbGluZXMgPSBpc0FycmF5KHRleHQpID8gdGV4dCA6IFt0ZXh0XTtcbiAgY29uc3Qgc3Ryb2tlID0gb3B0cy5zdHJva2VXaWR0aCA+IDAgJiYgb3B0cy5zdHJva2VDb2xvciAhPT0gJyc7XG4gIGxldCBpLCBsaW5lO1xuICBjdHguc2F2ZSgpO1xuICBjdHguZm9udCA9IGZvbnQuc3RyaW5nO1xuICBzZXRSZW5kZXJPcHRzKGN0eCwgb3B0cyk7XG4gIGZvciAoaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7ICsraSkge1xuICAgIGxpbmUgPSBsaW5lc1tpXTtcbiAgICBpZiAoc3Ryb2tlKSB7XG4gICAgICBpZiAob3B0cy5zdHJva2VDb2xvcikge1xuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBvcHRzLnN0cm9rZUNvbG9yO1xuICAgICAgfVxuICAgICAgaWYgKCFpc051bGxPclVuZGVmKG9wdHMuc3Ryb2tlV2lkdGgpKSB7XG4gICAgICAgIGN0eC5saW5lV2lkdGggPSBvcHRzLnN0cm9rZVdpZHRoO1xuICAgICAgfVxuICAgICAgY3R4LnN0cm9rZVRleHQobGluZSwgeCwgeSwgb3B0cy5tYXhXaWR0aCk7XG4gICAgfVxuICAgIGN0eC5maWxsVGV4dChsaW5lLCB4LCB5LCBvcHRzLm1heFdpZHRoKTtcbiAgICBkZWNvcmF0ZVRleHQoY3R4LCB4LCB5LCBsaW5lLCBvcHRzKTtcbiAgICB5ICs9IGZvbnQubGluZUhlaWdodDtcbiAgfVxuICBjdHgucmVzdG9yZSgpO1xufVxuZnVuY3Rpb24gc2V0UmVuZGVyT3B0cyhjdHgsIG9wdHMpIHtcbiAgaWYgKG9wdHMudHJhbnNsYXRpb24pIHtcbiAgICBjdHgudHJhbnNsYXRlKG9wdHMudHJhbnNsYXRpb25bMF0sIG9wdHMudHJhbnNsYXRpb25bMV0pO1xuICB9XG4gIGlmICghaXNOdWxsT3JVbmRlZihvcHRzLnJvdGF0aW9uKSkge1xuICAgIGN0eC5yb3RhdGUob3B0cy5yb3RhdGlvbik7XG4gIH1cbiAgaWYgKG9wdHMuY29sb3IpIHtcbiAgICBjdHguZmlsbFN0eWxlID0gb3B0cy5jb2xvcjtcbiAgfVxuICBpZiAob3B0cy50ZXh0QWxpZ24pIHtcbiAgICBjdHgudGV4dEFsaWduID0gb3B0cy50ZXh0QWxpZ247XG4gIH1cbiAgaWYgKG9wdHMudGV4dEJhc2VsaW5lKSB7XG4gICAgY3R4LnRleHRCYXNlbGluZSA9IG9wdHMudGV4dEJhc2VsaW5lO1xuICB9XG59XG5mdW5jdGlvbiBkZWNvcmF0ZVRleHQoY3R4LCB4LCB5LCBsaW5lLCBvcHRzKSB7XG4gIGlmIChvcHRzLnN0cmlrZXRocm91Z2ggfHwgb3B0cy51bmRlcmxpbmUpIHtcbiAgICBjb25zdCBtZXRyaWNzID0gY3R4Lm1lYXN1cmVUZXh0KGxpbmUpO1xuICAgIGNvbnN0IGxlZnQgPSB4IC0gbWV0cmljcy5hY3R1YWxCb3VuZGluZ0JveExlZnQ7XG4gICAgY29uc3QgcmlnaHQgPSB4ICsgbWV0cmljcy5hY3R1YWxCb3VuZGluZ0JveFJpZ2h0O1xuICAgIGNvbnN0IHRvcCA9IHkgLSBtZXRyaWNzLmFjdHVhbEJvdW5kaW5nQm94QXNjZW50O1xuICAgIGNvbnN0IGJvdHRvbSA9IHkgKyBtZXRyaWNzLmFjdHVhbEJvdW5kaW5nQm94RGVzY2VudDtcbiAgICBjb25zdCB5RGVjb3JhdGlvbiA9IG9wdHMuc3RyaWtldGhyb3VnaCA/ICh0b3AgKyBib3R0b20pIC8gMiA6IGJvdHRvbTtcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSBjdHguZmlsbFN0eWxlO1xuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHgubGluZVdpZHRoID0gb3B0cy5kZWNvcmF0aW9uV2lkdGggfHwgMjtcbiAgICBjdHgubW92ZVRvKGxlZnQsIHlEZWNvcmF0aW9uKTtcbiAgICBjdHgubGluZVRvKHJpZ2h0LCB5RGVjb3JhdGlvbik7XG4gICAgY3R4LnN0cm9rZSgpO1xuICB9XG59XG5mdW5jdGlvbiBhZGRSb3VuZGVkUmVjdFBhdGgoY3R4LCByZWN0KSB7XG4gIGNvbnN0IHt4LCB5LCB3LCBoLCByYWRpdXN9ID0gcmVjdDtcbiAgY3R4LmFyYyh4ICsgcmFkaXVzLnRvcExlZnQsIHkgKyByYWRpdXMudG9wTGVmdCwgcmFkaXVzLnRvcExlZnQsIC1IQUxGX1BJLCBQSSwgdHJ1ZSk7XG4gIGN0eC5saW5lVG8oeCwgeSArIGggLSByYWRpdXMuYm90dG9tTGVmdCk7XG4gIGN0eC5hcmMoeCArIHJhZGl1cy5ib3R0b21MZWZ0LCB5ICsgaCAtIHJhZGl1cy5ib3R0b21MZWZ0LCByYWRpdXMuYm90dG9tTGVmdCwgUEksIEhBTEZfUEksIHRydWUpO1xuICBjdHgubGluZVRvKHggKyB3IC0gcmFkaXVzLmJvdHRvbVJpZ2h0LCB5ICsgaCk7XG4gIGN0eC5hcmMoeCArIHcgLSByYWRpdXMuYm90dG9tUmlnaHQsIHkgKyBoIC0gcmFkaXVzLmJvdHRvbVJpZ2h0LCByYWRpdXMuYm90dG9tUmlnaHQsIEhBTEZfUEksIDAsIHRydWUpO1xuICBjdHgubGluZVRvKHggKyB3LCB5ICsgcmFkaXVzLnRvcFJpZ2h0KTtcbiAgY3R4LmFyYyh4ICsgdyAtIHJhZGl1cy50b3BSaWdodCwgeSArIHJhZGl1cy50b3BSaWdodCwgcmFkaXVzLnRvcFJpZ2h0LCAwLCAtSEFMRl9QSSwgdHJ1ZSk7XG4gIGN0eC5saW5lVG8oeCArIHJhZGl1cy50b3BMZWZ0LCB5KTtcbn1cblxuY29uc3QgTElORV9IRUlHSFQgPSBuZXcgUmVnRXhwKC9eKG5vcm1hbHwoXFxkKyg/OlxcLlxcZCspPykocHh8ZW18JSk/KSQvKTtcbmNvbnN0IEZPTlRfU1RZTEUgPSBuZXcgUmVnRXhwKC9eKG5vcm1hbHxpdGFsaWN8aW5pdGlhbHxpbmhlcml0fHVuc2V0fChvYmxpcXVlKCAtP1swLTldP1swLTldZGVnKT8pKSQvKTtcbmZ1bmN0aW9uIHRvTGluZUhlaWdodCh2YWx1ZSwgc2l6ZSkge1xuICBjb25zdCBtYXRjaGVzID0gKCcnICsgdmFsdWUpLm1hdGNoKExJTkVfSEVJR0hUKTtcbiAgaWYgKCFtYXRjaGVzIHx8IG1hdGNoZXNbMV0gPT09ICdub3JtYWwnKSB7XG4gICAgcmV0dXJuIHNpemUgKiAxLjI7XG4gIH1cbiAgdmFsdWUgPSArbWF0Y2hlc1syXTtcbiAgc3dpdGNoIChtYXRjaGVzWzNdKSB7XG4gIGNhc2UgJ3B4JzpcbiAgICByZXR1cm4gdmFsdWU7XG4gIGNhc2UgJyUnOlxuICAgIHZhbHVlIC89IDEwMDtcbiAgICBicmVhaztcbiAgfVxuICByZXR1cm4gc2l6ZSAqIHZhbHVlO1xufVxuY29uc3QgbnVtYmVyT3JaZXJvID0gdiA9PiArdiB8fCAwO1xuZnVuY3Rpb24gX3JlYWRWYWx1ZVRvUHJvcHModmFsdWUsIHByb3BzKSB7XG4gIGNvbnN0IHJldCA9IHt9O1xuICBjb25zdCBvYmpQcm9wcyA9IGlzT2JqZWN0KHByb3BzKTtcbiAgY29uc3Qga2V5cyA9IG9ialByb3BzID8gT2JqZWN0LmtleXMocHJvcHMpIDogcHJvcHM7XG4gIGNvbnN0IHJlYWQgPSBpc09iamVjdCh2YWx1ZSlcbiAgICA/IG9ialByb3BzXG4gICAgICA/IHByb3AgPT4gdmFsdWVPckRlZmF1bHQodmFsdWVbcHJvcF0sIHZhbHVlW3Byb3BzW3Byb3BdXSlcbiAgICAgIDogcHJvcCA9PiB2YWx1ZVtwcm9wXVxuICAgIDogKCkgPT4gdmFsdWU7XG4gIGZvciAoY29uc3QgcHJvcCBvZiBrZXlzKSB7XG4gICAgcmV0W3Byb3BdID0gbnVtYmVyT3JaZXJvKHJlYWQocHJvcCkpO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5mdW5jdGlvbiB0b1RSQkwodmFsdWUpIHtcbiAgcmV0dXJuIF9yZWFkVmFsdWVUb1Byb3BzKHZhbHVlLCB7dG9wOiAneScsIHJpZ2h0OiAneCcsIGJvdHRvbTogJ3knLCBsZWZ0OiAneCd9KTtcbn1cbmZ1bmN0aW9uIHRvVFJCTENvcm5lcnModmFsdWUpIHtcbiAgcmV0dXJuIF9yZWFkVmFsdWVUb1Byb3BzKHZhbHVlLCBbJ3RvcExlZnQnLCAndG9wUmlnaHQnLCAnYm90dG9tTGVmdCcsICdib3R0b21SaWdodCddKTtcbn1cbmZ1bmN0aW9uIHRvUGFkZGluZyh2YWx1ZSkge1xuICBjb25zdCBvYmogPSB0b1RSQkwodmFsdWUpO1xuICBvYmoud2lkdGggPSBvYmoubGVmdCArIG9iai5yaWdodDtcbiAgb2JqLmhlaWdodCA9IG9iai50b3AgKyBvYmouYm90dG9tO1xuICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gdG9Gb250KG9wdGlvbnMsIGZhbGxiYWNrKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBmYWxsYmFjayA9IGZhbGxiYWNrIHx8IGRlZmF1bHRzLmZvbnQ7XG4gIGxldCBzaXplID0gdmFsdWVPckRlZmF1bHQob3B0aW9ucy5zaXplLCBmYWxsYmFjay5zaXplKTtcbiAgaWYgKHR5cGVvZiBzaXplID09PSAnc3RyaW5nJykge1xuICAgIHNpemUgPSBwYXJzZUludChzaXplLCAxMCk7XG4gIH1cbiAgbGV0IHN0eWxlID0gdmFsdWVPckRlZmF1bHQob3B0aW9ucy5zdHlsZSwgZmFsbGJhY2suc3R5bGUpO1xuICBpZiAoc3R5bGUgJiYgISgnJyArIHN0eWxlKS5tYXRjaChGT05UX1NUWUxFKSkge1xuICAgIGNvbnNvbGUud2FybignSW52YWxpZCBmb250IHN0eWxlIHNwZWNpZmllZDogXCInICsgc3R5bGUgKyAnXCInKTtcbiAgICBzdHlsZSA9ICcnO1xuICB9XG4gIGNvbnN0IGZvbnQgPSB7XG4gICAgZmFtaWx5OiB2YWx1ZU9yRGVmYXVsdChvcHRpb25zLmZhbWlseSwgZmFsbGJhY2suZmFtaWx5KSxcbiAgICBsaW5lSGVpZ2h0OiB0b0xpbmVIZWlnaHQodmFsdWVPckRlZmF1bHQob3B0aW9ucy5saW5lSGVpZ2h0LCBmYWxsYmFjay5saW5lSGVpZ2h0KSwgc2l6ZSksXG4gICAgc2l6ZSxcbiAgICBzdHlsZSxcbiAgICB3ZWlnaHQ6IHZhbHVlT3JEZWZhdWx0KG9wdGlvbnMud2VpZ2h0LCBmYWxsYmFjay53ZWlnaHQpLFxuICAgIHN0cmluZzogJydcbiAgfTtcbiAgZm9udC5zdHJpbmcgPSB0b0ZvbnRTdHJpbmcoZm9udCk7XG4gIHJldHVybiBmb250O1xufVxuZnVuY3Rpb24gcmVzb2x2ZShpbnB1dHMsIGNvbnRleHQsIGluZGV4LCBpbmZvKSB7XG4gIGxldCBjYWNoZWFibGUgPSB0cnVlO1xuICBsZXQgaSwgaWxlbiwgdmFsdWU7XG4gIGZvciAoaSA9IDAsIGlsZW4gPSBpbnB1dHMubGVuZ3RoOyBpIDwgaWxlbjsgKytpKSB7XG4gICAgdmFsdWUgPSBpbnB1dHNbaV07XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoY29udGV4dCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdmFsdWUgPSB2YWx1ZShjb250ZXh0KTtcbiAgICAgIGNhY2hlYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCAmJiBpc0FycmF5KHZhbHVlKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZVtpbmRleCAlIHZhbHVlLmxlbmd0aF07XG4gICAgICBjYWNoZWFibGUgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChpbmZvICYmICFjYWNoZWFibGUpIHtcbiAgICAgICAgaW5mby5jYWNoZWFibGUgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIF9hZGRHcmFjZShtaW5tYXgsIGdyYWNlLCBiZWdpbkF0WmVybykge1xuICBjb25zdCB7bWluLCBtYXh9ID0gbWlubWF4O1xuICBjb25zdCBjaGFuZ2UgPSB0b0RpbWVuc2lvbihncmFjZSwgKG1heCAtIG1pbikgLyAyKTtcbiAgY29uc3Qga2VlcFplcm8gPSAodmFsdWUsIGFkZCkgPT4gYmVnaW5BdFplcm8gJiYgdmFsdWUgPT09IDAgPyAwIDogdmFsdWUgKyBhZGQ7XG4gIHJldHVybiB7XG4gICAgbWluOiBrZWVwWmVybyhtaW4sIC1NYXRoLmFicyhjaGFuZ2UpKSxcbiAgICBtYXg6IGtlZXBaZXJvKG1heCwgY2hhbmdlKVxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ29udGV4dChwYXJlbnRDb250ZXh0LCBjb250ZXh0KSB7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUocGFyZW50Q29udGV4dCksIGNvbnRleHQpO1xufVxuXG5mdW5jdGlvbiBfbG9va3VwKHRhYmxlLCB2YWx1ZSwgY21wKSB7XG4gIGNtcCA9IGNtcCB8fCAoKGluZGV4KSA9PiB0YWJsZVtpbmRleF0gPCB2YWx1ZSk7XG4gIGxldCBoaSA9IHRhYmxlLmxlbmd0aCAtIDE7XG4gIGxldCBsbyA9IDA7XG4gIGxldCBtaWQ7XG4gIHdoaWxlIChoaSAtIGxvID4gMSkge1xuICAgIG1pZCA9IChsbyArIGhpKSA+PiAxO1xuICAgIGlmIChjbXAobWlkKSkge1xuICAgICAgbG8gPSBtaWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpID0gbWlkO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge2xvLCBoaX07XG59XG5jb25zdCBfbG9va3VwQnlLZXkgPSAodGFibGUsIGtleSwgdmFsdWUpID0+XG4gIF9sb29rdXAodGFibGUsIHZhbHVlLCBpbmRleCA9PiB0YWJsZVtpbmRleF1ba2V5XSA8IHZhbHVlKTtcbmNvbnN0IF9ybG9va3VwQnlLZXkgPSAodGFibGUsIGtleSwgdmFsdWUpID0+XG4gIF9sb29rdXAodGFibGUsIHZhbHVlLCBpbmRleCA9PiB0YWJsZVtpbmRleF1ba2V5XSA+PSB2YWx1ZSk7XG5mdW5jdGlvbiBfZmlsdGVyQmV0d2Vlbih2YWx1ZXMsIG1pbiwgbWF4KSB7XG4gIGxldCBzdGFydCA9IDA7XG4gIGxldCBlbmQgPSB2YWx1ZXMubGVuZ3RoO1xuICB3aGlsZSAoc3RhcnQgPCBlbmQgJiYgdmFsdWVzW3N0YXJ0XSA8IG1pbikge1xuICAgIHN0YXJ0Kys7XG4gIH1cbiAgd2hpbGUgKGVuZCA+IHN0YXJ0ICYmIHZhbHVlc1tlbmQgLSAxXSA+IG1heCkge1xuICAgIGVuZC0tO1xuICB9XG4gIHJldHVybiBzdGFydCA+IDAgfHwgZW5kIDwgdmFsdWVzLmxlbmd0aFxuICAgID8gdmFsdWVzLnNsaWNlKHN0YXJ0LCBlbmQpXG4gICAgOiB2YWx1ZXM7XG59XG5jb25zdCBhcnJheUV2ZW50cyA9IFsncHVzaCcsICdwb3AnLCAnc2hpZnQnLCAnc3BsaWNlJywgJ3Vuc2hpZnQnXTtcbmZ1bmN0aW9uIGxpc3RlbkFycmF5RXZlbnRzKGFycmF5LCBsaXN0ZW5lcikge1xuICBpZiAoYXJyYXkuX2NoYXJ0anMpIHtcbiAgICBhcnJheS5fY2hhcnRqcy5saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuO1xuICB9XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhcnJheSwgJ19jaGFydGpzJywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB2YWx1ZToge1xuICAgICAgbGlzdGVuZXJzOiBbbGlzdGVuZXJdXG4gICAgfVxuICB9KTtcbiAgYXJyYXlFdmVudHMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgY29uc3QgbWV0aG9kID0gJ19vbkRhdGEnICsgX2NhcGl0YWxpemUoa2V5KTtcbiAgICBjb25zdCBiYXNlID0gYXJyYXlba2V5XTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYXJyYXksIGtleSwge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB2YWx1ZSguLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGJhc2UuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIGFycmF5Ll9jaGFydGpzLmxpc3RlbmVycy5mb3JFYWNoKChvYmplY3QpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIG9iamVjdFttZXRob2RdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBvYmplY3RbbWV0aG9kXSguLi5hcmdzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cbmZ1bmN0aW9uIHVubGlzdGVuQXJyYXlFdmVudHMoYXJyYXksIGxpc3RlbmVyKSB7XG4gIGNvbnN0IHN0dWIgPSBhcnJheS5fY2hhcnRqcztcbiAgaWYgKCFzdHViKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGxpc3RlbmVycyA9IHN0dWIubGlzdGVuZXJzO1xuICBjb25zdCBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgIGxpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG4gIGlmIChsaXN0ZW5lcnMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybjtcbiAgfVxuICBhcnJheUV2ZW50cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBkZWxldGUgYXJyYXlba2V5XTtcbiAgfSk7XG4gIGRlbGV0ZSBhcnJheS5fY2hhcnRqcztcbn1cbmZ1bmN0aW9uIF9hcnJheVVuaXF1ZShpdGVtcykge1xuICBjb25zdCBzZXQgPSBuZXcgU2V0KCk7XG4gIGxldCBpLCBpbGVuO1xuICBmb3IgKGkgPSAwLCBpbGVuID0gaXRlbXMubGVuZ3RoOyBpIDwgaWxlbjsgKytpKSB7XG4gICAgc2V0LmFkZChpdGVtc1tpXSk7XG4gIH1cbiAgaWYgKHNldC5zaXplID09PSBpbGVuKSB7XG4gICAgcmV0dXJuIGl0ZW1zO1xuICB9XG4gIHJldHVybiBBcnJheS5mcm9tKHNldCk7XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVSZXNvbHZlcihzY29wZXMsIHByZWZpeGVzID0gWycnXSwgcm9vdFNjb3BlcyA9IHNjb3BlcywgZmFsbGJhY2ssIGdldFRhcmdldCA9ICgpID0+IHNjb3Blc1swXSkge1xuICBpZiAoIWRlZmluZWQoZmFsbGJhY2spKSB7XG4gICAgZmFsbGJhY2sgPSBfcmVzb2x2ZSgnX2ZhbGxiYWNrJywgc2NvcGVzKTtcbiAgfVxuICBjb25zdCBjYWNoZSA9IHtcbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ09iamVjdCcsXG4gICAgX2NhY2hlYWJsZTogdHJ1ZSxcbiAgICBfc2NvcGVzOiBzY29wZXMsXG4gICAgX3Jvb3RTY29wZXM6IHJvb3RTY29wZXMsXG4gICAgX2ZhbGxiYWNrOiBmYWxsYmFjayxcbiAgICBfZ2V0VGFyZ2V0OiBnZXRUYXJnZXQsXG4gICAgb3ZlcnJpZGU6IChzY29wZSkgPT4gX2NyZWF0ZVJlc29sdmVyKFtzY29wZSwgLi4uc2NvcGVzXSwgcHJlZml4ZXMsIHJvb3RTY29wZXMsIGZhbGxiYWNrKSxcbiAgfTtcbiAgcmV0dXJuIG5ldyBQcm94eShjYWNoZSwge1xuICAgIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCkge1xuICAgICAgZGVsZXRlIHRhcmdldFtwcm9wXTtcbiAgICAgIGRlbGV0ZSB0YXJnZXQuX2tleXM7XG4gICAgICBkZWxldGUgc2NvcGVzWzBdW3Byb3BdO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBnZXQodGFyZ2V0LCBwcm9wKSB7XG4gICAgICByZXR1cm4gX2NhY2hlZCh0YXJnZXQsIHByb3AsXG4gICAgICAgICgpID0+IF9yZXNvbHZlV2l0aFByZWZpeGVzKHByb3AsIHByZWZpeGVzLCBzY29wZXMsIHRhcmdldCkpO1xuICAgIH0sXG4gICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcCkge1xuICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldC5fc2NvcGVzWzBdLCBwcm9wKTtcbiAgICB9LFxuICAgIGdldFByb3RvdHlwZU9mKCkge1xuICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0UHJvdG90eXBlT2Yoc2NvcGVzWzBdKTtcbiAgICB9LFxuICAgIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgIHJldHVybiBnZXRLZXlzRnJvbUFsbFNjb3Blcyh0YXJnZXQpLmluY2x1ZGVzKHByb3ApO1xuICAgIH0sXG4gICAgb3duS2V5cyh0YXJnZXQpIHtcbiAgICAgIHJldHVybiBnZXRLZXlzRnJvbUFsbFNjb3Blcyh0YXJnZXQpO1xuICAgIH0sXG4gICAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpIHtcbiAgICAgIGNvbnN0IHN0b3JhZ2UgPSB0YXJnZXQuX3N0b3JhZ2UgfHwgKHRhcmdldC5fc3RvcmFnZSA9IGdldFRhcmdldCgpKTtcbiAgICAgIHRhcmdldFtwcm9wXSA9IHN0b3JhZ2VbcHJvcF0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSB0YXJnZXQuX2tleXM7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gX2F0dGFjaENvbnRleHQocHJveHksIGNvbnRleHQsIHN1YlByb3h5LCBkZXNjcmlwdG9yRGVmYXVsdHMpIHtcbiAgY29uc3QgY2FjaGUgPSB7XG4gICAgX2NhY2hlYWJsZTogZmFsc2UsXG4gICAgX3Byb3h5OiBwcm94eSxcbiAgICBfY29udGV4dDogY29udGV4dCxcbiAgICBfc3ViUHJveHk6IHN1YlByb3h5LFxuICAgIF9zdGFjazogbmV3IFNldCgpLFxuICAgIF9kZXNjcmlwdG9yczogX2Rlc2NyaXB0b3JzKHByb3h5LCBkZXNjcmlwdG9yRGVmYXVsdHMpLFxuICAgIHNldENvbnRleHQ6IChjdHgpID0+IF9hdHRhY2hDb250ZXh0KHByb3h5LCBjdHgsIHN1YlByb3h5LCBkZXNjcmlwdG9yRGVmYXVsdHMpLFxuICAgIG92ZXJyaWRlOiAoc2NvcGUpID0+IF9hdHRhY2hDb250ZXh0KHByb3h5Lm92ZXJyaWRlKHNjb3BlKSwgY29udGV4dCwgc3ViUHJveHksIGRlc2NyaXB0b3JEZWZhdWx0cylcbiAgfTtcbiAgcmV0dXJuIG5ldyBQcm94eShjYWNoZSwge1xuICAgIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCkge1xuICAgICAgZGVsZXRlIHRhcmdldFtwcm9wXTtcbiAgICAgIGRlbGV0ZSBwcm94eVtwcm9wXTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgIHJldHVybiBfY2FjaGVkKHRhcmdldCwgcHJvcCxcbiAgICAgICAgKCkgPT4gX3Jlc29sdmVXaXRoQ29udGV4dCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSk7XG4gICAgfSxcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wKSB7XG4gICAgICByZXR1cm4gdGFyZ2V0Ll9kZXNjcmlwdG9ycy5hbGxLZXlzXG4gICAgICAgID8gUmVmbGVjdC5oYXMocHJveHksIHByb3ApID8ge2VudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0gOiB1bmRlZmluZWRcbiAgICAgICAgOiBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwcm94eSwgcHJvcCk7XG4gICAgfSxcbiAgICBnZXRQcm90b3R5cGVPZigpIHtcbiAgICAgIHJldHVybiBSZWZsZWN0LmdldFByb3RvdHlwZU9mKHByb3h5KTtcbiAgICB9LFxuICAgIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgIHJldHVybiBSZWZsZWN0Lmhhcyhwcm94eSwgcHJvcCk7XG4gICAgfSxcbiAgICBvd25LZXlzKCkge1xuICAgICAgcmV0dXJuIFJlZmxlY3Qub3duS2V5cyhwcm94eSk7XG4gICAgfSxcbiAgICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkge1xuICAgICAgcHJveHlbcHJvcF0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSB0YXJnZXRbcHJvcF07XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gX2Rlc2NyaXB0b3JzKHByb3h5LCBkZWZhdWx0cyA9IHtzY3JpcHRhYmxlOiB0cnVlLCBpbmRleGFibGU6IHRydWV9KSB7XG4gIGNvbnN0IHtfc2NyaXB0YWJsZSA9IGRlZmF1bHRzLnNjcmlwdGFibGUsIF9pbmRleGFibGUgPSBkZWZhdWx0cy5pbmRleGFibGUsIF9hbGxLZXlzID0gZGVmYXVsdHMuYWxsS2V5c30gPSBwcm94eTtcbiAgcmV0dXJuIHtcbiAgICBhbGxLZXlzOiBfYWxsS2V5cyxcbiAgICBzY3JpcHRhYmxlOiBfc2NyaXB0YWJsZSxcbiAgICBpbmRleGFibGU6IF9pbmRleGFibGUsXG4gICAgaXNTY3JpcHRhYmxlOiBpc0Z1bmN0aW9uKF9zY3JpcHRhYmxlKSA/IF9zY3JpcHRhYmxlIDogKCkgPT4gX3NjcmlwdGFibGUsXG4gICAgaXNJbmRleGFibGU6IGlzRnVuY3Rpb24oX2luZGV4YWJsZSkgPyBfaW5kZXhhYmxlIDogKCkgPT4gX2luZGV4YWJsZVxuICB9O1xufVxuY29uc3QgcmVhZEtleSA9IChwcmVmaXgsIG5hbWUpID0+IHByZWZpeCA/IHByZWZpeCArIF9jYXBpdGFsaXplKG5hbWUpIDogbmFtZTtcbmNvbnN0IG5lZWRzU3ViUmVzb2x2ZXIgPSAocHJvcCwgdmFsdWUpID0+IGlzT2JqZWN0KHZhbHVlKSAmJiBwcm9wICE9PSAnYWRhcHRlcnMnICYmXG4gIChPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpID09PSBudWxsIHx8IHZhbHVlLmNvbnN0cnVjdG9yID09PSBPYmplY3QpO1xuZnVuY3Rpb24gX2NhY2hlZCh0YXJnZXQsIHByb3AsIHJlc29sdmUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIHByb3ApKSB7XG4gICAgcmV0dXJuIHRhcmdldFtwcm9wXTtcbiAgfVxuICBjb25zdCB2YWx1ZSA9IHJlc29sdmUoKTtcbiAgdGFyZ2V0W3Byb3BdID0gdmFsdWU7XG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIF9yZXNvbHZlV2l0aENvbnRleHQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICBjb25zdCB7X3Byb3h5LCBfY29udGV4dCwgX3N1YlByb3h5LCBfZGVzY3JpcHRvcnM6IGRlc2NyaXB0b3JzfSA9IHRhcmdldDtcbiAgbGV0IHZhbHVlID0gX3Byb3h5W3Byb3BdO1xuICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkgJiYgZGVzY3JpcHRvcnMuaXNTY3JpcHRhYmxlKHByb3ApKSB7XG4gICAgdmFsdWUgPSBfcmVzb2x2ZVNjcmlwdGFibGUocHJvcCwgdmFsdWUsIHRhcmdldCwgcmVjZWl2ZXIpO1xuICB9XG4gIGlmIChpc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICB2YWx1ZSA9IF9yZXNvbHZlQXJyYXkocHJvcCwgdmFsdWUsIHRhcmdldCwgZGVzY3JpcHRvcnMuaXNJbmRleGFibGUpO1xuICB9XG4gIGlmIChuZWVkc1N1YlJlc29sdmVyKHByb3AsIHZhbHVlKSkge1xuICAgIHZhbHVlID0gX2F0dGFjaENvbnRleHQodmFsdWUsIF9jb250ZXh0LCBfc3ViUHJveHkgJiYgX3N1YlByb3h5W3Byb3BdLCBkZXNjcmlwdG9ycyk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gX3Jlc29sdmVTY3JpcHRhYmxlKHByb3AsIHZhbHVlLCB0YXJnZXQsIHJlY2VpdmVyKSB7XG4gIGNvbnN0IHtfcHJveHksIF9jb250ZXh0LCBfc3ViUHJveHksIF9zdGFja30gPSB0YXJnZXQ7XG4gIGlmIChfc3RhY2suaGFzKHByb3ApKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSZWN1cnNpb24gZGV0ZWN0ZWQ6ICcgKyBBcnJheS5mcm9tKF9zdGFjaykuam9pbignLT4nKSArICctPicgKyBwcm9wKTtcbiAgfVxuICBfc3RhY2suYWRkKHByb3ApO1xuICB2YWx1ZSA9IHZhbHVlKF9jb250ZXh0LCBfc3ViUHJveHkgfHwgcmVjZWl2ZXIpO1xuICBfc3RhY2suZGVsZXRlKHByb3ApO1xuICBpZiAobmVlZHNTdWJSZXNvbHZlcihwcm9wLCB2YWx1ZSkpIHtcbiAgICB2YWx1ZSA9IGNyZWF0ZVN1YlJlc29sdmVyKF9wcm94eS5fc2NvcGVzLCBfcHJveHksIHByb3AsIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBfcmVzb2x2ZUFycmF5KHByb3AsIHZhbHVlLCB0YXJnZXQsIGlzSW5kZXhhYmxlKSB7XG4gIGNvbnN0IHtfcHJveHksIF9jb250ZXh0LCBfc3ViUHJveHksIF9kZXNjcmlwdG9yczogZGVzY3JpcHRvcnN9ID0gdGFyZ2V0O1xuICBpZiAoZGVmaW5lZChfY29udGV4dC5pbmRleCkgJiYgaXNJbmRleGFibGUocHJvcCkpIHtcbiAgICB2YWx1ZSA9IHZhbHVlW19jb250ZXh0LmluZGV4ICUgdmFsdWUubGVuZ3RoXTtcbiAgfSBlbHNlIGlmIChpc09iamVjdCh2YWx1ZVswXSkpIHtcbiAgICBjb25zdCBhcnIgPSB2YWx1ZTtcbiAgICBjb25zdCBzY29wZXMgPSBfcHJveHkuX3Njb3Blcy5maWx0ZXIocyA9PiBzICE9PSBhcnIpO1xuICAgIHZhbHVlID0gW107XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGFycikge1xuICAgICAgY29uc3QgcmVzb2x2ZXIgPSBjcmVhdGVTdWJSZXNvbHZlcihzY29wZXMsIF9wcm94eSwgcHJvcCwgaXRlbSk7XG4gICAgICB2YWx1ZS5wdXNoKF9hdHRhY2hDb250ZXh0KHJlc29sdmVyLCBfY29udGV4dCwgX3N1YlByb3h5ICYmIF9zdWJQcm94eVtwcm9wXSwgZGVzY3JpcHRvcnMpKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUZhbGxiYWNrKGZhbGxiYWNrLCBwcm9wLCB2YWx1ZSkge1xuICByZXR1cm4gaXNGdW5jdGlvbihmYWxsYmFjaykgPyBmYWxsYmFjayhwcm9wLCB2YWx1ZSkgOiBmYWxsYmFjaztcbn1cbmNvbnN0IGdldFNjb3BlID0gKGtleSwgcGFyZW50KSA9PiBrZXkgPT09IHRydWUgPyBwYXJlbnRcbiAgOiB0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyA/IHJlc29sdmVPYmplY3RLZXkocGFyZW50LCBrZXkpIDogdW5kZWZpbmVkO1xuZnVuY3Rpb24gYWRkU2NvcGVzKHNldCwgcGFyZW50U2NvcGVzLCBrZXksIHBhcmVudEZhbGxiYWNrLCB2YWx1ZSkge1xuICBmb3IgKGNvbnN0IHBhcmVudCBvZiBwYXJlbnRTY29wZXMpIHtcbiAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKGtleSwgcGFyZW50KTtcbiAgICBpZiAoc2NvcGUpIHtcbiAgICAgIHNldC5hZGQoc2NvcGUpO1xuICAgICAgY29uc3QgZmFsbGJhY2sgPSByZXNvbHZlRmFsbGJhY2soc2NvcGUuX2ZhbGxiYWNrLCBrZXksIHZhbHVlKTtcbiAgICAgIGlmIChkZWZpbmVkKGZhbGxiYWNrKSAmJiBmYWxsYmFjayAhPT0ga2V5ICYmIGZhbGxiYWNrICE9PSBwYXJlbnRGYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gZmFsbGJhY2s7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzY29wZSA9PT0gZmFsc2UgJiYgZGVmaW5lZChwYXJlbnRGYWxsYmFjaykgJiYga2V5ICE9PSBwYXJlbnRGYWxsYmFjaykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVN1YlJlc29sdmVyKHBhcmVudFNjb3BlcywgcmVzb2x2ZXIsIHByb3AsIHZhbHVlKSB7XG4gIGNvbnN0IHJvb3RTY29wZXMgPSByZXNvbHZlci5fcm9vdFNjb3BlcztcbiAgY29uc3QgZmFsbGJhY2sgPSByZXNvbHZlRmFsbGJhY2socmVzb2x2ZXIuX2ZhbGxiYWNrLCBwcm9wLCB2YWx1ZSk7XG4gIGNvbnN0IGFsbFNjb3BlcyA9IFsuLi5wYXJlbnRTY29wZXMsIC4uLnJvb3RTY29wZXNdO1xuICBjb25zdCBzZXQgPSBuZXcgU2V0KCk7XG4gIHNldC5hZGQodmFsdWUpO1xuICBsZXQga2V5ID0gYWRkU2NvcGVzRnJvbUtleShzZXQsIGFsbFNjb3BlcywgcHJvcCwgZmFsbGJhY2sgfHwgcHJvcCwgdmFsdWUpO1xuICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChkZWZpbmVkKGZhbGxiYWNrKSAmJiBmYWxsYmFjayAhPT0gcHJvcCkge1xuICAgIGtleSA9IGFkZFNjb3Blc0Zyb21LZXkoc2V0LCBhbGxTY29wZXMsIGZhbGxiYWNrLCBrZXksIHZhbHVlKTtcbiAgICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiBfY3JlYXRlUmVzb2x2ZXIoQXJyYXkuZnJvbShzZXQpLCBbJyddLCByb290U2NvcGVzLCBmYWxsYmFjayxcbiAgICAoKSA9PiBzdWJHZXRUYXJnZXQocmVzb2x2ZXIsIHByb3AsIHZhbHVlKSk7XG59XG5mdW5jdGlvbiBhZGRTY29wZXNGcm9tS2V5KHNldCwgYWxsU2NvcGVzLCBrZXksIGZhbGxiYWNrLCBpdGVtKSB7XG4gIHdoaWxlIChrZXkpIHtcbiAgICBrZXkgPSBhZGRTY29wZXMoc2V0LCBhbGxTY29wZXMsIGtleSwgZmFsbGJhY2ssIGl0ZW0pO1xuICB9XG4gIHJldHVybiBrZXk7XG59XG5mdW5jdGlvbiBzdWJHZXRUYXJnZXQocmVzb2x2ZXIsIHByb3AsIHZhbHVlKSB7XG4gIGNvbnN0IHBhcmVudCA9IHJlc29sdmVyLl9nZXRUYXJnZXQoKTtcbiAgaWYgKCEocHJvcCBpbiBwYXJlbnQpKSB7XG4gICAgcGFyZW50W3Byb3BdID0ge307XG4gIH1cbiAgY29uc3QgdGFyZ2V0ID0gcGFyZW50W3Byb3BdO1xuICBpZiAoaXNBcnJheSh0YXJnZXQpICYmIGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGFyZ2V0O1xufVxuZnVuY3Rpb24gX3Jlc29sdmVXaXRoUHJlZml4ZXMocHJvcCwgcHJlZml4ZXMsIHNjb3BlcywgcHJveHkpIHtcbiAgbGV0IHZhbHVlO1xuICBmb3IgKGNvbnN0IHByZWZpeCBvZiBwcmVmaXhlcykge1xuICAgIHZhbHVlID0gX3Jlc29sdmUocmVhZEtleShwcmVmaXgsIHByb3ApLCBzY29wZXMpO1xuICAgIGlmIChkZWZpbmVkKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIG5lZWRzU3ViUmVzb2x2ZXIocHJvcCwgdmFsdWUpXG4gICAgICAgID8gY3JlYXRlU3ViUmVzb2x2ZXIoc2NvcGVzLCBwcm94eSwgcHJvcCwgdmFsdWUpXG4gICAgICAgIDogdmFsdWU7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBfcmVzb2x2ZShrZXksIHNjb3Blcykge1xuICBmb3IgKGNvbnN0IHNjb3BlIG9mIHNjb3Blcykge1xuICAgIGlmICghc2NvcGUpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBjb25zdCB2YWx1ZSA9IHNjb3BlW2tleV07XG4gICAgaWYgKGRlZmluZWQodmFsdWUpKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBnZXRLZXlzRnJvbUFsbFNjb3Blcyh0YXJnZXQpIHtcbiAgbGV0IGtleXMgPSB0YXJnZXQuX2tleXM7XG4gIGlmICgha2V5cykge1xuICAgIGtleXMgPSB0YXJnZXQuX2tleXMgPSByZXNvbHZlS2V5c0Zyb21BbGxTY29wZXModGFyZ2V0Ll9zY29wZXMpO1xuICB9XG4gIHJldHVybiBrZXlzO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUtleXNGcm9tQWxsU2NvcGVzKHNjb3Blcykge1xuICBjb25zdCBzZXQgPSBuZXcgU2V0KCk7XG4gIGZvciAoY29uc3Qgc2NvcGUgb2Ygc2NvcGVzKSB7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoc2NvcGUpLmZpbHRlcihrID0+ICFrLnN0YXJ0c1dpdGgoJ18nKSkpIHtcbiAgICAgIHNldC5hZGQoa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIEFycmF5LmZyb20oc2V0KTtcbn1cblxuY29uc3QgRVBTSUxPTiA9IE51bWJlci5FUFNJTE9OIHx8IDFlLTE0O1xuY29uc3QgZ2V0UG9pbnQgPSAocG9pbnRzLCBpKSA9PiBpIDwgcG9pbnRzLmxlbmd0aCAmJiAhcG9pbnRzW2ldLnNraXAgJiYgcG9pbnRzW2ldO1xuY29uc3QgZ2V0VmFsdWVBeGlzID0gKGluZGV4QXhpcykgPT4gaW5kZXhBeGlzID09PSAneCcgPyAneScgOiAneCc7XG5mdW5jdGlvbiBzcGxpbmVDdXJ2ZShmaXJzdFBvaW50LCBtaWRkbGVQb2ludCwgYWZ0ZXJQb2ludCwgdCkge1xuICBjb25zdCBwcmV2aW91cyA9IGZpcnN0UG9pbnQuc2tpcCA/IG1pZGRsZVBvaW50IDogZmlyc3RQb2ludDtcbiAgY29uc3QgY3VycmVudCA9IG1pZGRsZVBvaW50O1xuICBjb25zdCBuZXh0ID0gYWZ0ZXJQb2ludC5za2lwID8gbWlkZGxlUG9pbnQgOiBhZnRlclBvaW50O1xuICBjb25zdCBkMDEgPSBkaXN0YW5jZUJldHdlZW5Qb2ludHMoY3VycmVudCwgcHJldmlvdXMpO1xuICBjb25zdCBkMTIgPSBkaXN0YW5jZUJldHdlZW5Qb2ludHMobmV4dCwgY3VycmVudCk7XG4gIGxldCBzMDEgPSBkMDEgLyAoZDAxICsgZDEyKTtcbiAgbGV0IHMxMiA9IGQxMiAvIChkMDEgKyBkMTIpO1xuICBzMDEgPSBpc05hTihzMDEpID8gMCA6IHMwMTtcbiAgczEyID0gaXNOYU4oczEyKSA/IDAgOiBzMTI7XG4gIGNvbnN0IGZhID0gdCAqIHMwMTtcbiAgY29uc3QgZmIgPSB0ICogczEyO1xuICByZXR1cm4ge1xuICAgIHByZXZpb3VzOiB7XG4gICAgICB4OiBjdXJyZW50LnggLSBmYSAqIChuZXh0LnggLSBwcmV2aW91cy54KSxcbiAgICAgIHk6IGN1cnJlbnQueSAtIGZhICogKG5leHQueSAtIHByZXZpb3VzLnkpXG4gICAgfSxcbiAgICBuZXh0OiB7XG4gICAgICB4OiBjdXJyZW50LnggKyBmYiAqIChuZXh0LnggLSBwcmV2aW91cy54KSxcbiAgICAgIHk6IGN1cnJlbnQueSArIGZiICogKG5leHQueSAtIHByZXZpb3VzLnkpXG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gbW9ub3RvbmVBZGp1c3QocG9pbnRzLCBkZWx0YUssIG1LKSB7XG4gIGNvbnN0IHBvaW50c0xlbiA9IHBvaW50cy5sZW5ndGg7XG4gIGxldCBhbHBoYUssIGJldGFLLCB0YXVLLCBzcXVhcmVkTWFnbml0dWRlLCBwb2ludEN1cnJlbnQ7XG4gIGxldCBwb2ludEFmdGVyID0gZ2V0UG9pbnQocG9pbnRzLCAwKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHNMZW4gLSAxOyArK2kpIHtcbiAgICBwb2ludEN1cnJlbnQgPSBwb2ludEFmdGVyO1xuICAgIHBvaW50QWZ0ZXIgPSBnZXRQb2ludChwb2ludHMsIGkgKyAxKTtcbiAgICBpZiAoIXBvaW50Q3VycmVudCB8fCAhcG9pbnRBZnRlcikge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbG1vc3RFcXVhbHMoZGVsdGFLW2ldLCAwLCBFUFNJTE9OKSkge1xuICAgICAgbUtbaV0gPSBtS1tpICsgMV0gPSAwO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGFscGhhSyA9IG1LW2ldIC8gZGVsdGFLW2ldO1xuICAgIGJldGFLID0gbUtbaSArIDFdIC8gZGVsdGFLW2ldO1xuICAgIHNxdWFyZWRNYWduaXR1ZGUgPSBNYXRoLnBvdyhhbHBoYUssIDIpICsgTWF0aC5wb3coYmV0YUssIDIpO1xuICAgIGlmIChzcXVhcmVkTWFnbml0dWRlIDw9IDkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICB0YXVLID0gMyAvIE1hdGguc3FydChzcXVhcmVkTWFnbml0dWRlKTtcbiAgICBtS1tpXSA9IGFscGhhSyAqIHRhdUsgKiBkZWx0YUtbaV07XG4gICAgbUtbaSArIDFdID0gYmV0YUsgKiB0YXVLICogZGVsdGFLW2ldO1xuICB9XG59XG5mdW5jdGlvbiBtb25vdG9uZUNvbXB1dGUocG9pbnRzLCBtSywgaW5kZXhBeGlzID0gJ3gnKSB7XG4gIGNvbnN0IHZhbHVlQXhpcyA9IGdldFZhbHVlQXhpcyhpbmRleEF4aXMpO1xuICBjb25zdCBwb2ludHNMZW4gPSBwb2ludHMubGVuZ3RoO1xuICBsZXQgZGVsdGEsIHBvaW50QmVmb3JlLCBwb2ludEN1cnJlbnQ7XG4gIGxldCBwb2ludEFmdGVyID0gZ2V0UG9pbnQocG9pbnRzLCAwKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHNMZW47ICsraSkge1xuICAgIHBvaW50QmVmb3JlID0gcG9pbnRDdXJyZW50O1xuICAgIHBvaW50Q3VycmVudCA9IHBvaW50QWZ0ZXI7XG4gICAgcG9pbnRBZnRlciA9IGdldFBvaW50KHBvaW50cywgaSArIDEpO1xuICAgIGlmICghcG9pbnRDdXJyZW50KSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY29uc3QgaVBpeGVsID0gcG9pbnRDdXJyZW50W2luZGV4QXhpc107XG4gICAgY29uc3QgdlBpeGVsID0gcG9pbnRDdXJyZW50W3ZhbHVlQXhpc107XG4gICAgaWYgKHBvaW50QmVmb3JlKSB7XG4gICAgICBkZWx0YSA9IChpUGl4ZWwgLSBwb2ludEJlZm9yZVtpbmRleEF4aXNdKSAvIDM7XG4gICAgICBwb2ludEN1cnJlbnRbYGNwMSR7aW5kZXhBeGlzfWBdID0gaVBpeGVsIC0gZGVsdGE7XG4gICAgICBwb2ludEN1cnJlbnRbYGNwMSR7dmFsdWVBeGlzfWBdID0gdlBpeGVsIC0gZGVsdGEgKiBtS1tpXTtcbiAgICB9XG4gICAgaWYgKHBvaW50QWZ0ZXIpIHtcbiAgICAgIGRlbHRhID0gKHBvaW50QWZ0ZXJbaW5kZXhBeGlzXSAtIGlQaXhlbCkgLyAzO1xuICAgICAgcG9pbnRDdXJyZW50W2BjcDIke2luZGV4QXhpc31gXSA9IGlQaXhlbCArIGRlbHRhO1xuICAgICAgcG9pbnRDdXJyZW50W2BjcDIke3ZhbHVlQXhpc31gXSA9IHZQaXhlbCArIGRlbHRhICogbUtbaV07XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBzcGxpbmVDdXJ2ZU1vbm90b25lKHBvaW50cywgaW5kZXhBeGlzID0gJ3gnKSB7XG4gIGNvbnN0IHZhbHVlQXhpcyA9IGdldFZhbHVlQXhpcyhpbmRleEF4aXMpO1xuICBjb25zdCBwb2ludHNMZW4gPSBwb2ludHMubGVuZ3RoO1xuICBjb25zdCBkZWx0YUsgPSBBcnJheShwb2ludHNMZW4pLmZpbGwoMCk7XG4gIGNvbnN0IG1LID0gQXJyYXkocG9pbnRzTGVuKTtcbiAgbGV0IGksIHBvaW50QmVmb3JlLCBwb2ludEN1cnJlbnQ7XG4gIGxldCBwb2ludEFmdGVyID0gZ2V0UG9pbnQocG9pbnRzLCAwKTtcbiAgZm9yIChpID0gMDsgaSA8IHBvaW50c0xlbjsgKytpKSB7XG4gICAgcG9pbnRCZWZvcmUgPSBwb2ludEN1cnJlbnQ7XG4gICAgcG9pbnRDdXJyZW50ID0gcG9pbnRBZnRlcjtcbiAgICBwb2ludEFmdGVyID0gZ2V0UG9pbnQocG9pbnRzLCBpICsgMSk7XG4gICAgaWYgKCFwb2ludEN1cnJlbnQpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAocG9pbnRBZnRlcikge1xuICAgICAgY29uc3Qgc2xvcGVEZWx0YSA9IHBvaW50QWZ0ZXJbaW5kZXhBeGlzXSAtIHBvaW50Q3VycmVudFtpbmRleEF4aXNdO1xuICAgICAgZGVsdGFLW2ldID0gc2xvcGVEZWx0YSAhPT0gMCA/IChwb2ludEFmdGVyW3ZhbHVlQXhpc10gLSBwb2ludEN1cnJlbnRbdmFsdWVBeGlzXSkgLyBzbG9wZURlbHRhIDogMDtcbiAgICB9XG4gICAgbUtbaV0gPSAhcG9pbnRCZWZvcmUgPyBkZWx0YUtbaV1cbiAgICAgIDogIXBvaW50QWZ0ZXIgPyBkZWx0YUtbaSAtIDFdXG4gICAgICA6IChzaWduKGRlbHRhS1tpIC0gMV0pICE9PSBzaWduKGRlbHRhS1tpXSkpID8gMFxuICAgICAgOiAoZGVsdGFLW2kgLSAxXSArIGRlbHRhS1tpXSkgLyAyO1xuICB9XG4gIG1vbm90b25lQWRqdXN0KHBvaW50cywgZGVsdGFLLCBtSyk7XG4gIG1vbm90b25lQ29tcHV0ZShwb2ludHMsIG1LLCBpbmRleEF4aXMpO1xufVxuZnVuY3Rpb24gY2FwQ29udHJvbFBvaW50KHB0LCBtaW4sIG1heCkge1xuICByZXR1cm4gTWF0aC5tYXgoTWF0aC5taW4ocHQsIG1heCksIG1pbik7XG59XG5mdW5jdGlvbiBjYXBCZXppZXJQb2ludHMocG9pbnRzLCBhcmVhKSB7XG4gIGxldCBpLCBpbGVuLCBwb2ludCwgaW5BcmVhLCBpbkFyZWFQcmV2O1xuICBsZXQgaW5BcmVhTmV4dCA9IF9pc1BvaW50SW5BcmVhKHBvaW50c1swXSwgYXJlYSk7XG4gIGZvciAoaSA9IDAsIGlsZW4gPSBwb2ludHMubGVuZ3RoOyBpIDwgaWxlbjsgKytpKSB7XG4gICAgaW5BcmVhUHJldiA9IGluQXJlYTtcbiAgICBpbkFyZWEgPSBpbkFyZWFOZXh0O1xuICAgIGluQXJlYU5leHQgPSBpIDwgaWxlbiAtIDEgJiYgX2lzUG9pbnRJbkFyZWEocG9pbnRzW2kgKyAxXSwgYXJlYSk7XG4gICAgaWYgKCFpbkFyZWEpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBwb2ludCA9IHBvaW50c1tpXTtcbiAgICBpZiAoaW5BcmVhUHJldikge1xuICAgICAgcG9pbnQuY3AxeCA9IGNhcENvbnRyb2xQb2ludChwb2ludC5jcDF4LCBhcmVhLmxlZnQsIGFyZWEucmlnaHQpO1xuICAgICAgcG9pbnQuY3AxeSA9IGNhcENvbnRyb2xQb2ludChwb2ludC5jcDF5LCBhcmVhLnRvcCwgYXJlYS5ib3R0b20pO1xuICAgIH1cbiAgICBpZiAoaW5BcmVhTmV4dCkge1xuICAgICAgcG9pbnQuY3AyeCA9IGNhcENvbnRyb2xQb2ludChwb2ludC5jcDJ4LCBhcmVhLmxlZnQsIGFyZWEucmlnaHQpO1xuICAgICAgcG9pbnQuY3AyeSA9IGNhcENvbnRyb2xQb2ludChwb2ludC5jcDJ5LCBhcmVhLnRvcCwgYXJlYS5ib3R0b20pO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gX3VwZGF0ZUJlemllckNvbnRyb2xQb2ludHMocG9pbnRzLCBvcHRpb25zLCBhcmVhLCBsb29wLCBpbmRleEF4aXMpIHtcbiAgbGV0IGksIGlsZW4sIHBvaW50LCBjb250cm9sUG9pbnRzO1xuICBpZiAob3B0aW9ucy5zcGFuR2Fwcykge1xuICAgIHBvaW50cyA9IHBvaW50cy5maWx0ZXIoKHB0KSA9PiAhcHQuc2tpcCk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuY3ViaWNJbnRlcnBvbGF0aW9uTW9kZSA9PT0gJ21vbm90b25lJykge1xuICAgIHNwbGluZUN1cnZlTW9ub3RvbmUocG9pbnRzLCBpbmRleEF4aXMpO1xuICB9IGVsc2Uge1xuICAgIGxldCBwcmV2ID0gbG9vcCA/IHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV0gOiBwb2ludHNbMF07XG4gICAgZm9yIChpID0gMCwgaWxlbiA9IHBvaW50cy5sZW5ndGg7IGkgPCBpbGVuOyArK2kpIHtcbiAgICAgIHBvaW50ID0gcG9pbnRzW2ldO1xuICAgICAgY29udHJvbFBvaW50cyA9IHNwbGluZUN1cnZlKFxuICAgICAgICBwcmV2LFxuICAgICAgICBwb2ludCxcbiAgICAgICAgcG9pbnRzW01hdGgubWluKGkgKyAxLCBpbGVuIC0gKGxvb3AgPyAwIDogMSkpICUgaWxlbl0sXG4gICAgICAgIG9wdGlvbnMudGVuc2lvblxuICAgICAgKTtcbiAgICAgIHBvaW50LmNwMXggPSBjb250cm9sUG9pbnRzLnByZXZpb3VzLng7XG4gICAgICBwb2ludC5jcDF5ID0gY29udHJvbFBvaW50cy5wcmV2aW91cy55O1xuICAgICAgcG9pbnQuY3AyeCA9IGNvbnRyb2xQb2ludHMubmV4dC54O1xuICAgICAgcG9pbnQuY3AyeSA9IGNvbnRyb2xQb2ludHMubmV4dC55O1xuICAgICAgcHJldiA9IHBvaW50O1xuICAgIH1cbiAgfVxuICBpZiAob3B0aW9ucy5jYXBCZXppZXJQb2ludHMpIHtcbiAgICBjYXBCZXppZXJQb2ludHMocG9pbnRzLCBhcmVhKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXNEb21TdXBwb3J0ZWQoKSB7XG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnO1xufVxuZnVuY3Rpb24gX2dldFBhcmVudE5vZGUoZG9tTm9kZSkge1xuICBsZXQgcGFyZW50ID0gZG9tTm9kZS5wYXJlbnROb2RlO1xuICBpZiAocGFyZW50ICYmIHBhcmVudC50b1N0cmluZygpID09PSAnW29iamVjdCBTaGFkb3dSb290XScpIHtcbiAgICBwYXJlbnQgPSBwYXJlbnQuaG9zdDtcbiAgfVxuICByZXR1cm4gcGFyZW50O1xufVxuZnVuY3Rpb24gcGFyc2VNYXhTdHlsZShzdHlsZVZhbHVlLCBub2RlLCBwYXJlbnRQcm9wZXJ0eSkge1xuICBsZXQgdmFsdWVJblBpeGVscztcbiAgaWYgKHR5cGVvZiBzdHlsZVZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHZhbHVlSW5QaXhlbHMgPSBwYXJzZUludChzdHlsZVZhbHVlLCAxMCk7XG4gICAgaWYgKHN0eWxlVmFsdWUuaW5kZXhPZignJScpICE9PSAtMSkge1xuICAgICAgdmFsdWVJblBpeGVscyA9IHZhbHVlSW5QaXhlbHMgLyAxMDAgKiBub2RlLnBhcmVudE5vZGVbcGFyZW50UHJvcGVydHldO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YWx1ZUluUGl4ZWxzID0gc3R5bGVWYWx1ZTtcbiAgfVxuICByZXR1cm4gdmFsdWVJblBpeGVscztcbn1cbmNvbnN0IGdldENvbXB1dGVkU3R5bGUgPSAoZWxlbWVudCkgPT4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgbnVsbCk7XG5mdW5jdGlvbiBnZXRTdHlsZShlbCwgcHJvcGVydHkpIHtcbiAgcmV0dXJuIGdldENvbXB1dGVkU3R5bGUoZWwpLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHkpO1xufVxuY29uc3QgcG9zaXRpb25zID0gWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXTtcbmZ1bmN0aW9uIGdldFBvc2l0aW9uZWRTdHlsZShzdHlsZXMsIHN0eWxlLCBzdWZmaXgpIHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIHN1ZmZpeCA9IHN1ZmZpeCA/ICctJyArIHN1ZmZpeCA6ICcnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgIGNvbnN0IHBvcyA9IHBvc2l0aW9uc1tpXTtcbiAgICByZXN1bHRbcG9zXSA9IHBhcnNlRmxvYXQoc3R5bGVzW3N0eWxlICsgJy0nICsgcG9zICsgc3VmZml4XSkgfHwgMDtcbiAgfVxuICByZXN1bHQud2lkdGggPSByZXN1bHQubGVmdCArIHJlc3VsdC5yaWdodDtcbiAgcmVzdWx0LmhlaWdodCA9IHJlc3VsdC50b3AgKyByZXN1bHQuYm90dG9tO1xuICByZXR1cm4gcmVzdWx0O1xufVxuY29uc3QgdXNlT2Zmc2V0UG9zID0gKHgsIHksIHRhcmdldCkgPT4gKHggPiAwIHx8IHkgPiAwKSAmJiAoIXRhcmdldCB8fCAhdGFyZ2V0LnNoYWRvd1Jvb3QpO1xuZnVuY3Rpb24gZ2V0Q2FudmFzUG9zaXRpb24oZXZ0LCBjYW52YXMpIHtcbiAgY29uc3QgZSA9IGV2dC5uYXRpdmUgfHwgZXZ0O1xuICBjb25zdCB0b3VjaGVzID0gZS50b3VjaGVzO1xuICBjb25zdCBzb3VyY2UgPSB0b3VjaGVzICYmIHRvdWNoZXMubGVuZ3RoID8gdG91Y2hlc1swXSA6IGU7XG4gIGNvbnN0IHtvZmZzZXRYLCBvZmZzZXRZfSA9IHNvdXJjZTtcbiAgbGV0IGJveCA9IGZhbHNlO1xuICBsZXQgeCwgeTtcbiAgaWYgKHVzZU9mZnNldFBvcyhvZmZzZXRYLCBvZmZzZXRZLCBlLnRhcmdldCkpIHtcbiAgICB4ID0gb2Zmc2V0WDtcbiAgICB5ID0gb2Zmc2V0WTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCByZWN0ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHggPSBzb3VyY2UuY2xpZW50WCAtIHJlY3QubGVmdDtcbiAgICB5ID0gc291cmNlLmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICBib3ggPSB0cnVlO1xuICB9XG4gIHJldHVybiB7eCwgeSwgYm94fTtcbn1cbmZ1bmN0aW9uIGdldFJlbGF0aXZlUG9zaXRpb24oZXZ0LCBjaGFydCkge1xuICBjb25zdCB7Y2FudmFzLCBjdXJyZW50RGV2aWNlUGl4ZWxSYXRpb30gPSBjaGFydDtcbiAgY29uc3Qgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGNhbnZhcyk7XG4gIGNvbnN0IGJvcmRlckJveCA9IHN0eWxlLmJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnO1xuICBjb25zdCBwYWRkaW5ncyA9IGdldFBvc2l0aW9uZWRTdHlsZShzdHlsZSwgJ3BhZGRpbmcnKTtcbiAgY29uc3QgYm9yZGVycyA9IGdldFBvc2l0aW9uZWRTdHlsZShzdHlsZSwgJ2JvcmRlcicsICd3aWR0aCcpO1xuICBjb25zdCB7eCwgeSwgYm94fSA9IGdldENhbnZhc1Bvc2l0aW9uKGV2dCwgY2FudmFzKTtcbiAgY29uc3QgeE9mZnNldCA9IHBhZGRpbmdzLmxlZnQgKyAoYm94ICYmIGJvcmRlcnMubGVmdCk7XG4gIGNvbnN0IHlPZmZzZXQgPSBwYWRkaW5ncy50b3AgKyAoYm94ICYmIGJvcmRlcnMudG9wKTtcbiAgbGV0IHt3aWR0aCwgaGVpZ2h0fSA9IGNoYXJ0O1xuICBpZiAoYm9yZGVyQm94KSB7XG4gICAgd2lkdGggLT0gcGFkZGluZ3Mud2lkdGggKyBib3JkZXJzLndpZHRoO1xuICAgIGhlaWdodCAtPSBwYWRkaW5ncy5oZWlnaHQgKyBib3JkZXJzLmhlaWdodDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IE1hdGgucm91bmQoKHggLSB4T2Zmc2V0KSAvIHdpZHRoICogY2FudmFzLndpZHRoIC8gY3VycmVudERldmljZVBpeGVsUmF0aW8pLFxuICAgIHk6IE1hdGgucm91bmQoKHkgLSB5T2Zmc2V0KSAvIGhlaWdodCAqIGNhbnZhcy5oZWlnaHQgLyBjdXJyZW50RGV2aWNlUGl4ZWxSYXRpbylcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldENvbnRhaW5lclNpemUoY2FudmFzLCB3aWR0aCwgaGVpZ2h0KSB7XG4gIGxldCBtYXhXaWR0aCwgbWF4SGVpZ2h0O1xuICBpZiAod2lkdGggPT09IHVuZGVmaW5lZCB8fCBoZWlnaHQgPT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IF9nZXRQYXJlbnROb2RlKGNhbnZhcyk7XG4gICAgaWYgKCFjb250YWluZXIpIHtcbiAgICAgIHdpZHRoID0gY2FudmFzLmNsaWVudFdpZHRoO1xuICAgICAgaGVpZ2h0ID0gY2FudmFzLmNsaWVudEhlaWdodDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcmVjdCA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIGNvbnN0IGNvbnRhaW5lclN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShjb250YWluZXIpO1xuICAgICAgY29uc3QgY29udGFpbmVyQm9yZGVyID0gZ2V0UG9zaXRpb25lZFN0eWxlKGNvbnRhaW5lclN0eWxlLCAnYm9yZGVyJywgJ3dpZHRoJyk7XG4gICAgICBjb25zdCBjb250YWluZXJQYWRkaW5nID0gZ2V0UG9zaXRpb25lZFN0eWxlKGNvbnRhaW5lclN0eWxlLCAncGFkZGluZycpO1xuICAgICAgd2lkdGggPSByZWN0LndpZHRoIC0gY29udGFpbmVyUGFkZGluZy53aWR0aCAtIGNvbnRhaW5lckJvcmRlci53aWR0aDtcbiAgICAgIGhlaWdodCA9IHJlY3QuaGVpZ2h0IC0gY29udGFpbmVyUGFkZGluZy5oZWlnaHQgLSBjb250YWluZXJCb3JkZXIuaGVpZ2h0O1xuICAgICAgbWF4V2lkdGggPSBwYXJzZU1heFN0eWxlKGNvbnRhaW5lclN0eWxlLm1heFdpZHRoLCBjb250YWluZXIsICdjbGllbnRXaWR0aCcpO1xuICAgICAgbWF4SGVpZ2h0ID0gcGFyc2VNYXhTdHlsZShjb250YWluZXJTdHlsZS5tYXhIZWlnaHQsIGNvbnRhaW5lciwgJ2NsaWVudEhlaWdodCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBtYXhXaWR0aDogbWF4V2lkdGggfHwgSU5GSU5JVFksXG4gICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHQgfHwgSU5GSU5JVFlcbiAgfTtcbn1cbmNvbnN0IHJvdW5kMSA9IHYgPT4gTWF0aC5yb3VuZCh2ICogMTApIC8gMTA7XG5mdW5jdGlvbiBnZXRNYXhpbXVtU2l6ZShjYW52YXMsIGJiV2lkdGgsIGJiSGVpZ2h0LCBhc3BlY3RSYXRpbykge1xuICBjb25zdCBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoY2FudmFzKTtcbiAgY29uc3QgbWFyZ2lucyA9IGdldFBvc2l0aW9uZWRTdHlsZShzdHlsZSwgJ21hcmdpbicpO1xuICBjb25zdCBtYXhXaWR0aCA9IHBhcnNlTWF4U3R5bGUoc3R5bGUubWF4V2lkdGgsIGNhbnZhcywgJ2NsaWVudFdpZHRoJykgfHwgSU5GSU5JVFk7XG4gIGNvbnN0IG1heEhlaWdodCA9IHBhcnNlTWF4U3R5bGUoc3R5bGUubWF4SGVpZ2h0LCBjYW52YXMsICdjbGllbnRIZWlnaHQnKSB8fCBJTkZJTklUWTtcbiAgY29uc3QgY29udGFpbmVyU2l6ZSA9IGdldENvbnRhaW5lclNpemUoY2FudmFzLCBiYldpZHRoLCBiYkhlaWdodCk7XG4gIGxldCB7d2lkdGgsIGhlaWdodH0gPSBjb250YWluZXJTaXplO1xuICBpZiAoc3R5bGUuYm94U2l6aW5nID09PSAnY29udGVudC1ib3gnKSB7XG4gICAgY29uc3QgYm9yZGVycyA9IGdldFBvc2l0aW9uZWRTdHlsZShzdHlsZSwgJ2JvcmRlcicsICd3aWR0aCcpO1xuICAgIGNvbnN0IHBhZGRpbmdzID0gZ2V0UG9zaXRpb25lZFN0eWxlKHN0eWxlLCAncGFkZGluZycpO1xuICAgIHdpZHRoIC09IHBhZGRpbmdzLndpZHRoICsgYm9yZGVycy53aWR0aDtcbiAgICBoZWlnaHQgLT0gcGFkZGluZ3MuaGVpZ2h0ICsgYm9yZGVycy5oZWlnaHQ7XG4gIH1cbiAgd2lkdGggPSBNYXRoLm1heCgwLCB3aWR0aCAtIG1hcmdpbnMud2lkdGgpO1xuICBoZWlnaHQgPSBNYXRoLm1heCgwLCBhc3BlY3RSYXRpbyA/IE1hdGguZmxvb3Iod2lkdGggLyBhc3BlY3RSYXRpbykgOiBoZWlnaHQgLSBtYXJnaW5zLmhlaWdodCk7XG4gIHdpZHRoID0gcm91bmQxKE1hdGgubWluKHdpZHRoLCBtYXhXaWR0aCwgY29udGFpbmVyU2l6ZS5tYXhXaWR0aCkpO1xuICBoZWlnaHQgPSByb3VuZDEoTWF0aC5taW4oaGVpZ2h0LCBtYXhIZWlnaHQsIGNvbnRhaW5lclNpemUubWF4SGVpZ2h0KSk7XG4gIGlmICh3aWR0aCAmJiAhaGVpZ2h0KSB7XG4gICAgaGVpZ2h0ID0gcm91bmQxKHdpZHRoIC8gMik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfTtcbn1cbmZ1bmN0aW9uIHJldGluYVNjYWxlKGNoYXJ0LCBmb3JjZVJhdGlvLCBmb3JjZVN0eWxlKSB7XG4gIGNvbnN0IHBpeGVsUmF0aW8gPSBmb3JjZVJhdGlvIHx8IDE7XG4gIGNvbnN0IGRldmljZUhlaWdodCA9IE1hdGguZmxvb3IoY2hhcnQuaGVpZ2h0ICogcGl4ZWxSYXRpbyk7XG4gIGNvbnN0IGRldmljZVdpZHRoID0gTWF0aC5mbG9vcihjaGFydC53aWR0aCAqIHBpeGVsUmF0aW8pO1xuICBjaGFydC5oZWlnaHQgPSBkZXZpY2VIZWlnaHQgLyBwaXhlbFJhdGlvO1xuICBjaGFydC53aWR0aCA9IGRldmljZVdpZHRoIC8gcGl4ZWxSYXRpbztcbiAgY29uc3QgY2FudmFzID0gY2hhcnQuY2FudmFzO1xuICBpZiAoY2FudmFzLnN0eWxlICYmIChmb3JjZVN0eWxlIHx8ICghY2FudmFzLnN0eWxlLmhlaWdodCAmJiAhY2FudmFzLnN0eWxlLndpZHRoKSkpIHtcbiAgICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gYCR7Y2hhcnQuaGVpZ2h0fXB4YDtcbiAgICBjYW52YXMuc3R5bGUud2lkdGggPSBgJHtjaGFydC53aWR0aH1weGA7XG4gIH1cbiAgaWYgKGNoYXJ0LmN1cnJlbnREZXZpY2VQaXhlbFJhdGlvICE9PSBwaXhlbFJhdGlvXG4gICAgICB8fCBjYW52YXMuaGVpZ2h0ICE9PSBkZXZpY2VIZWlnaHRcbiAgICAgIHx8IGNhbnZhcy53aWR0aCAhPT0gZGV2aWNlV2lkdGgpIHtcbiAgICBjaGFydC5jdXJyZW50RGV2aWNlUGl4ZWxSYXRpbyA9IHBpeGVsUmF0aW87XG4gICAgY2FudmFzLmhlaWdodCA9IGRldmljZUhlaWdodDtcbiAgICBjYW52YXMud2lkdGggPSBkZXZpY2VXaWR0aDtcbiAgICBjaGFydC5jdHguc2V0VHJhbnNmb3JtKHBpeGVsUmF0aW8sIDAsIDAsIHBpeGVsUmF0aW8sIDAsIDApO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmNvbnN0IHN1cHBvcnRzRXZlbnRMaXN0ZW5lck9wdGlvbnMgPSAoZnVuY3Rpb24oKSB7XG4gIGxldCBwYXNzaXZlU3VwcG9ydGVkID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIGdldCBwYXNzaXZlKCkge1xuICAgICAgICBwYXNzaXZlU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH07XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBudWxsLCBvcHRpb25zKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGVzdCcsIG51bGwsIG9wdGlvbnMpO1xuICB9IGNhdGNoIChlKSB7XG4gIH1cbiAgcmV0dXJuIHBhc3NpdmVTdXBwb3J0ZWQ7XG59KCkpO1xuZnVuY3Rpb24gcmVhZFVzZWRTaXplKGVsZW1lbnQsIHByb3BlcnR5KSB7XG4gIGNvbnN0IHZhbHVlID0gZ2V0U3R5bGUoZWxlbWVudCwgcHJvcGVydHkpO1xuICBjb25zdCBtYXRjaGVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goL14oXFxkKykoXFwuXFxkKyk/cHgkLyk7XG4gIHJldHVybiBtYXRjaGVzID8gK21hdGNoZXNbMV0gOiB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIF9wb2ludEluTGluZShwMSwgcDIsIHQsIG1vZGUpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBwMS54ICsgdCAqIChwMi54IC0gcDEueCksXG4gICAgeTogcDEueSArIHQgKiAocDIueSAtIHAxLnkpXG4gIH07XG59XG5mdW5jdGlvbiBfc3RlcHBlZEludGVycG9sYXRpb24ocDEsIHAyLCB0LCBtb2RlKSB7XG4gIHJldHVybiB7XG4gICAgeDogcDEueCArIHQgKiAocDIueCAtIHAxLngpLFxuICAgIHk6IG1vZGUgPT09ICdtaWRkbGUnID8gdCA8IDAuNSA/IHAxLnkgOiBwMi55XG4gICAgOiBtb2RlID09PSAnYWZ0ZXInID8gdCA8IDEgPyBwMS55IDogcDIueVxuICAgIDogdCA+IDAgPyBwMi55IDogcDEueVxuICB9O1xufVxuZnVuY3Rpb24gX2JlemllckludGVycG9sYXRpb24ocDEsIHAyLCB0LCBtb2RlKSB7XG4gIGNvbnN0IGNwMSA9IHt4OiBwMS5jcDJ4LCB5OiBwMS5jcDJ5fTtcbiAgY29uc3QgY3AyID0ge3g6IHAyLmNwMXgsIHk6IHAyLmNwMXl9O1xuICBjb25zdCBhID0gX3BvaW50SW5MaW5lKHAxLCBjcDEsIHQpO1xuICBjb25zdCBiID0gX3BvaW50SW5MaW5lKGNwMSwgY3AyLCB0KTtcbiAgY29uc3QgYyA9IF9wb2ludEluTGluZShjcDIsIHAyLCB0KTtcbiAgY29uc3QgZCA9IF9wb2ludEluTGluZShhLCBiLCB0KTtcbiAgY29uc3QgZSA9IF9wb2ludEluTGluZShiLCBjLCB0KTtcbiAgcmV0dXJuIF9wb2ludEluTGluZShkLCBlLCB0KTtcbn1cblxuY29uc3QgaW50bENhY2hlID0gbmV3IE1hcCgpO1xuZnVuY3Rpb24gZ2V0TnVtYmVyRm9ybWF0KGxvY2FsZSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgY29uc3QgY2FjaGVLZXkgPSBsb2NhbGUgKyBKU09OLnN0cmluZ2lmeShvcHRpb25zKTtcbiAgbGV0IGZvcm1hdHRlciA9IGludGxDYWNoZS5nZXQoY2FjaGVLZXkpO1xuICBpZiAoIWZvcm1hdHRlcikge1xuICAgIGZvcm1hdHRlciA9IG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIG9wdGlvbnMpO1xuICAgIGludGxDYWNoZS5zZXQoY2FjaGVLZXksIGZvcm1hdHRlcik7XG4gIH1cbiAgcmV0dXJuIGZvcm1hdHRlcjtcbn1cbmZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW0sIGxvY2FsZSwgb3B0aW9ucykge1xuICByZXR1cm4gZ2V0TnVtYmVyRm9ybWF0KGxvY2FsZSwgb3B0aW9ucykuZm9ybWF0KG51bSk7XG59XG5cbmNvbnN0IGdldFJpZ2h0VG9MZWZ0QWRhcHRlciA9IGZ1bmN0aW9uKHJlY3RYLCB3aWR0aCkge1xuICByZXR1cm4ge1xuICAgIHgoeCkge1xuICAgICAgcmV0dXJuIHJlY3RYICsgcmVjdFggKyB3aWR0aCAtIHg7XG4gICAgfSxcbiAgICBzZXRXaWR0aCh3KSB7XG4gICAgICB3aWR0aCA9IHc7XG4gICAgfSxcbiAgICB0ZXh0QWxpZ24oYWxpZ24pIHtcbiAgICAgIGlmIChhbGlnbiA9PT0gJ2NlbnRlcicpIHtcbiAgICAgICAgcmV0dXJuIGFsaWduO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFsaWduID09PSAncmlnaHQnID8gJ2xlZnQnIDogJ3JpZ2h0JztcbiAgICB9LFxuICAgIHhQbHVzKHgsIHZhbHVlKSB7XG4gICAgICByZXR1cm4geCAtIHZhbHVlO1xuICAgIH0sXG4gICAgbGVmdEZvckx0cih4LCBpdGVtV2lkdGgpIHtcbiAgICAgIHJldHVybiB4IC0gaXRlbVdpZHRoO1xuICAgIH0sXG4gIH07XG59O1xuY29uc3QgZ2V0TGVmdFRvUmlnaHRBZGFwdGVyID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgeCh4KSB7XG4gICAgICByZXR1cm4geDtcbiAgICB9LFxuICAgIHNldFdpZHRoKHcpIHtcbiAgICB9LFxuICAgIHRleHRBbGlnbihhbGlnbikge1xuICAgICAgcmV0dXJuIGFsaWduO1xuICAgIH0sXG4gICAgeFBsdXMoeCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB4ICsgdmFsdWU7XG4gICAgfSxcbiAgICBsZWZ0Rm9yTHRyKHgsIF9pdGVtV2lkdGgpIHtcbiAgICAgIHJldHVybiB4O1xuICAgIH0sXG4gIH07XG59O1xuZnVuY3Rpb24gZ2V0UnRsQWRhcHRlcihydGwsIHJlY3RYLCB3aWR0aCkge1xuICByZXR1cm4gcnRsID8gZ2V0UmlnaHRUb0xlZnRBZGFwdGVyKHJlY3RYLCB3aWR0aCkgOiBnZXRMZWZ0VG9SaWdodEFkYXB0ZXIoKTtcbn1cbmZ1bmN0aW9uIG92ZXJyaWRlVGV4dERpcmVjdGlvbihjdHgsIGRpcmVjdGlvbikge1xuICBsZXQgc3R5bGUsIG9yaWdpbmFsO1xuICBpZiAoZGlyZWN0aW9uID09PSAnbHRyJyB8fCBkaXJlY3Rpb24gPT09ICdydGwnKSB7XG4gICAgc3R5bGUgPSBjdHguY2FudmFzLnN0eWxlO1xuICAgIG9yaWdpbmFsID0gW1xuICAgICAgc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnZGlyZWN0aW9uJyksXG4gICAgICBzdHlsZS5nZXRQcm9wZXJ0eVByaW9yaXR5KCdkaXJlY3Rpb24nKSxcbiAgICBdO1xuICAgIHN0eWxlLnNldFByb3BlcnR5KCdkaXJlY3Rpb24nLCBkaXJlY3Rpb24sICdpbXBvcnRhbnQnKTtcbiAgICBjdHgucHJldlRleHREaXJlY3Rpb24gPSBvcmlnaW5hbDtcbiAgfVxufVxuZnVuY3Rpb24gcmVzdG9yZVRleHREaXJlY3Rpb24oY3R4LCBvcmlnaW5hbCkge1xuICBpZiAob3JpZ2luYWwgIT09IHVuZGVmaW5lZCkge1xuICAgIGRlbGV0ZSBjdHgucHJldlRleHREaXJlY3Rpb247XG4gICAgY3R4LmNhbnZhcy5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlyZWN0aW9uJywgb3JpZ2luYWxbMF0sIG9yaWdpbmFsWzFdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUZuKHByb3BlcnR5KSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2FuZ2xlJykge1xuICAgIHJldHVybiB7XG4gICAgICBiZXR3ZWVuOiBfYW5nbGVCZXR3ZWVuLFxuICAgICAgY29tcGFyZTogX2FuZ2xlRGlmZixcbiAgICAgIG5vcm1hbGl6ZTogX25vcm1hbGl6ZUFuZ2xlLFxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBiZXR3ZWVuOiBfaXNCZXR3ZWVuLFxuICAgIGNvbXBhcmU6IChhLCBiKSA9PiBhIC0gYixcbiAgICBub3JtYWxpemU6IHggPT4geFxuICB9O1xufVxuZnVuY3Rpb24gbm9ybWFsaXplU2VnbWVudCh7c3RhcnQsIGVuZCwgY291bnQsIGxvb3AsIHN0eWxlfSkge1xuICByZXR1cm4ge1xuICAgIHN0YXJ0OiBzdGFydCAlIGNvdW50LFxuICAgIGVuZDogZW5kICUgY291bnQsXG4gICAgbG9vcDogbG9vcCAmJiAoZW5kIC0gc3RhcnQgKyAxKSAlIGNvdW50ID09PSAwLFxuICAgIHN0eWxlXG4gIH07XG59XG5mdW5jdGlvbiBnZXRTZWdtZW50KHNlZ21lbnQsIHBvaW50cywgYm91bmRzKSB7XG4gIGNvbnN0IHtwcm9wZXJ0eSwgc3RhcnQ6IHN0YXJ0Qm91bmQsIGVuZDogZW5kQm91bmR9ID0gYm91bmRzO1xuICBjb25zdCB7YmV0d2Vlbiwgbm9ybWFsaXplfSA9IHByb3BlcnR5Rm4ocHJvcGVydHkpO1xuICBjb25zdCBjb3VudCA9IHBvaW50cy5sZW5ndGg7XG4gIGxldCB7c3RhcnQsIGVuZCwgbG9vcH0gPSBzZWdtZW50O1xuICBsZXQgaSwgaWxlbjtcbiAgaWYgKGxvb3ApIHtcbiAgICBzdGFydCArPSBjb3VudDtcbiAgICBlbmQgKz0gY291bnQ7XG4gICAgZm9yIChpID0gMCwgaWxlbiA9IGNvdW50OyBpIDwgaWxlbjsgKytpKSB7XG4gICAgICBpZiAoIWJldHdlZW4obm9ybWFsaXplKHBvaW50c1tzdGFydCAlIGNvdW50XVtwcm9wZXJ0eV0pLCBzdGFydEJvdW5kLCBlbmRCb3VuZCkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBzdGFydC0tO1xuICAgICAgZW5kLS07XG4gICAgfVxuICAgIHN0YXJ0ICU9IGNvdW50O1xuICAgIGVuZCAlPSBjb3VudDtcbiAgfVxuICBpZiAoZW5kIDwgc3RhcnQpIHtcbiAgICBlbmQgKz0gY291bnQ7XG4gIH1cbiAgcmV0dXJuIHtzdGFydCwgZW5kLCBsb29wLCBzdHlsZTogc2VnbWVudC5zdHlsZX07XG59XG5mdW5jdGlvbiBfYm91bmRTZWdtZW50KHNlZ21lbnQsIHBvaW50cywgYm91bmRzKSB7XG4gIGlmICghYm91bmRzKSB7XG4gICAgcmV0dXJuIFtzZWdtZW50XTtcbiAgfVxuICBjb25zdCB7cHJvcGVydHksIHN0YXJ0OiBzdGFydEJvdW5kLCBlbmQ6IGVuZEJvdW5kfSA9IGJvdW5kcztcbiAgY29uc3QgY291bnQgPSBwb2ludHMubGVuZ3RoO1xuICBjb25zdCB7Y29tcGFyZSwgYmV0d2Vlbiwgbm9ybWFsaXplfSA9IHByb3BlcnR5Rm4ocHJvcGVydHkpO1xuICBjb25zdCB7c3RhcnQsIGVuZCwgbG9vcCwgc3R5bGV9ID0gZ2V0U2VnbWVudChzZWdtZW50LCBwb2ludHMsIGJvdW5kcyk7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuICBsZXQgaW5zaWRlID0gZmFsc2U7XG4gIGxldCBzdWJTdGFydCA9IG51bGw7XG4gIGxldCB2YWx1ZSwgcG9pbnQsIHByZXZWYWx1ZTtcbiAgY29uc3Qgc3RhcnRJc0JlZm9yZSA9ICgpID0+IGJldHdlZW4oc3RhcnRCb3VuZCwgcHJldlZhbHVlLCB2YWx1ZSkgJiYgY29tcGFyZShzdGFydEJvdW5kLCBwcmV2VmFsdWUpICE9PSAwO1xuICBjb25zdCBlbmRJc0JlZm9yZSA9ICgpID0+IGNvbXBhcmUoZW5kQm91bmQsIHZhbHVlKSA9PT0gMCB8fCBiZXR3ZWVuKGVuZEJvdW5kLCBwcmV2VmFsdWUsIHZhbHVlKTtcbiAgY29uc3Qgc2hvdWxkU3RhcnQgPSAoKSA9PiBpbnNpZGUgfHwgc3RhcnRJc0JlZm9yZSgpO1xuICBjb25zdCBzaG91bGRTdG9wID0gKCkgPT4gIWluc2lkZSB8fCBlbmRJc0JlZm9yZSgpO1xuICBmb3IgKGxldCBpID0gc3RhcnQsIHByZXYgPSBzdGFydDsgaSA8PSBlbmQ7ICsraSkge1xuICAgIHBvaW50ID0gcG9pbnRzW2kgJSBjb3VudF07XG4gICAgaWYgKHBvaW50LnNraXApIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICB2YWx1ZSA9IG5vcm1hbGl6ZShwb2ludFtwcm9wZXJ0eV0pO1xuICAgIGlmICh2YWx1ZSA9PT0gcHJldlZhbHVlKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaW5zaWRlID0gYmV0d2Vlbih2YWx1ZSwgc3RhcnRCb3VuZCwgZW5kQm91bmQpO1xuICAgIGlmIChzdWJTdGFydCA9PT0gbnVsbCAmJiBzaG91bGRTdGFydCgpKSB7XG4gICAgICBzdWJTdGFydCA9IGNvbXBhcmUodmFsdWUsIHN0YXJ0Qm91bmQpID09PSAwID8gaSA6IHByZXY7XG4gICAgfVxuICAgIGlmIChzdWJTdGFydCAhPT0gbnVsbCAmJiBzaG91bGRTdG9wKCkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKG5vcm1hbGl6ZVNlZ21lbnQoe3N0YXJ0OiBzdWJTdGFydCwgZW5kOiBpLCBsb29wLCBjb3VudCwgc3R5bGV9KSk7XG4gICAgICBzdWJTdGFydCA9IG51bGw7XG4gICAgfVxuICAgIHByZXYgPSBpO1xuICAgIHByZXZWYWx1ZSA9IHZhbHVlO1xuICB9XG4gIGlmIChzdWJTdGFydCAhPT0gbnVsbCkge1xuICAgIHJlc3VsdC5wdXNoKG5vcm1hbGl6ZVNlZ21lbnQoe3N0YXJ0OiBzdWJTdGFydCwgZW5kLCBsb29wLCBjb3VudCwgc3R5bGV9KSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIF9ib3VuZFNlZ21lbnRzKGxpbmUsIGJvdW5kcykge1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgY29uc3Qgc2VnbWVudHMgPSBsaW5lLnNlZ21lbnRzO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgc3ViID0gX2JvdW5kU2VnbWVudChzZWdtZW50c1tpXSwgbGluZS5wb2ludHMsIGJvdW5kcyk7XG4gICAgaWYgKHN1Yi5sZW5ndGgpIHtcbiAgICAgIHJlc3VsdC5wdXNoKC4uLnN1Yik7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBmaW5kU3RhcnRBbmRFbmQocG9pbnRzLCBjb3VudCwgbG9vcCwgc3BhbkdhcHMpIHtcbiAgbGV0IHN0YXJ0ID0gMDtcbiAgbGV0IGVuZCA9IGNvdW50IC0gMTtcbiAgaWYgKGxvb3AgJiYgIXNwYW5HYXBzKSB7XG4gICAgd2hpbGUgKHN0YXJ0IDwgY291bnQgJiYgIXBvaW50c1tzdGFydF0uc2tpcCkge1xuICAgICAgc3RhcnQrKztcbiAgICB9XG4gIH1cbiAgd2hpbGUgKHN0YXJ0IDwgY291bnQgJiYgcG9pbnRzW3N0YXJ0XS5za2lwKSB7XG4gICAgc3RhcnQrKztcbiAgfVxuICBzdGFydCAlPSBjb3VudDtcbiAgaWYgKGxvb3ApIHtcbiAgICBlbmQgKz0gc3RhcnQ7XG4gIH1cbiAgd2hpbGUgKGVuZCA+IHN0YXJ0ICYmIHBvaW50c1tlbmQgJSBjb3VudF0uc2tpcCkge1xuICAgIGVuZC0tO1xuICB9XG4gIGVuZCAlPSBjb3VudDtcbiAgcmV0dXJuIHtzdGFydCwgZW5kfTtcbn1cbmZ1bmN0aW9uIHNvbGlkU2VnbWVudHMocG9pbnRzLCBzdGFydCwgbWF4LCBsb29wKSB7XG4gIGNvbnN0IGNvdW50ID0gcG9pbnRzLmxlbmd0aDtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGxldCBsYXN0ID0gc3RhcnQ7XG4gIGxldCBwcmV2ID0gcG9pbnRzW3N0YXJ0XTtcbiAgbGV0IGVuZDtcbiAgZm9yIChlbmQgPSBzdGFydCArIDE7IGVuZCA8PSBtYXg7ICsrZW5kKSB7XG4gICAgY29uc3QgY3VyID0gcG9pbnRzW2VuZCAlIGNvdW50XTtcbiAgICBpZiAoY3VyLnNraXAgfHwgY3VyLnN0b3ApIHtcbiAgICAgIGlmICghcHJldi5za2lwKSB7XG4gICAgICAgIGxvb3AgPSBmYWxzZTtcbiAgICAgICAgcmVzdWx0LnB1c2goe3N0YXJ0OiBzdGFydCAlIGNvdW50LCBlbmQ6IChlbmQgLSAxKSAlIGNvdW50LCBsb29wfSk7XG4gICAgICAgIHN0YXJ0ID0gbGFzdCA9IGN1ci5zdG9wID8gZW5kIDogbnVsbDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGFzdCA9IGVuZDtcbiAgICAgIGlmIChwcmV2LnNraXApIHtcbiAgICAgICAgc3RhcnQgPSBlbmQ7XG4gICAgICB9XG4gICAgfVxuICAgIHByZXYgPSBjdXI7XG4gIH1cbiAgaWYgKGxhc3QgIT09IG51bGwpIHtcbiAgICByZXN1bHQucHVzaCh7c3RhcnQ6IHN0YXJ0ICUgY291bnQsIGVuZDogbGFzdCAlIGNvdW50LCBsb29wfSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIF9jb21wdXRlU2VnbWVudHMobGluZSwgc2VnbWVudE9wdGlvbnMpIHtcbiAgY29uc3QgcG9pbnRzID0gbGluZS5wb2ludHM7XG4gIGNvbnN0IHNwYW5HYXBzID0gbGluZS5vcHRpb25zLnNwYW5HYXBzO1xuICBjb25zdCBjb3VudCA9IHBvaW50cy5sZW5ndGg7XG4gIGlmICghY291bnQpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3QgbG9vcCA9ICEhbGluZS5fbG9vcDtcbiAgY29uc3Qge3N0YXJ0LCBlbmR9ID0gZmluZFN0YXJ0QW5kRW5kKHBvaW50cywgY291bnQsIGxvb3AsIHNwYW5HYXBzKTtcbiAgaWYgKHNwYW5HYXBzID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIHNwbGl0QnlTdHlsZXMobGluZSwgW3tzdGFydCwgZW5kLCBsb29wfV0sIHBvaW50cywgc2VnbWVudE9wdGlvbnMpO1xuICB9XG4gIGNvbnN0IG1heCA9IGVuZCA8IHN0YXJ0ID8gZW5kICsgY291bnQgOiBlbmQ7XG4gIGNvbnN0IGNvbXBsZXRlTG9vcCA9ICEhbGluZS5fZnVsbExvb3AgJiYgc3RhcnQgPT09IDAgJiYgZW5kID09PSBjb3VudCAtIDE7XG4gIHJldHVybiBzcGxpdEJ5U3R5bGVzKGxpbmUsIHNvbGlkU2VnbWVudHMocG9pbnRzLCBzdGFydCwgbWF4LCBjb21wbGV0ZUxvb3ApLCBwb2ludHMsIHNlZ21lbnRPcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHNwbGl0QnlTdHlsZXMobGluZSwgc2VnbWVudHMsIHBvaW50cywgc2VnbWVudE9wdGlvbnMpIHtcbiAgaWYgKCFzZWdtZW50T3B0aW9ucyB8fCAhc2VnbWVudE9wdGlvbnMuc2V0Q29udGV4dCB8fCAhcG9pbnRzKSB7XG4gICAgcmV0dXJuIHNlZ21lbnRzO1xuICB9XG4gIHJldHVybiBkb1NwbGl0QnlTdHlsZXMobGluZSwgc2VnbWVudHMsIHBvaW50cywgc2VnbWVudE9wdGlvbnMpO1xufVxuZnVuY3Rpb24gZG9TcGxpdEJ5U3R5bGVzKGxpbmUsIHNlZ21lbnRzLCBwb2ludHMsIHNlZ21lbnRPcHRpb25zKSB7XG4gIGNvbnN0IGNoYXJ0Q29udGV4dCA9IGxpbmUuX2NoYXJ0LmdldENvbnRleHQoKTtcbiAgY29uc3QgYmFzZVN0eWxlID0gcmVhZFN0eWxlKGxpbmUub3B0aW9ucyk7XG4gIGNvbnN0IHtfZGF0YXNldEluZGV4OiBkYXRhc2V0SW5kZXgsIG9wdGlvbnM6IHtzcGFuR2Fwc319ID0gbGluZTtcbiAgY29uc3QgY291bnQgPSBwb2ludHMubGVuZ3RoO1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgbGV0IHByZXZTdHlsZSA9IGJhc2VTdHlsZTtcbiAgbGV0IHN0YXJ0ID0gc2VnbWVudHNbMF0uc3RhcnQ7XG4gIGxldCBpID0gc3RhcnQ7XG4gIGZ1bmN0aW9uIGFkZFN0eWxlKHMsIGUsIGwsIHN0KSB7XG4gICAgY29uc3QgZGlyID0gc3BhbkdhcHMgPyAtMSA6IDE7XG4gICAgaWYgKHMgPT09IGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcyArPSBjb3VudDtcbiAgICB3aGlsZSAocG9pbnRzW3MgJSBjb3VudF0uc2tpcCkge1xuICAgICAgcyAtPSBkaXI7XG4gICAgfVxuICAgIHdoaWxlIChwb2ludHNbZSAlIGNvdW50XS5za2lwKSB7XG4gICAgICBlICs9IGRpcjtcbiAgICB9XG4gICAgaWYgKHMgJSBjb3VudCAhPT0gZSAlIGNvdW50KSB7XG4gICAgICByZXN1bHQucHVzaCh7c3RhcnQ6IHMgJSBjb3VudCwgZW5kOiBlICUgY291bnQsIGxvb3A6IGwsIHN0eWxlOiBzdH0pO1xuICAgICAgcHJldlN0eWxlID0gc3Q7XG4gICAgICBzdGFydCA9IGUgJSBjb3VudDtcbiAgICB9XG4gIH1cbiAgZm9yIChjb25zdCBzZWdtZW50IG9mIHNlZ21lbnRzKSB7XG4gICAgc3RhcnQgPSBzcGFuR2FwcyA/IHN0YXJ0IDogc2VnbWVudC5zdGFydDtcbiAgICBsZXQgcHJldiA9IHBvaW50c1tzdGFydCAlIGNvdW50XTtcbiAgICBsZXQgc3R5bGU7XG4gICAgZm9yIChpID0gc3RhcnQgKyAxOyBpIDw9IHNlZ21lbnQuZW5kOyBpKyspIHtcbiAgICAgIGNvbnN0IHB0ID0gcG9pbnRzW2kgJSBjb3VudF07XG4gICAgICBzdHlsZSA9IHJlYWRTdHlsZShzZWdtZW50T3B0aW9ucy5zZXRDb250ZXh0KGNyZWF0ZUNvbnRleHQoY2hhcnRDb250ZXh0LCB7XG4gICAgICAgIHR5cGU6ICdzZWdtZW50JyxcbiAgICAgICAgcDA6IHByZXYsXG4gICAgICAgIHAxOiBwdCxcbiAgICAgICAgcDBEYXRhSW5kZXg6IChpIC0gMSkgJSBjb3VudCxcbiAgICAgICAgcDFEYXRhSW5kZXg6IGkgJSBjb3VudCxcbiAgICAgICAgZGF0YXNldEluZGV4XG4gICAgICB9KSkpO1xuICAgICAgaWYgKHN0eWxlQ2hhbmdlZChzdHlsZSwgcHJldlN0eWxlKSkge1xuICAgICAgICBhZGRTdHlsZShzdGFydCwgaSAtIDEsIHNlZ21lbnQubG9vcCwgcHJldlN0eWxlKTtcbiAgICAgIH1cbiAgICAgIHByZXYgPSBwdDtcbiAgICAgIHByZXZTdHlsZSA9IHN0eWxlO1xuICAgIH1cbiAgICBpZiAoc3RhcnQgPCBpIC0gMSkge1xuICAgICAgYWRkU3R5bGUoc3RhcnQsIGkgLSAxLCBzZWdtZW50Lmxvb3AsIHByZXZTdHlsZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiByZWFkU3R5bGUob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGJhY2tncm91bmRDb2xvcjogb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IsXG4gICAgYm9yZGVyQ2FwU3R5bGU6IG9wdGlvbnMuYm9yZGVyQ2FwU3R5bGUsXG4gICAgYm9yZGVyRGFzaDogb3B0aW9ucy5ib3JkZXJEYXNoLFxuICAgIGJvcmRlckRhc2hPZmZzZXQ6IG9wdGlvbnMuYm9yZGVyRGFzaE9mZnNldCxcbiAgICBib3JkZXJKb2luU3R5bGU6IG9wdGlvbnMuYm9yZGVySm9pblN0eWxlLFxuICAgIGJvcmRlcldpZHRoOiBvcHRpb25zLmJvcmRlcldpZHRoLFxuICAgIGJvcmRlckNvbG9yOiBvcHRpb25zLmJvcmRlckNvbG9yXG4gIH07XG59XG5mdW5jdGlvbiBzdHlsZUNoYW5nZWQoc3R5bGUsIHByZXZTdHlsZSkge1xuICByZXR1cm4gcHJldlN0eWxlICYmIEpTT04uc3RyaW5naWZ5KHN0eWxlKSAhPT0gSlNPTi5zdHJpbmdpZnkocHJldlN0eWxlKTtcbn1cblxuZXhwb3J0IHsgX3RvTGVmdFJpZ2h0Q2VudGVyIGFzICQsIF9ybG9va3VwQnlLZXkgYXMgQSwgZ2V0QW5nbGVGcm9tUG9pbnQgYXMgQiwgdG9QYWRkaW5nIGFzIEMsIGVhY2ggYXMgRCwgZ2V0TWF4aW11bVNpemUgYXMgRSwgX2dldFBhcmVudE5vZGUgYXMgRiwgcmVhZFVzZWRTaXplIGFzIEcsIEhBTEZfUEkgYXMgSCwgdGhyb3R0bGVkIGFzIEksIHN1cHBvcnRzRXZlbnRMaXN0ZW5lck9wdGlvbnMgYXMgSiwgX2lzRG9tU3VwcG9ydGVkIGFzIEssIGxvZzEwIGFzIEwsIF9mYWN0b3JpemUgYXMgTSwgZmluaXRlT3JEZWZhdWx0IGFzIE4sIGNhbGxiYWNrIGFzIE8sIFBJIGFzIFAsIF9hZGRHcmFjZSBhcyBRLCB0b0RlZ3JlZXMgYXMgUiwgX21lYXN1cmVUZXh0IGFzIFMsIFRBVSBhcyBULCBfaW50MTZSYW5nZSBhcyBVLCBfYWxpZ25QaXhlbCBhcyBWLCBjbGlwQXJlYSBhcyBXLCByZW5kZXJUZXh0IGFzIFgsIHVuY2xpcEFyZWEgYXMgWSwgdG9Gb250IGFzIFosIF9hcnJheVVuaXF1ZSBhcyBfLCByZXNvbHZlIGFzIGEsIF9hbmdsZURpZmYgYXMgYSQsIF9hbGlnblN0YXJ0RW5kIGFzIGEwLCBvdmVycmlkZXMgYXMgYTEsIG1lcmdlIGFzIGEyLCBfY2FwaXRhbGl6ZSBhcyBhMywgZGVzY3JpcHRvcnMgYXMgYTQsIGlzRnVuY3Rpb24gYXMgYTUsIF9hdHRhY2hDb250ZXh0IGFzIGE2LCBfY3JlYXRlUmVzb2x2ZXIgYXMgYTcsIF9kZXNjcmlwdG9ycyBhcyBhOCwgbWVyZ2VJZiBhcyBhOSwgcmVzdG9yZVRleHREaXJlY3Rpb24gYXMgYUEsIG5vb3AgYXMgYUIsIGRpc3RhbmNlQmV0d2VlblBvaW50cyBhcyBhQywgX3NldE1pbkFuZE1heEJ5S2V5IGFzIGFELCBuaWNlTnVtIGFzIGFFLCBhbG1vc3RXaG9sZSBhcyBhRiwgYWxtb3N0RXF1YWxzIGFzIGFHLCBfZGVjaW1hbFBsYWNlcyBhcyBhSCwgX2xvbmdlc3RUZXh0IGFzIGFJLCBfZmlsdGVyQmV0d2VlbiBhcyBhSiwgX2xvb2t1cCBhcyBhSywgZ2V0SG92ZXJDb2xvciBhcyBhTCwgY2xvbmUkMSBhcyBhTSwgX21lcmdlciBhcyBhTiwgX21lcmdlcklmIGFzIGFPLCBfZGVwcmVjYXRlZCBhcyBhUCwgdG9Gb250U3RyaW5nIGFzIGFRLCBzcGxpbmVDdXJ2ZSBhcyBhUiwgc3BsaW5lQ3VydmVNb25vdG9uZSBhcyBhUywgZ2V0U3R5bGUgYXMgYVQsIGZvbnRTdHJpbmcgYXMgYVUsIHRvTGluZUhlaWdodCBhcyBhViwgUElUQVUgYXMgYVcsIElORklOSVRZIGFzIGFYLCBSQURfUEVSX0RFRyBhcyBhWSwgUVVBUlRFUl9QSSBhcyBhWiwgVFdPX1RISVJEU19QSSBhcyBhXywgdWlkIGFzIGFhLCBkZWJvdW5jZSBhcyBhYiwgcmV0aW5hU2NhbGUgYXMgYWMsIGNsZWFyQ2FudmFzIGFzIGFkLCBzZXRzRXF1YWwgYXMgYWUsIF9lbGVtZW50c0VxdWFsIGFzIGFmLCBfaXNDbGlja0V2ZW50IGFzIGFnLCBfaXNCZXR3ZWVuIGFzIGFoLCBfcmVhZFZhbHVlVG9Qcm9wcyBhcyBhaSwgX3VwZGF0ZUJlemllckNvbnRyb2xQb2ludHMgYXMgYWosIF9jb21wdXRlU2VnbWVudHMgYXMgYWssIF9ib3VuZFNlZ21lbnRzIGFzIGFsLCBfc3RlcHBlZEludGVycG9sYXRpb24gYXMgYW0sIF9iZXppZXJJbnRlcnBvbGF0aW9uIGFzIGFuLCBfcG9pbnRJbkxpbmUgYXMgYW8sIF9zdGVwcGVkTGluZVRvIGFzIGFwLCBfYmV6aWVyQ3VydmVUbyBhcyBhcSwgZHJhd1BvaW50IGFzIGFyLCBhZGRSb3VuZGVkUmVjdFBhdGggYXMgYXMsIHRvVFJCTCBhcyBhdCwgdG9UUkJMQ29ybmVycyBhcyBhdSwgX2JvdW5kU2VnbWVudCBhcyBhdiwgX25vcm1hbGl6ZUFuZ2xlIGFzIGF3LCBnZXRSdGxBZGFwdGVyIGFzIGF4LCBvdmVycmlkZVRleHREaXJlY3Rpb24gYXMgYXksIF90ZXh0WCBhcyBheiwgaXNBcnJheSBhcyBiLCBjb2xvciBhcyBjLCBkZWZhdWx0cyBhcyBkLCBlZmZlY3RzIGFzIGUsIHJlc29sdmVPYmplY3RLZXkgYXMgZiwgaXNOdW1iZXJGaW5pdGUgYXMgZywgY3JlYXRlQ29udGV4dCBhcyBoLCBpc09iamVjdCBhcyBpLCBkZWZpbmVkIGFzIGosIGlzTnVsbE9yVW5kZWYgYXMgaywgbGlzdGVuQXJyYXlFdmVudHMgYXMgbCwgdG9QZXJjZW50YWdlIGFzIG0sIHRvRGltZW5zaW9uIGFzIG4sIGZvcm1hdE51bWJlciBhcyBvLCBfYW5nbGVCZXR3ZWVuIGFzIHAsIGlzTnVtYmVyIGFzIHEsIHJlcXVlc3RBbmltRnJhbWUgYXMgciwgc2lnbiBhcyBzLCB0b1JhZGlhbnMgYXMgdCwgdW5saXN0ZW5BcnJheUV2ZW50cyBhcyB1LCB2YWx1ZU9yRGVmYXVsdCBhcyB2LCBfbGltaXRWYWx1ZSBhcyB3LCBfbG9va3VwQnlLZXkgYXMgeCwgZ2V0UmVsYXRpdmVQb3NpdGlvbiBhcyB5LCBfaXNQb2ludEluQXJlYSBhcyB6IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/chart.js/dist/chunks/helpers.segment.js\n");

/***/ }),

/***/ "./node_modules/moment/moment.js":
/*!***************************************!*\
  !*** ./node_modules/moment/moment.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n//! moment.js\n//! version : 2.29.2\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            \"object\" !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = undefined;\n                Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/moment/moment.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) === null || ref === void 0 ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) === null || ref1 === void 0 ? void 0 : ref1.env) === 'object' ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0sNEVBQTRFLHFCQUFNLDBFQUEwRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUU1TyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5lbnYpICYmIHR5cGVvZiAoKHJlZjEgPSBnbG9iYWwucHJvY2VzcykgPT09IG51bGwgfHwgcmVmMSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSAnb2JqZWN0JyA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZSgnLi4vLi4vY29tcGlsZWQvcHJvY2VzcycpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n");

/***/ }),

/***/ "./components/Button.tsx":
/*!*******************************!*\
  !*** ./components/Button.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _nextui_org_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nextui-org/react */ \"./node_modules/@nextui-org/react/esm/index.js\");\nvar _this = undefined;\n\n\n\nvar Button = function(param) {\n    var label = param.label, auto = param.auto, style = param.style, icon = param.icon, onClick = param.onClick;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        auto: auto,\n        icon: icon,\n        onClick: onClick,\n        children: label\n    }, void 0, false, {\n        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Button.tsx\",\n        lineNumber: 13,\n        columnNumber: 3\n    }, _this);\n};\n_c = Button;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);\nvar _c;\n$RefreshReg$(_c, \"Button\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0J1dHRvbi50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQXlDO0FBQ2dCO0FBVXpELElBQU1DLE1BQU0sR0FBRztRQUFHRSxLQUFLLFNBQUxBLEtBQUssRUFBRUMsSUFBSSxTQUFKQSxJQUFJLEVBQUVDLEtBQUssU0FBTEEsS0FBSyxFQUFFQyxJQUFJLFNBQUpBLElBQUksRUFBRUMsT0FBTyxTQUFQQSxPQUFPO3lCQUNqRCw4REFBQ0wscURBQVU7UUFBQ0UsSUFBSSxFQUFFQSxJQUFJO1FBQUVFLElBQUksRUFBRUEsSUFBSTtRQUFFQyxPQUFPLEVBQUVBLE9BQU87a0JBQ2pESixLQUFLOzs7OzthQUNLO0NBQ2Q7QUFKS0YsS0FBQUEsTUFBTTtBQU1aLCtEQUFlQSxNQUFNLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9CdXR0b24udHN4Pzc0MGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQnV0dG9uIGFzIE5leHRCdXR0b24gfSBmcm9tIFwiQG5leHR1aS1vcmcvcmVhY3RcIjtcblxudHlwZSBQcm9wcyA9IHtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIHN0eWxlPzogb2JqZWN0O1xuICBhdXRvPzogYm9vbGVhbjtcbiAgaWNvbj86IFJlYWN0Tm9kZTtcbiAgb25DbGljaz86IGFueTtcbn07XG5cbmNvbnN0IEJ1dHRvbiA9ICh7IGxhYmVsLCBhdXRvLCBzdHlsZSwgaWNvbiwgb25DbGljayB9OiBQcm9wcykgPT4gKFxuICA8TmV4dEJ1dHRvbiBhdXRvPXthdXRvfSBpY29uPXtpY29ufSBvbkNsaWNrPXtvbkNsaWNrfT5cbiAgICB7bGFiZWx9XG4gIDwvTmV4dEJ1dHRvbj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkJ1dHRvbiIsIk5leHRCdXR0b24iLCJsYWJlbCIsImF1dG8iLCJzdHlsZSIsImljb24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Button.tsx\n");

/***/ }),

/***/ "./components/Converter.tsx":
/*!**********************************!*\
  !*** ./components/Converter.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _nextui_org_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @nextui-org/react */ \"./node_modules/@nextui-org/react/esm/index.js\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components */ \"./components/index.tsx\");\n/* harmony import */ var react_iconly__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-iconly */ \"./node_modules/react-iconly/dist/index.modern.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);\nvar _this = undefined;\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nvar styles = {\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#01052d\",\n        height: \"100vh\",\n        width: \"100vw\"\n    },\n    logoContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        padding: 20\n    },\n    logo: {\n        alignSelf: \"center\",\n        width: \"100%\",\n        height: \"auto\"\n    },\n    card: {\n        m: \"$10\",\n        p: \"$5\",\n        width: \"auto\"\n    },\n    inputContainer: {\n        marginTop: 10,\n        marginBottom: 10\n    }\n};\nvar Converter = function(props) {\n    var _this1 = _this;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.0), nep = ref[0], setNep = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.0), busd = ref1[0], setBusd = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true), isDefault = ref2[0], setIsDefault = ref2[1];\n    var onChangeValue = function(type, value) {\n        var stringTest = /^\\d*\\.?\\d*$/;\n        var result = 0;\n        if (!stringTest.test(value) && value !== \"\") {\n            return;\n        }\n        if (type === \"NEP\") {\n            result = Math.round(parseFloat(value) * 3 * 100) / 100;\n            setBusd(result);\n            setNep(value);\n        }\n        if (type === \"BUSD\") {\n            result = Math.round(parseFloat(value) / 3 * 100) / 100;\n            setNep(result);\n            setBusd(value);\n        }\n    };\n    var _renderCardHeader = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Text, {\n                    h3: true,\n                    children: isDefault ? \"3 BUSD\" : \"0.33 NEP\"\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 71,\n                    columnNumber: 7\n                }, _this1),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Text, {\n                    i: true,\n                    color: isDefault ? \"success\" : \"error\",\n                    children: isDefault ? \"+0.5 (16%) \\u25B2 today\" : \"-0.5 (16%) \\u25BC today\"\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 72,\n                    columnNumber: 7\n                }, _this1),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Text, {\n                    size: 12,\n                    children: moment__WEBPACK_IMPORTED_MODULE_3___default()().format(\"MMM DD, HH:mm A\") + \" PST\"\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 75,\n                    columnNumber: 7\n                }, _this1)\n            ]\n        }, void 0, true);\n    };\n    var _renderCharts = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Recharts, {\n            isDefault: isDefault\n        }, void 0, false, {\n            fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n            lineNumber: 79,\n            columnNumber: 31\n        }, _this1);\n    };\n    var _renderForm = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Grid.Container, {\n            css: styles.inputContainer,\n            gap: 1,\n            justify: \"center\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n                    xs: 12,\n                    sm: 5,\n                    md: 5,\n                    lg: 5,\n                    children: isDefault ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        label: \"NEP\",\n                        placeholder: \"0.00\",\n                        value: nep ? nep : \"\",\n                        onChangeValue: onChangeValue\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 85,\n                        columnNumber: 11\n                    }, _this1) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        label: \"BUSD\",\n                        placeholder: \"0.00\",\n                        value: busd ? busd : \"\",\n                        onChangeValue: onChangeValue\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 92,\n                        columnNumber: 11\n                    }, _this1)\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 83,\n                    columnNumber: 7\n                }, _this1),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n                    xs: 12,\n                    sm: 2,\n                    md: 2,\n                    lg: 2,\n                    alignItems: \"center\",\n                    justify: \"center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        auto: true,\n                        icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_iconly__WEBPACK_IMPORTED_MODULE_5__.Swap, {\n                            set: \"bold\",\n                            primaryColor: \"white\"\n                        }, void 0, false, void 0, void 0),\n                        onClick: function() {\n                            return setIsDefault(!isDefault);\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 101,\n                        columnNumber: 9\n                    }, _this1)\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 100,\n                    columnNumber: 7\n                }, _this1),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n                    xs: 12,\n                    sm: 5,\n                    md: 5,\n                    lg: 5,\n                    children: isDefault ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        label: \"BUSD\",\n                        placeholder: \"0.00\",\n                        value: busd ? busd : \"\",\n                        onChangeValue: onChangeValue\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 109,\n                        columnNumber: 11\n                    }, _this1) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        label: \"NEP\",\n                        placeholder: \"0.00\",\n                        value: nep ? nep : \"\",\n                        onChangeValue: onChangeValue\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 116,\n                        columnNumber: 11\n                    }, _this1)\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 107,\n                    columnNumber: 7\n                }, _this1)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n            lineNumber: 82,\n            columnNumber: 5\n        }, _this1);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: styles.root,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.logoContainer,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Image, {\n                    style: styles.logo,\n                    src: \"https://neptunemutual.com/logos/neptune-mutual-full-inverse.png\"\n                }, void 0, false, {\n                    fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                    lineNumber: 130,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                lineNumber: 129,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_4__.Card, {\n                css: styles.card,\n                children: [\n                    _renderCardHeader(),\n                    _renderCharts(),\n                    _renderForm(),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                        label: \"Check Wallet Details\"\n                    }, void 0, false, {\n                        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                        lineNumber: 139,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n                lineNumber: 135,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Converter.tsx\",\n        lineNumber: 128,\n        columnNumber: 5\n    }, _this);\n};\n_s(Converter, \"SK/WmyPG4h6qxvXrz9C3uqCPQwM=\");\n_c = Converter;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Converter);\nvar _c;\n$RefreshReg$(_c, \"Converter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Converter.tsx\n");

/***/ }),

/***/ "./components/Input.tsx":
/*!******************************!*\
  !*** ./components/Input.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _nextui_org_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nextui-org/react */ \"./node_modules/@nextui-org/react/esm/index.js\");\nvar _this = undefined;\n\n\n\nvar styles = {\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\"\n    }\n};\nvar Input = function(param) {\n    var label = param.label, placeholder = param.placeholder, value = param.value, onChangeValue = param.onChangeValue;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: styles.root,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                css: {\n                    ml: \"$3\",\n                    mb: \"$3\"\n                },\n                b: true,\n                children: label\n            }, void 0, false, {\n                fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Input.tsx\",\n                lineNumber: 21,\n                columnNumber: 5\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_nextui_org_react__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                \"aria-label\": \"label\",\n                fullWidth: true,\n                placeholder: placeholder,\n                value: value,\n                onChange: function(e) {\n                    return onChangeValue(label, e.target.value);\n                }\n            }, void 0, false, {\n                fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Input.tsx\",\n                lineNumber: 24,\n                columnNumber: 5\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Input.tsx\",\n        lineNumber: 20,\n        columnNumber: 3\n    }, _this);\n};\n_c = Input;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Input);\nvar _c;\n$RefreshReg$(_c, \"Input\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0lucHV0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFBMEI7QUFDbUM7QUFTN0QsSUFBTUksTUFBTSxHQUFHO0lBQ2JDLElBQUksRUFBRTtRQUNKQyxPQUFPLEVBQUUsTUFBTTtRQUNmQyxhQUFhLEVBQUUsUUFBUTtRQUN2QkMsS0FBSyxFQUFFLE1BQU07S0FDZDtDQUNGO0FBRUQsSUFBTVAsS0FBSyxHQUFHO1FBQUdRLEtBQUssU0FBTEEsS0FBSyxFQUFFQyxXQUFXLFNBQVhBLFdBQVcsRUFBRUMsS0FBSyxTQUFMQSxLQUFLLEVBQUVDLGFBQWEsU0FBYkEsYUFBYTt5QkFDdkQsOERBQUNDLEtBQUc7UUFBQ0MsS0FBSyxFQUFFVixNQUFNLENBQUNDLElBQUk7OzBCQUNyQiw4REFBQ0YsbURBQUk7Z0JBQUNZLEdBQUcsRUFBRTtvQkFBRUMsRUFBRSxFQUFFLElBQUk7b0JBQUVDLEVBQUUsRUFBRSxJQUFJO2lCQUFFO2dCQUFFQyxDQUFDOzBCQUNqQ1QsS0FBSzs7Ozs7cUJBQ0Q7MEJBQ1AsOERBQUNQLG9EQUFTO2dCQUNSaUIsWUFBVSxFQUFFLE9BQU87Z0JBQ25CQyxTQUFTO2dCQUNUVixXQUFXLEVBQUVBLFdBQVc7Z0JBQ3hCQyxLQUFLLEVBQUVBLEtBQUs7Z0JBQ1pVLFFBQVEsRUFBRSxTQUFDQyxDQUFDOzJCQUFLVixhQUFhLENBQUNILEtBQUssRUFBRWEsQ0FBQyxDQUFDQyxNQUFNLENBQUNaLEtBQUssQ0FBQztpQkFBQTs7Ozs7cUJBQ3JEOzs7Ozs7YUFDRTtDQUNQO0FBYktWLEtBQUFBLEtBQUs7QUFlWCwrREFBZUEsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSW5wdXQudHN4PzdmMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5wdXQgYXMgTmV4dElucHV0LCBUZXh0IH0gZnJvbSBcIkBuZXh0dWktb3JnL3JlYWN0XCI7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBwbGFjZWhvbGRlcj86IHN0cmluZztcbiAgdmFsdWU/OiBhbnk7XG4gIG9uQ2hhbmdlVmFsdWU/OiBhbnk7XG59O1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHJvb3Q6IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiIGFzIFwiY29sdW1uXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICB9LFxufTtcblxuY29uc3QgSW5wdXQgPSAoeyBsYWJlbCwgcGxhY2Vob2xkZXIsIHZhbHVlLCBvbkNoYW5nZVZhbHVlIH06IFByb3BzKSA9PiAoXG4gIDxkaXYgc3R5bGU9e3N0eWxlcy5yb290fT5cbiAgICA8VGV4dCBjc3M9e3sgbWw6IFwiJDNcIiwgbWI6IFwiJDNcIiB9fSBiPlxuICAgICAge2xhYmVsfVxuICAgIDwvVGV4dD5cbiAgICA8TmV4dElucHV0XG4gICAgICBhcmlhLWxhYmVsPXtcImxhYmVsXCJ9XG4gICAgICBmdWxsV2lkdGhcbiAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gb25DaGFuZ2VWYWx1ZShsYWJlbCwgZS50YXJnZXQudmFsdWUpfVxuICAgIC8+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSW5wdXQ7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJJbnB1dCIsIk5leHRJbnB1dCIsIlRleHQiLCJzdHlsZXMiLCJyb290IiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJ3aWR0aCIsImxhYmVsIiwicGxhY2Vob2xkZXIiLCJ2YWx1ZSIsIm9uQ2hhbmdlVmFsdWUiLCJkaXYiLCJzdHlsZSIsImNzcyIsIm1sIiwibWIiLCJiIiwiYXJpYS1sYWJlbCIsImZ1bGxXaWR0aCIsIm9uQ2hhbmdlIiwiZSIsInRhcmdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Input.tsx\n");

/***/ }),

/***/ "./components/Recharts.tsx":
/*!*********************************!*\
  !*** ./components/Recharts.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js */ \"./node_modules/chart.js/dist/chart.esm.js\");\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-chartjs-2 */ \"./node_modules/react-chartjs-2/dist/index.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_2__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_2__.CategoryScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.PointElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.Title, chart_js__WEBPACK_IMPORTED_MODULE_2__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_2__.Legend);\nfunction Recharts(param) {\n    var isDefault = param.isDefault;\n    var options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                display: false,\n                position: \"top\"\n            },\n            title: {\n                display: true,\n                text: isDefault ? \"NEP - BUSD\" : \"BUSD - NEP\"\n            }\n        }\n    };\n    var labels = [\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(1, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(2, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(3, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(4, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(5, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(6, \"hour\").format(\"HH:00 A\"),\n        moment__WEBPACK_IMPORTED_MODULE_3___default()().add(7, \"hour\").format(\"HH:00 A\"), \n    ];\n    var data = {\n        labels: labels,\n        datasets: [\n            {\n                label: \"Rate\",\n                data: [\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9\n                ].sort(function(a, b) {\n                    return 0.5 - Math.random();\n                }),\n                borderColor: \"rgb(129 201 149)\",\n                backgroundColor: \"rgba(129 201 149)\"\n            }, \n        ]\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_4__.Line, {\n        options: options,\n        data: data\n    }, void 0, false, {\n        fileName: \"/Users/bonlemuel/Development/NEPTUNE/neptune-mutual-assesment-delacruz/components/Recharts.tsx\",\n        lineNumber: 66,\n        columnNumber: 10\n    }, this);\n}\n_c = Recharts;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Recharts);\nvar _c;\n$RefreshReg$(_c, \"Recharts\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1JlY2hhcnRzLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUEwQjtBQVVSO0FBQ3FCO0FBQ1g7QUFFNUJFLG9EQUFnQixDQUNkQyxtREFBYSxFQUNiQyxpREFBVyxFQUNYQyxrREFBWSxFQUNaQyxpREFBVyxFQUNYQywyQ0FBSyxFQUNMQyw2Q0FBTyxFQUNQQyw0Q0FBTSxDQUNQLENBQUM7QUFNRixTQUFTSSxRQUFRLENBQUMsS0FBb0IsRUFBRTtRQUF0QixTQUFXLEdBQVgsS0FBb0IsQ0FBbEJDLFNBQVM7SUFDM0IsSUFBTUMsT0FBTyxHQUFHO1FBQ2RDLFVBQVUsRUFBRSxJQUFJO1FBQ2hCQyxPQUFPLEVBQUU7WUFDUEMsTUFBTSxFQUFFO2dCQUNOQyxPQUFPLEVBQUUsS0FBSztnQkFDZEMsUUFBUSxFQUFFLEtBQUs7YUFDaEI7WUFDREMsS0FBSyxFQUFFO2dCQUNMRixPQUFPLEVBQUUsSUFBSTtnQkFDYkcsSUFBSSxFQUFFUixTQUFTLEdBQUcsWUFBWSxHQUFHLFlBQVk7YUFDOUM7U0FDRjtLQUNGO0lBRUQsSUFBTVMsTUFBTSxHQUFHO1FBQ2JaLDZDQUFNLEVBQUUsQ0FBQ2EsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUMxQmIsNkNBQU0sRUFBRSxDQUFDYyxHQUFHLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDRCxNQUFNLENBQUMsU0FBUyxDQUFDO1FBQ3pDYiw2Q0FBTSxFQUFFLENBQUNjLEdBQUcsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDekNiLDZDQUFNLEVBQUUsQ0FBQ2MsR0FBRyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQ0QsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUN6Q2IsNkNBQU0sRUFBRSxDQUFDYyxHQUFHLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDRCxNQUFNLENBQUMsU0FBUyxDQUFDO1FBQ3pDYiw2Q0FBTSxFQUFFLENBQUNjLEdBQUcsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUNELE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDekNiLDZDQUFNLEVBQUUsQ0FBQ2MsR0FBRyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQ0QsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUN6Q2IsNkNBQU0sRUFBRSxDQUFDYyxHQUFHLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDRCxNQUFNLENBQUMsU0FBUyxDQUFDO0tBQzFDO0lBRUQsSUFBTUUsSUFBSSxHQUFHO1FBQ1hILE1BQU0sRUFBTkEsTUFBTTtRQUNOSSxRQUFRLEVBQUU7WUFDUjtnQkFDRUMsS0FBSyxFQUFFLE1BQU07Z0JBQ2JGLElBQUksRUFBRTtBQUFDLHFCQUFDO0FBQUUscUJBQUM7QUFBRSxxQkFBQztBQUFFLHFCQUFDO0FBQUUscUJBQUM7QUFBRSxxQkFBQztBQUFFLHFCQUFDO0FBQUUscUJBQUM7QUFBRSxxQkFBQztpQkFBQyxDQUFDRyxJQUFJLENBQUMsU0FBQ0MsQ0FBQyxFQUFFQyxDQUFDOzJCQUFLLEdBQUcsR0FBR0MsSUFBSSxDQUFDQyxNQUFNLEVBQUU7aUJBQUEsQ0FBQztnQkFDckVDLFdBQVcsRUFBRSxrQkFBa0I7Z0JBQy9CQyxlQUFlLEVBQUUsbUJBQW1CO2FBQ3JDO1NBQ0Y7S0FDRjtJQUNELHFCQUFPLDhEQUFDekIsaURBQUk7UUFBQ0ssT0FBTyxFQUFFQSxPQUFPO1FBQUVXLElBQUksRUFBRUEsSUFBSTs7Ozs7WUFBSSxDQUFDO0NBQy9DO0FBdENRYixLQUFBQSxRQUFRO0FBd0NqQiwrREFBZUEsUUFBUSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvUmVjaGFydHMudHN4PzM5ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgQ2hhcnQgYXMgQ2hhcnRKUyxcbiAgQ2F0ZWdvcnlTY2FsZSxcbiAgTGluZWFyU2NhbGUsXG4gIFBvaW50RWxlbWVudCxcbiAgTGluZUVsZW1lbnQsXG4gIFRpdGxlLFxuICBUb29sdGlwLFxuICBMZWdlbmQsXG59IGZyb20gXCJjaGFydC5qc1wiO1xuaW1wb3J0IHsgTGluZSB9IGZyb20gXCJyZWFjdC1jaGFydGpzLTJcIjtcbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiO1xuXG5DaGFydEpTLnJlZ2lzdGVyKFxuICBDYXRlZ29yeVNjYWxlLFxuICBMaW5lYXJTY2FsZSxcbiAgUG9pbnRFbGVtZW50LFxuICBMaW5lRWxlbWVudCxcbiAgVGl0bGUsXG4gIFRvb2x0aXAsXG4gIExlZ2VuZFxuKTtcblxudHlwZSBQcm9wcyA9IHtcbiAgaXNEZWZhdWx0PzogYm9vbGVhbjtcbn07XG5cbmZ1bmN0aW9uIFJlY2hhcnRzKHsgaXNEZWZhdWx0IH06IFByb3BzKSB7XG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICBwbHVnaW5zOiB7XG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgIHBvc2l0aW9uOiBcInRvcFwiIGFzIGNvbnN0LFxuICAgICAgfSxcbiAgICAgIHRpdGxlOiB7XG4gICAgICAgIGRpc3BsYXk6IHRydWUsXG4gICAgICAgIHRleHQ6IGlzRGVmYXVsdCA/IFwiTkVQIC0gQlVTRFwiIDogXCJCVVNEIC0gTkVQXCIsXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG5cbiAgY29uc3QgbGFiZWxzID0gW1xuICAgIG1vbWVudCgpLmZvcm1hdChcIkhIOjAwIEFcIiksXG4gICAgbW9tZW50KCkuYWRkKDEsIFwiaG91clwiKS5mb3JtYXQoXCJISDowMCBBXCIpLFxuICAgIG1vbWVudCgpLmFkZCgyLCBcImhvdXJcIikuZm9ybWF0KFwiSEg6MDAgQVwiKSxcbiAgICBtb21lbnQoKS5hZGQoMywgXCJob3VyXCIpLmZvcm1hdChcIkhIOjAwIEFcIiksXG4gICAgbW9tZW50KCkuYWRkKDQsIFwiaG91clwiKS5mb3JtYXQoXCJISDowMCBBXCIpLFxuICAgIG1vbWVudCgpLmFkZCg1LCBcImhvdXJcIikuZm9ybWF0KFwiSEg6MDAgQVwiKSxcbiAgICBtb21lbnQoKS5hZGQoNiwgXCJob3VyXCIpLmZvcm1hdChcIkhIOjAwIEFcIiksXG4gICAgbW9tZW50KCkuYWRkKDcsIFwiaG91clwiKS5mb3JtYXQoXCJISDowMCBBXCIpLFxuICBdO1xuXG4gIGNvbnN0IGRhdGEgPSB7XG4gICAgbGFiZWxzLFxuICAgIGRhdGFzZXRzOiBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBcIlJhdGVcIixcbiAgICAgICAgZGF0YTogWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDldLnNvcnQoKGEsIGIpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpLFxuICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2IoMTI5IDIwMSAxNDkpXCIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDEyOSAyMDEgMTQ5KVwiLFxuICAgICAgfSxcbiAgICBdLFxuICB9O1xuICByZXR1cm4gPExpbmUgb3B0aW9ucz17b3B0aW9uc30gZGF0YT17ZGF0YX0gLz47XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlY2hhcnRzO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ2hhcnQiLCJDaGFydEpTIiwiQ2F0ZWdvcnlTY2FsZSIsIkxpbmVhclNjYWxlIiwiUG9pbnRFbGVtZW50IiwiTGluZUVsZW1lbnQiLCJUaXRsZSIsIlRvb2x0aXAiLCJMZWdlbmQiLCJMaW5lIiwibW9tZW50IiwicmVnaXN0ZXIiLCJSZWNoYXJ0cyIsImlzRGVmYXVsdCIsIm9wdGlvbnMiLCJyZXNwb25zaXZlIiwicGx1Z2lucyIsImxlZ2VuZCIsImRpc3BsYXkiLCJwb3NpdGlvbiIsInRpdGxlIiwidGV4dCIsImxhYmVscyIsImZvcm1hdCIsImFkZCIsImRhdGEiLCJkYXRhc2V0cyIsImxhYmVsIiwic29ydCIsImEiLCJiIiwiTWF0aCIsInJhbmRvbSIsImJvcmRlckNvbG9yIiwiYmFja2dyb3VuZENvbG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Recharts.tsx\n");

/***/ }),

/***/ "./components/index.tsx":
/*!******************************!*\
  !*** ./components/index.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Button\": function() { return /* reexport safe */ _Button__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"Converter\": function() { return /* reexport safe */ _Converter__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   \"Image\": function() { return /* reexport safe */ _Image__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   \"Input\": function() { return /* reexport safe */ _Input__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; },\n/* harmony export */   \"Layout\": function() { return /* reexport safe */ _Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   \"Recharts\": function() { return /* reexport safe */ _Recharts__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ \"./components/Button.tsx\");\n/* harmony import */ var _Recharts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Recharts */ \"./components/Recharts.tsx\");\n/* harmony import */ var _Converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Converter */ \"./components/Converter.tsx\");\n/* harmony import */ var _Image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Image */ \"./components/Image.tsx\");\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Layout */ \"./components/Layout.tsx\");\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Input */ \"./components/Input.tsx\");\n\n\n\n\n\n\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFDSTtBQUNFO0FBQ1I7QUFDRTtBQUNGO0FBRWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvaW5kZXgudHN4P2M3ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1dHRvbiBmcm9tIFwiLi9CdXR0b25cIjtcbmltcG9ydCBSZWNoYXJ0cyBmcm9tIFwiLi9SZWNoYXJ0c1wiO1xuaW1wb3J0IENvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXJcIjtcbmltcG9ydCBJbWFnZSBmcm9tIFwiLi9JbWFnZVwiO1xuaW1wb3J0IExheW91dCBmcm9tIFwiLi9MYXlvdXRcIjtcbmltcG9ydCBJbnB1dCBmcm9tIFwiLi9JbnB1dFwiO1xuXG5leHBvcnQgeyBCdXR0b24sIFJlY2hhcnRzLCBDb252ZXJ0ZXIsIEltYWdlLCBJbnB1dCwgTGF5b3V0IH07XG4iXSwibmFtZXMiOlsiQnV0dG9uIiwiUmVjaGFydHMiLCJDb252ZXJ0ZXIiLCJJbWFnZSIsIkxheW91dCIsIklucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/index.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\n(function(){var e={162:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(162);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MTYyOmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDE2Mik7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n");

/***/ }),

/***/ "./node_modules/react-chartjs-2/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-chartjs-2/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bar\": function() { return /* binding */ Bar; },\n/* harmony export */   \"Bubble\": function() { return /* binding */ Bubble; },\n/* harmony export */   \"Chart\": function() { return /* binding */ Chart; },\n/* harmony export */   \"Doughnut\": function() { return /* binding */ Doughnut; },\n/* harmony export */   \"Line\": function() { return /* binding */ Line; },\n/* harmony export */   \"Pie\": function() { return /* binding */ Pie; },\n/* harmony export */   \"PolarArea\": function() { return /* binding */ PolarArea; },\n/* harmony export */   \"Radar\": function() { return /* binding */ Radar; },\n/* harmony export */   \"Scatter\": function() { return /* binding */ Scatter; },\n/* harmony export */   \"getDatasetAtEvent\": function() { return /* binding */ getDatasetAtEvent; },\n/* harmony export */   \"getElementAtEvent\": function() { return /* binding */ getElementAtEvent; },\n/* harmony export */   \"getElementsAtEvent\": function() { return /* binding */ getElementsAtEvent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chart.js */ \"./node_modules/chart.js/dist/chart.esm.js\");\n\n\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    chart.options = {\n        ...nextOptions\n    };\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(param, ref) {\n    let { height =150 , width =300 , redraw =false , datasetIdKey , type , data , options , plugins =[] , fallbackContent , ...props } = param;\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new chart_js__WEBPACK_IMPORTED_MODULE_1__.Chart(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options,\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update();\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        renderChart();\n        return ()=>destroyChart()\n        ;\n    }, []);\n    return(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"canvas\", Object.assign({\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width\n    }, props), fallbackContent));\n}\nconst Chart = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    chart_js__WEBPACK_IMPORTED_MODULE_1__.Chart.register(registerables);\n    return(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Chart, Object.assign({}, props, {\n            ref: ref,\n            type: type\n        }))\n    ));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', chart_js__WEBPACK_IMPORTED_MODULE_1__.LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', chart_js__WEBPACK_IMPORTED_MODULE_1__.BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', chart_js__WEBPACK_IMPORTED_MODULE_1__.RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', chart_js__WEBPACK_IMPORTED_MODULE_1__.DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', chart_js__WEBPACK_IMPORTED_MODULE_1__.PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', chart_js__WEBPACK_IMPORTED_MODULE_1__.BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', chart_js__WEBPACK_IMPORTED_MODULE_1__.PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', chart_js__WEBPACK_IMPORTED_MODULE_1__.ScatterController);\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-chartjs-2/dist/index.js\n");

/***/ }),

/***/ "./node_modules/react-iconly/dist/index.modern.js":
/*!********************************************************!*\
  !*** ./node_modules/react-iconly/dist/index.modern.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Activity\": function() { return /* binding */ Kt; },\n/* harmony export */   \"AddUser\": function() { return /* binding */ un; },\n/* harmony export */   \"ArrowDown\": function() { return /* binding */ Oe; },\n/* harmony export */   \"ArrowDownSquare\": function() { return /* binding */ je; },\n/* harmony export */   \"ArrowLeft\": function() { return /* binding */ De; },\n/* harmony export */   \"ArrowLeftSquare\": function() { return /* binding */ Se; },\n/* harmony export */   \"ArrowRight\": function() { return /* binding */ Ne; },\n/* harmony export */   \"ArrowRightSquare\": function() { return /* binding */ ve; },\n/* harmony export */   \"ArrowUp\": function() { return /* binding */ Pe; },\n/* harmony export */   \"ArrowUpSquare\": function() { return /* binding */ be; },\n/* harmony export */   \"Bag\": function() { return /* binding */ cr; },\n/* harmony export */   \"Bag2\": function() { return /* binding */ pr; },\n/* harmony export */   \"Bookmark\": function() { return /* binding */ ht; },\n/* harmony export */   \"Buy\": function() { return /* binding */ Zr; },\n/* harmony export */   \"Calendar\": function() { return /* binding */ tr; },\n/* harmony export */   \"Call\": function() { return /* binding */ Qn; },\n/* harmony export */   \"CallMissed\": function() { return /* binding */ re; },\n/* harmony export */   \"CallSilent\": function() { return /* binding */ ee; },\n/* harmony export */   \"Calling\": function() { return /* binding */ Xn; },\n/* harmony export */   \"Camera\": function() { return /* binding */ on; },\n/* harmony export */   \"CaretDown\": function() { return /* binding */ Re; },\n/* harmony export */   \"CaretLeft\": function() { return /* binding */ Be; },\n/* harmony export */   \"CaretRight\": function() { return /* binding */ qe; },\n/* harmony export */   \"CaretUp\": function() { return /* binding */ Fe; },\n/* harmony export */   \"Category\": function() { return /* binding */ Lt; },\n/* harmony export */   \"Chart\": function() { return /* binding */ lr; },\n/* harmony export */   \"Chat\": function() { return /* binding */ Zt; },\n/* harmony export */   \"ChevronDown\": function() { return /* binding */ Me; },\n/* harmony export */   \"ChevronDownCircle\": function() { return /* binding */ ue; },\n/* harmony export */   \"ChevronLeft\": function() { return /* binding */ Ve; },\n/* harmony export */   \"ChevronLeftCircle\": function() { return /* binding */ me; },\n/* harmony export */   \"ChevronRight\": function() { return /* binding */ Ae; },\n/* harmony export */   \"ChevronRightCircle\": function() { return /* binding */ ke; },\n/* harmony export */   \"ChevronUp\": function() { return /* binding */ ge; },\n/* harmony export */   \"ChevronUpCircle\": function() { return /* binding */ fe; },\n/* harmony export */   \"CloseSquare\": function() { return /* binding */ Tr; },\n/* harmony export */   \"Danger\": function() { return /* binding */ wr; },\n/* harmony export */   \"Delete\": function() { return /* binding */ vn; },\n/* harmony export */   \"Discount\": function() { return /* binding */ Wr; },\n/* harmony export */   \"Discovery\": function() { return /* binding */ xr; },\n/* harmony export */   \"Document\": function() { return /* binding */ $r; },\n/* harmony export */   \"Download\": function() { return /* binding */ An; },\n/* harmony export */   \"Edit\": function() { return /* binding */ bn; },\n/* harmony export */   \"EditSquare\": function() { return /* binding */ Sn; },\n/* harmony export */   \"Filter\": function() { return /* binding */ Rn; },\n/* harmony export */   \"Filter2\": function() { return /* binding */ Fn; },\n/* harmony export */   \"Folder\": function() { return /* binding */ dt; },\n/* harmony export */   \"Game\": function() { return /* binding */ dr; },\n/* harmony export */   \"Graph\": function() { return /* binding */ pt; },\n/* harmony export */   \"Heart\": function() { return /* binding */ Ct; },\n/* harmony export */   \"Heart2\": function() { return /* binding */ Ht; },\n/* harmony export */   \"Hide\": function() { return /* binding */ qn; },\n/* harmony export */   \"Home\": function() { return /* binding */ yt; },\n/* harmony export */   \"Iconly\": function() { return /* binding */ Je; },\n/* harmony export */   \"IconlyProvider\": function() { return /* binding */ i; },\n/* harmony export */   \"Image\": function() { return /* binding */ Bn; },\n/* harmony export */   \"Image2\": function() { return /* binding */ Jn; },\n/* harmony export */   \"InfoCircle\": function() { return /* binding */ Cr; },\n/* harmony export */   \"InfoSquare\": function() { return /* binding */ Hr; },\n/* harmony export */   \"Location\": function() { return /* binding */ Er; },\n/* harmony export */   \"Lock\": function() { return /* binding */ ae; },\n/* harmony export */   \"Login\": function() { return /* binding */ mn; },\n/* harmony export */   \"Logout\": function() { return /* binding */ Mn; },\n/* harmony export */   \"Message\": function() { return /* binding */ nr; },\n/* harmony export */   \"MoreCircle\": function() { return /* binding */ Lr; },\n/* harmony export */   \"MoreSquare\": function() { return /* binding */ yr; },\n/* harmony export */   \"Notification\": function() { return /* binding */ Wt; },\n/* harmony export */   \"Paper\": function() { return /* binding */ wt; },\n/* harmony export */   \"PaperDownload\": function() { return /* binding */ Et; },\n/* harmony export */   \"PaperFail\": function() { return /* binding */ xt; },\n/* harmony export */   \"PaperNegative\": function() { return /* binding */ It; },\n/* harmony export */   \"PaperPlus\": function() { return /* binding */ Tt; },\n/* harmony export */   \"PaperUpload\": function() { return /* binding */ $t; },\n/* harmony export */   \"Password\": function() { return /* binding */ _t; },\n/* harmony export */   \"People\": function() { return /* binding */ fn; },\n/* harmony export */   \"Play\": function() { return /* binding */ On; },\n/* harmony export */   \"Plus\": function() { return /* binding */ sr; },\n/* harmony export */   \"Scan\": function() { return /* binding */ Yt; },\n/* harmony export */   \"Search\": function() { return /* binding */ lt; },\n/* harmony export */   \"Send\": function() { return /* binding */ Ut; },\n/* harmony export */   \"Setting\": function() { return /* binding */ Ur; },\n/* harmony export */   \"ShieldDone\": function() { return /* binding */ Nn; },\n/* harmony export */   \"ShieldFail\": function() { return /* binding */ Pn; },\n/* harmony export */   \"Show\": function() { return /* binding */ Dn; },\n/* harmony export */   \"Star\": function() { return /* binding */ tn; },\n/* harmony export */   \"Swap\": function() { return /* binding */ zt; },\n/* harmony export */   \"TickSquare\": function() { return /* binding */ Ir; },\n/* harmony export */   \"Ticket\": function() { return /* binding */ nn; },\n/* harmony export */   \"TicketStar\": function() { return /* binding */ hr; },\n/* harmony export */   \"TimeCircle\": function() { return /* binding */ zr; },\n/* harmony export */   \"TimeSquare\": function() { return /* binding */ _r; },\n/* harmony export */   \"TwoUsers\": function() { return /* binding */ kn; },\n/* harmony export */   \"Unlock\": function() { return /* binding */ ie; },\n/* harmony export */   \"Upload\": function() { return /* binding */ gn; },\n/* harmony export */   \"User\": function() { return /* binding */ sn; },\n/* harmony export */   \"Video\": function() { return /* binding */ or; },\n/* harmony export */   \"Voice\": function() { return /* binding */ Vn; },\n/* harmony export */   \"Voice2\": function() { return /* binding */ jn; },\n/* harmony export */   \"VolumeDown\": function() { return /* binding */ Yr; },\n/* harmony export */   \"VolumeOff\": function() { return /* binding */ Kr; },\n/* harmony export */   \"VolumeUp\": function() { return /* binding */ Gr; },\n/* harmony export */   \"Wallet\": function() { return /* binding */ ct; },\n/* harmony export */   \"Work\": function() { return /* binding */ Gt; },\n/* harmony export */   \"useIconlyTheme\": function() { return /* binding */ l; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nvar s=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();s.displayName=\"IconlyIconlyContext\";var i=function(r){return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(s.Provider,{value:{primaryColor:r.primaryColor||\"currentColor\",secondaryColor:r.secondaryColor||null,set:r.set||\"light\",size:r.size||\"medium\",stroke:r.stroke||\"regular\"}},r.children)},l=function(){var t=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(s);if(void 0===t)throw new Error(\"useIconlyTheme must be used within a IconlyProvider\");return t};function u(t,r){return t(r={exports:{}},r.exports),r.exports\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */}var d=\"function\"==typeof Symbol&&Symbol.for,k=d?Symbol.for(\"react.element\"):60103,c=d?Symbol.for(\"react.portal\"):60106,f=d?Symbol.for(\"react.fragment\"):60107,p=d?Symbol.for(\"react.strict_mode\"):60108,m=d?Symbol.for(\"react.profiler\"):60114,h=d?Symbol.for(\"react.provider\"):60109,M=d?Symbol.for(\"react.context\"):60110,L=d?Symbol.for(\"react.async_mode\"):60111,A=d?Symbol.for(\"react.concurrent_mode\"):60111,y=d?Symbol.for(\"react.forward_ref\"):60112,g=d?Symbol.for(\"react.suspense\"):60113,W=d?Symbol.for(\"react.suspense_list\"):60120,V=d?Symbol.for(\"react.memo\"):60115,Z=d?Symbol.for(\"react.lazy\"):60116,j=d?Symbol.for(\"react.block\"):60121,C=d?Symbol.for(\"react.fundamental\"):60117,v=d?Symbol.for(\"react.responder\"):60118,H=d?Symbol.for(\"react.scope\"):60119;function b(t){if(\"object\"==typeof t&&null!==t){var r=t.$$typeof;switch(r){case k:switch(t=t.type){case L:case A:case f:case m:case p:case g:return t;default:switch(t=t&&t.$$typeof){case M:case y:case Z:case V:case h:return t;default:return r}}case c:return r}}}function w(t){return b(t)===A}var S={AsyncMode:L,ConcurrentMode:A,ContextConsumer:M,ContextProvider:h,Element:k,ForwardRef:y,Fragment:f,Lazy:Z,Memo:V,Portal:c,Profiler:m,StrictMode:p,Suspense:g,isAsyncMode:function(t){return w(t)||b(t)===L},isConcurrentMode:w,isContextConsumer:function(t){return b(t)===M},isContextProvider:function(t){return b(t)===h},isElement:function(t){return\"object\"==typeof t&&null!==t&&t.$$typeof===k},isForwardRef:function(t){return b(t)===y},isFragment:function(t){return b(t)===f},isLazy:function(t){return b(t)===Z},isMemo:function(t){return b(t)===V},isPortal:function(t){return b(t)===c},isProfiler:function(t){return b(t)===m},isStrictMode:function(t){return b(t)===p},isSuspense:function(t){return b(t)===g},isValidElementType:function(t){return\"string\"==typeof t||\"function\"==typeof t||t===f||t===A||t===m||t===p||t===g||t===W||\"object\"==typeof t&&null!==t&&(t.$$typeof===Z||t.$$typeof===V||t.$$typeof===h||t.$$typeof===M||t.$$typeof===y||t.$$typeof===C||t.$$typeof===v||t.$$typeof===H||t.$$typeof===j)},typeOf:b},T=u(function(t,r){ true&&function(){var t=\"function\"==typeof Symbol&&Symbol.for,n=t?Symbol.for(\"react.element\"):60103,e=t?Symbol.for(\"react.portal\"):60106,o=t?Symbol.for(\"react.fragment\"):60107,a=t?Symbol.for(\"react.strict_mode\"):60108,s=t?Symbol.for(\"react.profiler\"):60114,i=t?Symbol.for(\"react.provider\"):60109,l=t?Symbol.for(\"react.context\"):60110,u=t?Symbol.for(\"react.async_mode\"):60111,d=t?Symbol.for(\"react.concurrent_mode\"):60111,k=t?Symbol.for(\"react.forward_ref\"):60112,c=t?Symbol.for(\"react.suspense\"):60113,f=t?Symbol.for(\"react.suspense_list\"):60120,p=t?Symbol.for(\"react.memo\"):60115,m=t?Symbol.for(\"react.lazy\"):60116,h=t?Symbol.for(\"react.block\"):60121,M=t?Symbol.for(\"react.fundamental\"):60117,L=t?Symbol.for(\"react.responder\"):60118,A=t?Symbol.for(\"react.scope\"):60119;function y(t){if(\"object\"==typeof t&&null!==t){var r=t.$$typeof;switch(r){case n:var f=t.type;switch(f){case u:case d:case o:case s:case a:case c:return f;default:var h=f&&f.$$typeof;switch(h){case l:case k:case m:case p:case i:return h;default:return r}}case e:return r}}}var g=d,W=l,V=i,Z=n,j=k,C=o,v=m,H=p,b=e,w=s,S=a,T=c,O=!1;function I(t){return y(t)===d}r.AsyncMode=u,r.ConcurrentMode=g,r.ContextConsumer=W,r.ContextProvider=V,r.Element=Z,r.ForwardRef=j,r.Fragment=C,r.Lazy=v,r.Memo=H,r.Portal=b,r.Profiler=w,r.StrictMode=S,r.Suspense=T,r.isAsyncMode=function(t){return O||(O=!0,console.warn(\"The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.\")),I(t)||y(t)===u},r.isConcurrentMode=I,r.isContextConsumer=function(t){return y(t)===l},r.isContextProvider=function(t){return y(t)===i},r.isElement=function(t){return\"object\"==typeof t&&null!==t&&t.$$typeof===n},r.isForwardRef=function(t){return y(t)===k},r.isFragment=function(t){return y(t)===o},r.isLazy=function(t){return y(t)===m},r.isMemo=function(t){return y(t)===p},r.isPortal=function(t){return y(t)===e},r.isProfiler=function(t){return y(t)===s},r.isStrictMode=function(t){return y(t)===a},r.isSuspense=function(t){return y(t)===c},r.isValidElementType=function(t){return\"string\"==typeof t||\"function\"==typeof t||t===o||t===d||t===s||t===a||t===c||t===f||\"object\"==typeof t&&null!==t&&(t.$$typeof===m||t.$$typeof===p||t.$$typeof===i||t.$$typeof===l||t.$$typeof===k||t.$$typeof===M||t.$$typeof===L||t.$$typeof===A||t.$$typeof===h)},r.typeOf=y}()}),O=u(function(t){t.exports= false?0:T}),I=Object.getOwnPropertySymbols,N=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;function P(t){if(null==t)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(t)}var E=function(){try{if(!Object.assign)return!1;var t=new String(\"abc\");if(t[5]=\"de\",\"5\"===Object.getOwnPropertyNames(t)[0])return!1;for(var r={},n=0;n<10;n++)r[\"_\"+String.fromCharCode(n)]=n;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map(function(t){return r[t]}).join(\"\"))return!1;var e={};return\"abcdefghijklmnopqrst\".split(\"\").forEach(function(t){e[t]=t}),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},e)).join(\"\")}catch(t){return!1}}()?Object.assign:function(t,r){for(var n,e,o=P(t),a=1;a<arguments.length;a++){for(var s in n=Object(arguments[a]))N.call(n,s)&&(o[s]=n[s]);if(I){e=I(n);for(var i=0;i<e.length;i++)x.call(n,e[i])&&(o[e[i]]=n[e[i]])}}return o},D=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\",$=function(){};if(true){var q=D,U={},R=Function.call.bind(Object.prototype.hasOwnProperty);$=function(t){var r=\"Warning: \"+t;\"undefined\"!=typeof console&&console.error(r);try{throw new Error(r)}catch(t){}}}function _(t,r,n,e,o){if(true)for(var a in t)if(R(t,a)){var s;try{if(\"function\"!=typeof t[a]){var i=Error((e||\"React class\")+\": \"+n+\" type `\"+a+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof t[a]+\"`.\");throw i.name=\"Invariant Violation\",i}s=t[a](r,a,e,n,null,q)}catch(t){s=t}if(!s||s instanceof Error||$((e||\"React class\")+\": type specification of \"+n+\" `\"+a+\"` is invalid; the type checker function must return `null` or an `Error` but returned a \"+typeof s+\". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\"),s instanceof Error&&!(s.message in U)){U[s.message]=!0;var l=o?o():\"\";$(\"Failed \"+n+\" type: \"+s.message+(null!=l?l:\"\"))}}}_.resetWarningCache=function(){ true&&(U={})};var F=_,z=Function.call.bind(Object.prototype.hasOwnProperty),B=function(){};function G(){return null}function J(){}function Y(){} true&&(B=function(t){var r=\"Warning: \"+t;\"undefined\"!=typeof console&&console.error(r);try{throw new Error(r)}catch(t){}}),Y.resetWarningCache=J;var Q=u(function(t){t.exports= true?function(t,r){var n=\"function\"==typeof Symbol&&Symbol.iterator,e={array:i(\"array\"),bool:i(\"boolean\"),func:i(\"function\"),number:i(\"number\"),object:i(\"object\"),string:i(\"string\"),symbol:i(\"symbol\"),any:s(G),arrayOf:function(t){return s(function(r,n,e,o,s){if(\"function\"!=typeof t)return new a(\"Property `\"+s+\"` of component `\"+e+\"` has invalid PropType notation inside arrayOf.\");var i=r[n];if(!Array.isArray(i))return new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+u(i)+\"` supplied to `\"+e+\"`, expected an array.\");for(var l=0;l<i.length;l++){var d=t(i,l,e,o,s+\"[\"+l+\"]\",D);if(d instanceof Error)return d}return null})},element:s(function(r,n,e,o,s){var i=r[n];return t(i)?null:new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+u(i)+\"` supplied to `\"+e+\"`, expected a single ReactElement.\")}),elementType:s(function(t,r,n,e,o){var s=t[r];return O.isValidElementType(s)?null:new a(\"Invalid \"+e+\" `\"+o+\"` of type `\"+u(s)+\"` supplied to `\"+n+\"`, expected a single ReactElement type.\")}),instanceOf:function(t){return s(function(r,n,e,o,s){var i;return r[n]instanceof t?null:new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+((i=r[n]).constructor&&i.constructor.name?i.constructor.name:\"<<anonymous>>\")+\"` supplied to `\"+e+\"`, expected instance of `\"+(t.name||\"<<anonymous>>\")+\"`.\")})},node:s(function(t,r,n,e,o){return l(t[r])?null:new a(\"Invalid \"+e+\" `\"+o+\"` supplied to `\"+n+\"`, expected a ReactNode.\")}),objectOf:function(t){return s(function(r,n,e,o,s){if(\"function\"!=typeof t)return new a(\"Property `\"+s+\"` of component `\"+e+\"` has invalid PropType notation inside objectOf.\");var i=r[n],l=u(i);if(\"object\"!==l)return new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+l+\"` supplied to `\"+e+\"`, expected an object.\");for(var d in i)if(z(i,d)){var k=t(i,d,e,o,s+\".\"+d,D);if(k instanceof Error)return k}return null})},oneOf:function(t){if(!Array.isArray(t))return true&&B(arguments.length>1?\"Invalid arguments supplied to oneOf, expected an array, got \"+arguments.length+\" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).\":\"Invalid argument supplied to oneOf, expected an array.\"),G;function r(r,n,e,s,i){for(var l=r[n],u=0;u<t.length;u++)if(o(l,t[u]))return null;var k=JSON.stringify(t,function(t,r){return\"symbol\"===d(r)?String(r):r});return new a(\"Invalid \"+s+\" `\"+i+\"` of value `\"+String(l)+\"` supplied to `\"+e+\"`, expected one of \"+k+\".\")}return s(r)},oneOfType:function(t){if(!Array.isArray(t))return true&&B(\"Invalid argument supplied to oneOfType, expected an instance of array.\"),G;for(var r=0;r<t.length;r++){var n=t[r];if(\"function\"!=typeof n)return B(\"Invalid argument supplied to oneOfType. Expected an array of check functions, but received \"+k(n)+\" at index \"+r+\".\"),G}return s(function(r,n,e,o,s){for(var i=0;i<t.length;i++)if(null==(0,t[i])(r,n,e,o,s,D))return null;return new a(\"Invalid \"+o+\" `\"+s+\"` supplied to `\"+e+\"`.\")})},shape:function(t){return s(function(r,n,e,o,s){var i=r[n],l=u(i);if(\"object\"!==l)return new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+l+\"` supplied to `\"+e+\"`, expected `object`.\");for(var d in t){var k=t[d];if(k){var c=k(i,d,e,o,s+\".\"+d,D);if(c)return c}}return null})},exact:function(t){return s(function(r,n,e,o,s){var i=r[n],l=u(i);if(\"object\"!==l)return new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+l+\"` supplied to `\"+e+\"`, expected `object`.\");var d=E({},r[n],t);for(var k in d){var c=t[k];if(!c)return new a(\"Invalid \"+o+\" `\"+s+\"` key `\"+k+\"` supplied to `\"+e+\"`.\\nBad object: \"+JSON.stringify(r[n],null,\"  \")+\"\\nValid keys: \"+JSON.stringify(Object.keys(t),null,\"  \"));var f=c(i,k,e,o,s+\".\"+k,D);if(f)return f}return null})}};function o(t,r){return t===r?0!==t||1/t==1/r:t!=t&&r!=r}function a(t){this.message=t,this.stack=\"\"}function s(t){function r(r,n,e,o,s,i,l){if(o=o||\"<<anonymous>>\",i=i||e,l!==D){var u=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\");throw u.name=\"Invariant Violation\",u}return null==n[e]?r?new a(null===n[e]?\"The \"+s+\" `\"+i+\"` is marked as required in `\"+o+\"`, but its value is `null`.\":\"The \"+s+\" `\"+i+\"` is marked as required in `\"+o+\"`, but its value is `undefined`.\"):null:t(n,e,o,s,i)}process;var n=r.bind(null,!1);return n.isRequired=r.bind(null,!0),n}function i(t){return s(function(r,n,e,o,s,i){var l=r[n];return u(l)!==t?new a(\"Invalid \"+o+\" `\"+s+\"` of type `\"+d(l)+\"` supplied to `\"+e+\"`, expected `\"+t+\"`.\"):null})}function l(r){switch(typeof r){case\"number\":case\"string\":case\"undefined\":return!0;case\"boolean\":return!r;case\"object\":if(Array.isArray(r))return r.every(l);if(null===r||t(r))return!0;var e=function(t){var r=t&&(n&&t[n]||t[\"@@iterator\"]);if(\"function\"==typeof r)return r}(r);if(!e)return!1;var o,a=e.call(r);if(e!==r.entries){for(;!(o=a.next()).done;)if(!l(o.value))return!1}else for(;!(o=a.next()).done;){var s=o.value;if(s&&!l(s[1]))return!1}return!0;default:return!1}}function u(t){var r=typeof t;return Array.isArray(t)?\"array\":t instanceof RegExp?\"object\":function(t,r){return\"symbol\"===t||!!r&&(\"Symbol\"===r[\"@@toStringTag\"]||\"function\"==typeof Symbol&&r instanceof Symbol)}(r,t)?\"symbol\":r}function d(t){if(null==t)return\"\"+t;var r=u(t);if(\"object\"===r){if(t instanceof Date)return\"date\";if(t instanceof RegExp)return\"regexp\"}return r}function k(t){var r=d(t);switch(r){case\"array\":case\"object\":return\"an \"+r;case\"boolean\":case\"date\":case\"regexp\":return\"a \"+r;default:return r}}return a.prototype=Error.prototype,e.checkPropTypes=F,e.resetWarningCache=F.resetWarningCache,e.PropTypes=e,e}(O.isElement):0});function K(){return(K=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}return t}).apply(this,arguments)}function X(t,r){if(null==t)return{};var n,e,o={},a=Object.keys(t);for(e=0;e<a.length;e++)r.indexOf(n=a[e])>=0||(o[n]=t[n]);return o}var tt={small:\"16px\",medium:\"24px\",large:\"32px\",xlarge:\"48px\"},rt={light:\"1px\",regular:\"1.5px\",bold:\"2px\"},nt=function(t){return Number.isInteger(t)?t+\"px\":t&&tt[t]?tt[t]:null},et=function(t){return t&&rt[t]?rt[t]:null},ot=function(t,r){return r?t===r?\"0.4\":\"1\":\"0.4\"},at=function(t,r){return r&&r[t]?r[t]:null};function st(r){var n=function(n){var e,o;function a(){return n.apply(this,arguments)||this}return o=n,(e=a).prototype=Object.create(o.prototype),e.prototype.constructor=e,e.__proto__=o,a.prototype.render=function(){var n=this.props,e=n.size,o=n.label,a=n.primaryColor,s=n.secondaryColor,i=n.filled,l=n.set,u=n.style,d=n.stroke,k=X(n,[\"size\",\"label\",\"primaryColor\",\"secondaryColor\",\"filled\",\"set\",\"style\",\"stroke\"]),c=this.context,f=nt(e)||nt(at(\"size\",c))||\"24px\",p=a||at(\"primaryColor\",c)||\"currentColor\",m=s||at(\"secondaryColor\",c)||p||\"currentColor\";return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\",K({xmlns:\"http://www.w3.org/2000/svg\",width:f,height:f,viewBox:\"0 0 24 24\",role:o?\"img\":\"presentation\",\"aria-label\":o||void 0,style:u},k),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(r,{color:p,opacity:ot(a,s),secondaryColor:m,set:i?\"bold\":l||at(\"set\",c)||\"light\",strokeWidth:d?et(d):et(at(\"stroke\",c))||\"1.5px\"}))},a}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));return n.contextType=s,n.propTypes={label:Q.string,filled:Q.bool,primaryColor:Q.string,secondaryColor:Q.string,size:Q.oneOfType([Q.number,Q.oneOf([\"small\",\"medium\",\"large\",\"xlarge\"])]),set:Q.oneOf([\"bold\",\"bulk\",\"light\",\"broken\",\"two-tone\",\"curved\"]),stroke:Q.oneOf([\"light\",\"regular\",\"bold\"]),style:Q.oneOfType([Q.object,Q.array])},(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(n)}var it=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.741,19.608l-2.12-2.43a1.083,1.083,0,0,1,0-1.524.986.986,0,0,1,1.393,0l2.554,2.062h.045a1.348,1.348,0,0,1,0,1.892,1.315,1.315,0,0,1-1.872,0ZM0,8.67A8.624,8.624,0,0,1,8.578,0a8.531,8.531,0,0,1,6.065,2.54,8.716,8.716,0,0,1,2.512,6.13A8.624,8.624,0,0,1,8.578,17.34,8.624,8.624,0,0,1,0,8.67Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ellipse\",{cx:\"8.599\",cy:\"8.653\",rx:\"8.599\",ry:\"8.653\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.278,4.577a1.321,1.321,0,0,1-.889-.385L.352,1.812A1.088,1.088,0,0,1,.272.29h0A.974.974,0,0,1,1.66.29L4.221,2.339a1.348,1.348,0,0,1,.291,1.431,1.335,1.335,0,0,1-1.18.851Z\",transform:\"translate(15.397 15.379)\",fill:e,opacity:n}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:10,strokeWidth:a},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:8.989,cy:8.989,r:8.989,transform:\"translate(.778 .778)\"}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.018 16.485L19.542 20\"}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.756,18.607l-3.437-3.361h0l-.081-.123a.809.809,0,0,0-1.137,0h0a8.113,8.113,0,0,1-10.519.34A7.679,7.679,0,0,1,2.876,5.31,8.075,8.075,0,0,1,12.953,2.342a7.741,7.741,0,0,1,4.314,9.385.779.779,0,0,0,.182.772.822.822,0,0,0,.774.232.8.8,0,0,0,.593-.54h0a9.334,9.334,0,0,0-5-11.25A9.754,9.754,0,0,0,1.689,4.085,9.256,9.256,0,0,0,3.049,16.28a9.789,9.789,0,0,0,12.535.515l3.044,2.976a.819.819,0,0,0,1.137,0,.784.784,0,0,0,0-1.12h0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"8.989\",cy:\"8.989\",r:\"8.989\",transform:\"translate(0.778 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.524,3.515\",transform:\"translate(16.018 16.485)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.561,0A8.561,8.561,0,1,1,0,8.561,8.561,8.561,0,0,1,8.561,0Z\",transform:\"translate(0.714 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.411,0A1.411,1.411,0,1,1,0,1.41,1.411,1.411,0,0,1,1.411,0Z\",transform:\"translate(16.488 16.488)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};it.displayName=\"IconlySearch\",it.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var lt=st(it),ut=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.75,20H6.24C2.391,20,0,17.606,0,13.75V6.241C0,2.1,1.84,0,5.47,0H7.081A2.956,2.956,0,0,1,9.42,1.15L10.3,2.32a1.472,1.472,0,0,0,1.15.56h3.07a5.446,5.446,0,0,1,4,1.361A6.36,6.36,0,0,1,20,8.89v4.87a6.278,6.278,0,0,1-1.674,4.568A6.3,6.3,0,0,1,13.75,20ZM5.37,11.79a.743.743,0,0,0-.751.751.751.751,0,0,0,.751.75h9.26a.746.746,0,0,0,.74-.75.737.737,0,0,0-.74-.751Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.884,3.115H11.941a2.429,2.429,0,0,1-1.894-.887L9.078.888A2.367,2.367,0,0,0,7.193,0H5.113C1.378,0,0,2.192,0,5.919V9.947c0,.443,20,.442,20,0V8.776C20.015,5.049,18.672,3.115,14.884,3.115Z\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.367,16.9h0c-.1,0-.207,0-.309-.008H5.931c-.1.005-.2.008-.307.008a6.017,6.017,0,0,1-4.068-1.578,4.487,4.487,0,0,1-.667-.887,5.8,5.8,0,0,1-.782-2.183A8.148,8.148,0,0,1,0,10.93V5.677A12.144,12.144,0,0,1,.071,4.363c.01-.076.025-.151.04-.224a1.894,1.894,0,0,0,.049-.37A5.619,5.619,0,0,1,.649,2.252C1.353.747,2.808.015,5.095.015h9.78c.133-.01.269-.016.4-.016A5.241,5.241,0,0,1,18.5,1.116a2.78,2.78,0,0,1,.329.329,3.935,3.935,0,0,1,.729,1.269A8.51,8.51,0,0,1,20,5.677V10.93a9.441,9.441,0,0,1-.1,1.322,5.961,5.961,0,0,1-.8,2.183,4.445,4.445,0,0,1-.676.887A5.983,5.983,0,0,1,14.367,16.9Zm-9.4-8.11a.825.825,0,1,0,0,1.651H15.09a.826.826,0,0,0,.825-.8.742.742,0,0,0-.177-.533.788.788,0,0,0-.623-.319Z\",transform:\"translate(0 3.099)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.5 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.169,13.482c0,3.578-2.109,5.687-5.687,5.687H5.7c-3.587,0-5.7-2.109-5.7-5.687v-7.8C0,2.109,1.314,0,4.893,0h2A2.282,2.282,0,0,1,8.717.913L9.63,2.127a2.291,2.291,0,0,0,1.826.913h2.83c3.587,0,4.911,1.826,4.911,5.477Z\",transform:\"translate(0.776 0.776)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.456H9.593\",transform:\"translate(5.559 12.533)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.235,10.677A.765.765,0,0,0,20,9.912V8.892c0-4.046-1.8-6.016-5.495-6.016H11.78a1.424,1.424,0,0,1-1.134-.554l-.879-1.17A2.989,2.989,0,0,0,7.4,0H5.486C1.846,0,0,2.1,0,6.253v7.5C0,17.608,2.391,20,6.251,20h7.49c3.851,0,6.251-2.392,6.251-6.245a.774.774,0,0,0-1.538,0c0,3.034-1.67,4.714-4.712,4.714h-7.5C3.2,18.47,1.53,16.8,1.53,13.755v-.73H13.837a.765.765,0,0,0,0-1.53H1.53V6.218C1.53,2.911,2.708,1.5,5.477,1.5H7.411a1.468,1.468,0,0,1,1.134.563l.879,1.161A2.962,2.962,0,0,0,11.78,4.4H14.5c2.857,0,3.965,1.275,3.965,4.494v1.02a.765.765,0,0,0,.774.765Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.169,13.482c0,3.578-2.109,5.687-5.687,5.687H5.7c-3.587,0-5.7-2.109-5.7-5.687v-7.8C0,2.109,1.314,0,4.893,0h2A2.282,2.282,0,0,1,8.717.913L9.63,2.127a2.291,2.291,0,0,0,1.826.913h2.83c3.587,0,4.911,1.826,4.911,5.477Z\",transform:\"translate(0.776 0.776)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.456H9.593\",transform:\"translate(5.559 12.533)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H9.593\",transform:\"translate(4.806 11.598)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.3C0,2.856,1.25.759,3.622.273a8.088,8.088,0,0,1,5.67.489c1.5.808,1.069,2,2.608,2.875s4.017-.44,5.635,1.306c1.694,1.828,1.685,4.633,1.685,6.422,0,6.8-3.807,7.335-9.61,7.335S0,18.229,0,11.364Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ut.displayName=\"IconlyFolder\",ut.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var dt=st(ut),kt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.515,18H5.485a5.64,5.64,0,0,1-4.036-1.411A5.323,5.323,0,0,1,0,12.661V5.339A5.323,5.323,0,0,1,1.449,1.411,5.64,5.64,0,0,1,5.485,0h9.031a5.618,5.618,0,0,1,4.036,1.417A5.392,5.392,0,0,1,20,5.382H15.769v.034a3.583,3.583,0,0,0-2.513,1.017,3.4,3.4,0,0,0-1.043,2.449,3.516,3.516,0,0,0,3.556,3.467H20v.311a5.323,5.323,0,0,1-1.449,3.928A5.64,5.64,0,0,1,14.515,18ZM4.738,3.892a.757.757,0,0,0-.764.736.766.766,0,0,0,.764.754h5.645a.745.745,0,1,0,0-1.49Zm14.515,6.967H15.819A2.1,2.1,0,0,1,13.76,9.265a1.977,1.977,0,0,1,.433-1.652,2.089,2.089,0,0,1,1.576-.74h3.484A.739.739,0,0,1,20,7.6v2.531A.75.75,0,0,1,19.253,10.858ZM15.91,8.042a.757.757,0,0,0-.53.212.732.732,0,0,0-.225.524.766.766,0,0,0,.765.754h.329a.745.745,0,1,0,0-1.49H15.91Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.517,18H5.484a5.633,5.633,0,0,1-4.034-1.413A5.332,5.332,0,0,1,0,12.654V5.338A5.32,5.32,0,0,1,1.449,1.409,5.641,5.641,0,0,1,5.484,0h9.03a5.639,5.639,0,0,1,4.034,1.409A5.321,5.321,0,0,1,20,5.338v.037H15.762a3.54,3.54,0,0,0-3.57,3.482,3.421,3.421,0,0,0,1.044,2.467,3.6,3.6,0,0,0,2.527,1.024H20v.306a5.333,5.333,0,0,1-1.449,3.933A5.632,5.632,0,0,1,14.517,18ZM4.739,3.875a.759.759,0,0,0-.761.744.731.731,0,0,0,.222.528.769.769,0,0,0,.54.221H10.39a.769.769,0,0,0,.54-.221.733.733,0,0,0,.222-.529.759.759,0,0,0-.767-.743Z\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.037,2.4a2.018,2.018,0,0,0,2,1.6h3.25A.726.726,0,0,0,6,3.266V.734A.728.728,0,0,0,5.283,0H1.956A1.985,1.985,0,0,0,0,2.01,2.031,2.031,0,0,0,.037,2.4\",transform:\"translate(14 6.9)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{id:\"Oval\",cx:\"1\",cy:\"1\",r:\"1\",transform:\"translate(15 7.9)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.74,5.383H2.692A2.691,2.691,0,1,1,2.692,0H6.74\",transform:\"translate(12.398 6.013)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.612.456H.3\",transform:\"translate(14.937 8.187)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.248,0h8.643a5.248,5.248,0,0,1,5.248,5.248v7.177a5.248,5.248,0,0,1-5.248,5.248H5.248A5.248,5.248,0,0,1,0,12.425V5.248A5.248,5.248,0,0,1,5.248,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.456H5.4\",transform:\"translate(4.536 4.082)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.548,18.318a.675.675,0,0,1,.667-.682,4.509,4.509,0,0,0,4.452-4.554V7.365H15.383a2,2,0,0,0,0,4.008h1.364a.682.682,0,0,1,0,1.364H15.383a3.369,3.369,0,0,1,0-6.736h3.284V5.919a4.509,4.509,0,0,0-4.452-4.555H5.785A4.455,4.455,0,0,0,1.567,4.528h8.788a.682.682,0,0,1,0,1.364H1.336c0,.009,0,.017,0,.027v7.162a4.508,4.508,0,0,0,4.452,4.554h4.241a.682.682,0,0,1,0,1.364H5.785A5.859,5.859,0,0,1,0,13.082V5.919A5.859,5.859,0,0,1,5.785,0h8.429A5.86,5.86,0,0,1,20,5.919v7.162A5.86,5.86,0,0,1,14.215,19,.675.675,0,0,1,13.548,18.318Zm1.98-8.329a.682.682,0,0,1,0-1.364h.3a.682.682,0,0,1,0,1.364Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.74,5.383H2.692A2.691,2.691,0,1,1,2.692,0H6.74\",transform:\"translate(12.398 6.013)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.612.456H.3\",transform:\"translate(14.937 8.187)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.248,0h8.643a5.248,5.248,0,0,1,5.248,5.248v7.177a5.248,5.248,0,0,1-5.248,5.248H5.248A5.248,5.248,0,0,1,0,12.425V5.248A5.248,5.248,0,0,1,5.248,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.456H5.4\",transform:\"translate(4.536 4.082)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.45,5.127H2.563A2.563,2.563,0,0,1,2.563,0H6.419\",transform:\"translate(12.722 6.549)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.625.476h-.3\",transform:\"translate(15.097 8.577)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H4.06\",transform:\"translate(5.606 4.668)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,8.539C0,2.134,2.325,0,9.3,0s9.3,2.134,9.3,8.539-2.325,8.539-9.3,8.539S0,14.943,0,8.539Z\",transform:\"translate(0.714 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};kt.displayName=\"IconlyWallet\",kt.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ct=st(kt),ft=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.088,15.514A8.2,8.2,0,0,1,.065,12.378,5.93,5.93,0,0,1,0,11.391,8.694,8.694,0,0,1,6.956,2.959a1.1,1.1,0,0,1,1.2.6,1.1,1.1,0,0,1,.127.257c.136,2.1.281,4.158.417,6.22a1.851,1.851,0,0,0,.1.63,1.023,1.023,0,0,0,1.005.631l6.656-.426.046.017a1.085,1.085,0,0,1,.756.322,1.048,1.048,0,0,1,.3.753A8.671,8.671,0,0,1,10.683,19.8a8.948,8.948,0,0,1-1.889.2A8.813,8.813,0,0,1,1.088,15.514Zm9.784-6.423a.88.88,0,0,1-.293-.658L10.062.889V.765A.793.793,0,0,1,10.327.21.823.823,0,0,1,10.913,0,9.422,9.422,0,0,1,20,7.89a.3.3,0,0,1,0,.08.786.786,0,0,1-.2.575.813.813,0,0,1-.555.269l-7.679.507q-.041,0-.082,0A.915.915,0,0,1,10.872,9.091Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.153.644a1.06,1.06,0,0,1,.1.329l.278,4.14h0l.138,2.081a2.14,2.14,0,0,0,.1.631,1.043,1.043,0,0,0,1.005.631l6.657-.435a1.1,1.1,0,0,1,.774.3,1.06,1.06,0,0,1,.319.609l.012.14a8.682,8.682,0,0,1-6.884,7.818,8.856,8.856,0,0,1-9.592-4.263,8.214,8.214,0,0,1-1-3.146A6.018,6.018,0,0,1,0,8.491,8.7,8.7,0,0,1,6.984.013,1.091,1.091,0,0,1,8.153.644Z\",transform:\"translate(0 2.911)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.849,0a9.444,9.444,0,0,1,9.13,7.811l-.007.033h0l-.02.047,0,.13a.8.8,0,0,1-.192.472.827.827,0,0,1-.462.271l-.11.015-7.681.5a.917.917,0,0,1-.7-.227.884.884,0,0,1-.288-.537L.007.845a.122.122,0,0,1,0-.08A.785.785,0,0,1,.265.21.815.815,0,0,1,.849,0Z\",transform:\"translate(10.021 0)\",fill:e,opacity:n}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.7,6.975A8.311,8.311,0,0,0,.741,0,.714.714,0,0,0,0,.687H0V.751L.449,7.461a.824.824,0,0,0,.87.769l6.728-.449A.714.714,0,0,0,8.7,7.012Z\",transform:\"translate(10.819 0.777)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.145.024A.915.915,0,0,1,7.189.545a.824.824,0,0,1,.082.3c.092,1.3.284,4.146.394,5.684a1.043,1.043,0,0,0,1.117.97h0l5.648-.348a.915.915,0,0,1,.97.915h0A7.7,7.7,0,0,1,.974,11.264a7.323,7.323,0,0,1-.915-2.8A4.723,4.723,0,0,1,0,7.548,7.707,7.707,0,0,1,6.136.024\",transform:\"translate(0.756 4.745)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.511,18.085a8.249,8.249,0,0,1-4.447-6.4A5.112,5.112,0,0,1,0,10.721,8.287,8.287,0,0,1,6.629,2.613a.8.8,0,1,1,.316,1.568,6.708,6.708,0,0,0-5.339,6.566,4.152,4.152,0,0,0,.044.74,6.732,6.732,0,0,0,13.149,1,.808.808,0,0,1,.982-.549.794.794,0,0,1,.495.362.779.779,0,0,1,.083.6A8.367,8.367,0,0,1,8.312,19,8.345,8.345,0,0,1,4.511,18.085ZM11.924,9.58a1.61,1.61,0,0,1-1.6-1.463L9.89,1.577A1.472,1.472,0,0,1,10.3.462,1.561,1.561,0,0,1,11.408,0h.033a8.92,8.92,0,0,1,8.547,7.438H20v.14a1.47,1.47,0,0,1-.367,1.072,1.488,1.488,0,0,1-1.026.495l-6.575.436Zm0-1.568,6.486-.427a7.3,7.3,0,0,0-2.4-4.21,7.391,7.391,0,0,0-4.525-1.789Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.7,6.975A8.311,8.311,0,0,0,.741,0,.714.714,0,0,0,0,.687H0V.751L.449,7.461a.824.824,0,0,0,.87.769l6.728-.449A.714.714,0,0,0,8.7,7.012Z\",transform:\"translate(10.819 0.777)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.145.024A.915.915,0,0,1,7.189.545a.824.824,0,0,1,.082.3c.092,1.3.284,4.146.394,5.684a1.043,1.043,0,0,0,1.117.97h0l5.648-.348a.915.915,0,0,1,.97.915h0A7.7,7.7,0,0,1,.974,11.264a7.323,7.323,0,0,1-.915-2.8A4.723,4.723,0,0,1,0,7.548,7.707,7.707,0,0,1,6.136.024\",transform:\"translate(0.756 4.745)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.67.6C-.038,1.414-.32,6.539.5,7.363s5.768.406,6.956-.529C10.317,4.583,2.93-2,.67.6Z\",transform:\"translate(10.809 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.188,7.984c1.084,1.084-1.79,7.264-7.486,7.264A7.7,7.7,0,0,1,0,7.547c0-5.3,5.229-8.69,6.728-7.191.863.863-.109,4.924,1.439,6.473S14.1,6.9,15.188,7.984Z\",transform:\"translate(0.75 3.806)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ft.displayName=\"IconlyGraph\",ft.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var pt=st(ft),mt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.986,20a1.026,1.026,0,0,1-.515-.141L7.99,16.62,1.5,19.86a1.069,1.069,0,0,1-.491.13A1.016,1.016,0,0,1,0,18.97V3.79A3.316,3.316,0,0,1,1.437.875,6.154,6.154,0,0,1,4.9,0h6.17a6.181,6.181,0,0,1,3.47.875A3.362,3.362,0,0,1,16,3.79V18.97a1.022,1.022,0,0,1-.74.99A.933.933,0,0,1,14.986,20ZM4.22,6.04a.79.79,0,0,0,0,1.58h7.53a.79.79,0,0,0,0-1.58Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.991,4.913,1.5,8.155a1.019,1.019,0,0,1-1.376-.4A1.09,1.09,0,0,1,0,7.258V0C0,.72.406,1.164,1.473,1.661Z\",transform:\"translate(0 11.709)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.98,20a1.012,1.012,0,0,1-.506-.136L7.991,16.621,1.473,13.37C.4,12.87,0,12.419,0,11.709V3.793A3.322,3.322,0,0,1,1.435.874,6.145,6.145,0,0,1,4.9,0h6.174A6.188,6.188,0,0,1,14.54.874,3.36,3.36,0,0,1,16,3.793V18.967a1.065,1.065,0,0,1-.123.489,1.023,1.023,0,0,1-.616.5A1.012,1.012,0,0,1,14.98,20ZM4.225,6.041a.791.791,0,0,0,0,1.581h7.524a.791.791,0,0,0,0-1.581Z\",transform:\"translate(0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.368,15.854,1.437,19.1a.989.989,0,0,1-1.318-.394h0A1.043,1.043,0,0,1,0,18.243V3.844C0,1.1,1.876,0,4.577,0H10.92C13.538,0,15.5,1.025,15.5,3.661V18.243a.979.979,0,0,1-.979.979,1.08,1.08,0,0,1-.476-.119L8.073,15.854A.741.741,0,0,0,7.368,15.854Z\",transform:\"translate(0.796 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.458H7.3\",transform:\"translate(4.87 6.865)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.526,0h-6.9C1.784,0,0,1.986,0,5.172V18.323A1.658,1.658,0,0,0,1.638,20a1.625,1.625,0,0,0,.784-.2l5.612-3.116,6.534,3.133a.709.709,0,0,0,.555,0,.733.733,0,0,0,.394-.4.759.759,0,0,0-.319-.883L8.707,15.428a1.385,1.385,0,0,0-1.362,0L1.724,18.535a.211.211,0,0,1-.207,0,.213.213,0,0,1-.095-.185V5.172c.009-2.357,1.164-3.7,3.233-3.7h6.9c2.655,0,3.043,2.207,3.043,3.53v.6H7.129a.708.708,0,0,0-.5.233.743.743,0,0,0-.191.526.715.715,0,0,0,.69.706h7.44v7.723A.716.716,0,1,0,16,14.8h0V5C16,1.915,14.293,0,11.526,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.368,15.854,1.437,19.1a.989.989,0,0,1-1.318-.394h0A1.043,1.043,0,0,1,0,18.243V3.844C0,1.1,1.876,0,4.577,0H10.92C13.538,0,15.5,1.025,15.5,3.661V18.243a.979.979,0,0,1-.979.979,1.08,1.08,0,0,1-.476-.119L8.073,15.854A.741.741,0,0,0,7.368,15.854Z\",transform:\"translate(0.796 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.458H7.3\",transform:\"translate(4.87 6.865)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H6.855\",transform:\"translate(4.042 6.218)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.47,0C1.083,0,0,.932,0,8.429,0,16.822-.153,19,1.443,19s4.2-3.684,6.027-3.684S11.9,19,13.5,19s1.439-2.178,1.439-10.571C14.936.932,13.857,0,7.47,0Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};mt.displayName=\"IconlyBookmark\",mt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ht=st(mt),Mt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.081,20a2.549,2.549,0,0,1-2.541-2.56V14.031a2.543,2.543,0,0,1,2.541-2.561h3.38A2.549,2.549,0,0,1,20,14.031v3.408A2.554,2.554,0,0,1,17.46,20ZM2.54,20A2.555,2.555,0,0,1,0,17.439V14.031A2.549,2.549,0,0,1,2.54,11.47H5.92a2.543,2.543,0,0,1,2.54,2.561v3.408A2.548,2.548,0,0,1,5.92,20ZM14.081,8.53A2.542,2.542,0,0,1,11.54,5.97V2.561A2.549,2.549,0,0,1,14.081,0h3.38A2.554,2.554,0,0,1,20,2.561V5.97a2.548,2.548,0,0,1-2.54,2.56ZM2.54,8.53A2.548,2.548,0,0,1,0,5.97V2.561A2.555,2.555,0,0,1,2.54,0H5.92A2.549,2.549,0,0,1,8.46,2.561V5.97A2.542,2.542,0,0,1,5.92,8.53Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.539,0H5.924A2.549,2.549,0,0,1,8.463,2.56V5.975a2.549,2.549,0,0,1-2.539,2.56H2.539A2.549,2.549,0,0,1,0,5.975V2.56A2.549,2.549,0,0,1,2.539,0\",transform:\"translate(11.537 0)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.075,20a2.549,2.549,0,0,1-2.538-2.56V14.026a2.549,2.549,0,0,1,2.538-2.561h3.387A2.549,2.549,0,0,1,20,14.026V17.44A2.549,2.549,0,0,1,17.462,20ZM2.539,20A2.55,2.55,0,0,1,0,17.44V14.026a2.55,2.55,0,0,1,2.539-2.561H5.925a2.549,2.549,0,0,1,2.538,2.561V17.44A2.549,2.549,0,0,1,5.925,20Zm0-11.465A2.549,2.549,0,0,1,0,5.974V2.56A2.549,2.549,0,0,1,2.539,0H5.925A2.548,2.548,0,0,1,8.463,2.56V5.974A2.549,2.549,0,0,1,5.925,8.535Z\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.716A2.459,2.459,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(11.837 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.471V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(0 11.766)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.716A2.46,2.46,0,0,1,8.163,2.471V5.764a2.459,2.459,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(11.837 11.766)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.3,19a2.932,2.932,0,0,1-2.875-2.944V13.186A2.908,2.908,0,0,1,13.3,10.252h2.813A2.931,2.931,0,0,1,19,13.186v2.871A2.943,2.943,0,0,1,16.117,19Zm-1.332-5.815v2.871a1.36,1.36,0,0,0,.388.964,1.3,1.3,0,0,0,.934.4h2.832a1.3,1.3,0,0,0,.934-.4,1.357,1.357,0,0,0,.387-.964V13.186a1.368,1.368,0,0,0-.39-.961,1.311,1.311,0,0,0-.941-.4H13.3A1.347,1.347,0,0,0,11.973,13.186Zm-9.09,5.8A2.976,2.976,0,0,1,0,16.048V13.186a2.966,2.966,0,0,1,.845-2.078,2.842,2.842,0,0,1,2.038-.856H4.038a.769.769,0,0,1,.74.367.805.805,0,0,1,0,.84.77.77,0,0,1-.74.368H2.883a1.354,1.354,0,0,0-1.34,1.359v2.835a1.381,1.381,0,0,0,1.34,1.359H5.713a1.313,1.313,0,0,0,.947-.4,1.371,1.371,0,0,0,.393-.964V11.764a.8.8,0,0,1,.347-.813.763.763,0,0,1,.869.025.8.8,0,0,1,.3.832v4.239a2.913,2.913,0,0,1-2.883,2.943ZM14.989,8.776a.794.794,0,0,1,0-1.576h1.129a1.323,1.323,0,0,0,.948-.41,1.386,1.386,0,0,0,.383-.977V2.943a1.364,1.364,0,0,0-1.331-1.359H13.3a1.346,1.346,0,0,0-1.332,1.359V7.236a.791.791,0,0,1-.793.774.761.761,0,0,1-.541-.245A.794.794,0,0,1,10.43,7.2V2.943A2.967,2.967,0,0,1,11.269.862,2.846,2.846,0,0,1,13.3,0h2.813a2.976,2.976,0,0,1,2.874,2.943V5.805a2.966,2.966,0,0,1-.816,2.085,2.85,2.85,0,0,1-2.022.886ZM5.7,8.749H2.883A2.933,2.933,0,0,1,0,5.814V2.943A2.943,2.943,0,0,1,2.883,0H5.7A2.93,2.93,0,0,1,8.579,2.943V5.814a2.946,2.946,0,0,1-.845,2.078A2.829,2.829,0,0,1,5.7,8.749ZM1.924,1.973a1.381,1.381,0,0,0-.4.97V5.814a1.378,1.378,0,0,0,.39.988,1.319,1.319,0,0,0,.939.4H5.7a1.318,1.318,0,0,0,.949-.41,1.377,1.377,0,0,0,.383-.977V2.943A1.361,1.361,0,0,0,5.7,1.584H2.857A1.311,1.311,0,0,0,1.924,1.973Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.716A2.459,2.459,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(11.837 0)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.47V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.47A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.714A2.46,2.46,0,0,1,8.163,2.471V5.764a2.46,2.46,0,0,1-2.449,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(0 11.766)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.449,0H5.716A2.46,2.46,0,0,1,8.163,2.471V5.764a2.459,2.459,0,0,1-2.448,2.47H2.449A2.46,2.46,0,0,1,0,5.764V2.471A2.46,2.46,0,0,1,2.449,0Z\",transform:\"translate(11.837 11.766)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z\",transform:\"translate(10.654 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.674,3.674,0,0,1,7.347,3.674Z\",transform:\"translate(10.654 10.588)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.347,3.674A3.673,3.673,0,1,1,3.673,0,3.673,3.673,0,0,1,7.347,3.674Z\",transform:\"translate(0 10.588)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Mt.displayName=\"IconlyCategory\",Mt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Lt=st(Mt),At=function(t){var r=t.color,n=t.strokeWidth,e=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.635,18.773V15.716A1.419,1.419,0,0,1,8.058,14.3h2.874a1.429,1.429,0,0,1,1.007.414,1.408,1.408,0,0,1,.417,1v3.058a1.213,1.213,0,0,0,.356.867,1.231,1.231,0,0,0,.871.36h1.961a3.46,3.46,0,0,0,2.443-1A3.41,3.41,0,0,0,19,16.578V7.867a2.473,2.473,0,0,0-.9-1.9L11.434.676A3.1,3.1,0,0,0,7.485.747L.967,5.965A2.474,2.474,0,0,0,0,7.867v8.7A3.444,3.444,0,0,0,3.456,20H5.372a1.231,1.231,0,0,0,1.236-1.218Z\",fill:r}))},a=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.657,18.771V15.7a1.426,1.426,0,0,1,1.424-1.419h2.886A1.426,1.426,0,0,1,12.4,15.7h0v3.076A1.225,1.225,0,0,0,13.6,20h1.924A3.456,3.456,0,0,0,19,16.562h0V7.838a2.439,2.439,0,0,0-.962-1.9L11.458.685a3.18,3.18,0,0,0-3.944,0L.962,5.943A2.42,2.42,0,0,0,0,7.847v8.714A3.456,3.456,0,0,0,3.473,20H5.4a1.235,1.235,0,0,0,1.241-1.229h0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:n}))},s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.004)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.921,19.84A3.93,3.93,0,0,1,0,15.917V7.952A3.025,3.025,0,0,1,1.174,5.6L1.9,5.065a.783.783,0,0,1,.9,1.244l-.7.522a1.469,1.469,0,0,0-.531,1.121v7.957a2.365,2.365,0,0,0,2.356,2.347h4v.018a.783.783,0,0,1,0,1.565Zm9.2-.009a1.9,1.9,0,0,1-1.9-1.9v-3.6a.5.5,0,0,0-.5-.5H8.1a.5.5,0,0,0-.5.513v1.373a.783.783,0,1,1-1.565,0V14.344a2.08,2.08,0,0,1,2.078-2.079h2.609a2.079,2.079,0,0,1,2.07,2.079v3.591a.33.33,0,0,0,.33.33H14.9a2.348,2.348,0,0,0,2.348-2.348V7.952a1.471,1.471,0,0,0-.556-1.13L10.687,2.03a2.052,2.052,0,0,0-2.608,0L6.148,3.474a.8.8,0,1,1-.931-1.3L7.122.8a3.609,3.609,0,0,1,4.522,0l6.009,4.792a3.052,3.052,0,0,1,1.138,2.348l-.008,7.974a3.922,3.922,0,0,1-3.922,3.921Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.657,18.771V15.7a1.426,1.426,0,0,1,1.424-1.419h2.886A1.426,1.426,0,0,1,12.4,15.7h0v3.076A1.225,1.225,0,0,0,13.6,20h1.924A3.456,3.456,0,0,0,19,16.562h0V7.838a2.439,2.439,0,0,0-.962-1.9L11.458.685a3.18,3.18,0,0,0-3.944,0L.962,5.943A2.42,2.42,0,0,0,0,7.847v8.714A3.456,3.456,0,0,0,3.473,20H5.4a1.235,1.235,0,0,0,1.241-1.229h0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:n}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H5.815\",transform:\"translate(6.679 13.635)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,11.713c0-5.631.614-5.238,3.919-8.3C5.365,2.246,7.615,0,9.558,0s4.237,2.235,5.7,3.41c3.305,3.065,3.918,2.672,3.918,8.3C19.172,20,17.213,20,9.586,20S0,20,0,11.713Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:n}))};switch(t.set){case\"bold\":case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(e,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(a,null)}};At.displayName=\"IconlyHome\",At.propTypes={color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var yt=st(At),gt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.983,19.967a3.619,3.619,0,0,1-1.714-.733,1.551,1.551,0,0,1-.7-1.173c0-.5.462-.734.889-.833a25.955,25.955,0,0,1,4.046,0c.427.1.889.329.889.833a1.553,1.553,0,0,1-.695,1.174,3.635,3.635,0,0,1-1.713.732A4,4,0,0,1,8.48,20,3.667,3.667,0,0,1,7.983,19.967ZM3.764,15.747a4.535,4.535,0,0,1-2.9-1.413A3.615,3.615,0,0,1,0,11.956a3.368,3.368,0,0,1,.731-2.31A3.8,3.8,0,0,0,1.794,6.8V6.37A5.625,5.625,0,0,1,3.077,2.512,7.073,7.073,0,0,1,8.456,0h.09a7.041,7.041,0,0,1,5.467,2.624,5.546,5.546,0,0,1,1.2,3.746V6.8a3.889,3.889,0,0,0,1.062,2.849A3.364,3.364,0,0,1,17,11.956a3.614,3.614,0,0,1-.863,2.379,4.539,4.539,0,0,1-2.9,1.413c-1.571.133-3.144.247-4.737.247A41.689,41.689,0,0,1,3.764,15.747Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.27,9.645A3.884,3.884,0,0,1,15.207,6.8V6.37a5.546,5.546,0,0,0-1.2-3.746A7.041,7.041,0,0,0,8.544,0H8.456A7.071,7.071,0,0,0,3.077,2.513,5.623,5.623,0,0,0,1.793,6.37V6.8A3.8,3.8,0,0,1,.73,9.645,3.363,3.363,0,0,0,0,11.956a3.608,3.608,0,0,0,.864,2.378,4.532,4.532,0,0,0,2.9,1.413,41.646,41.646,0,0,0,4.737.247c1.593,0,3.164-.113,4.737-.247a4.532,4.532,0,0,0,2.9-1.413A3.614,3.614,0,0,0,17,11.956a3.363,3.363,0,0,0-.73-2.31\",transform:\"translate(0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.936.08A25.6,25.6,0,0,0,.89.08C.462.179,0,.408,0,.912A1.55,1.55,0,0,0,.7,2.085h0a3.635,3.635,0,0,0,1.714.732,3.836,3.836,0,0,0,1.008,0A3.636,3.636,0,0,0,5.13,2.086h0a1.55,1.55,0,0,0,.7-1.173c0-.5-.462-.733-.89-.832\",transform:\"translate(5.573 17.148)\",fill:e,opacity:n}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,11.787v-.219A3.6,3.6,0,0,1,.6,9.75,4.87,4.87,0,0,0,1.8,7.436c0-.666,0-1.342.058-2.009C2.155,2.218,5.327,0,8.461,0h.078c3.134,0,6.306,2.218,6.617,5.427.058.666,0,1.342.049,2.009A4.955,4.955,0,0,0,16.4,9.759a3.506,3.506,0,0,1,.6,1.809v.209a3.566,3.566,0,0,1-.844,2.39A4.505,4.505,0,0,1,13.3,15.538a45.078,45.078,0,0,1-9.615,0A4.554,4.554,0,0,1,.835,14.167,3.6,3.6,0,0,1,0,11.787Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A3.061,3.061,0,0,0,2.037,1.127,3.088,3.088,0,0,0,4.288.5,2.886,2.886,0,0,0,4.812,0\",transform:\"translate(6.055 18.852)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.679,18.618a.756.756,0,0,1,.1-1.069.769.769,0,0,1,1.077.1,2.064,2.064,0,0,0,.418.413,1.987,1.987,0,0,0,2.777-.413h.009a.77.77,0,0,1,1.078-.1.755.755,0,0,1,.1,1.069,3.491,3.491,0,0,1-5.563,0Zm-1.641-2.78A4.834,4.834,0,0,1,.968,14.3,4.079,4.079,0,0,1,0,11.561v-.122a4.207,4.207,0,0,1,.728-2.1L.8,9.248a3.833,3.833,0,0,0,.887-1.76V5.675a.765.765,0,0,1,1.464.158V7.646a.431.431,0,0,1,0,.1,5.26,5.26,0,0,1-1.225,2.446,2.531,2.531,0,0,0-.39,1.25v.194a2.574,2.574,0,0,0,.585,1.715,3.319,3.319,0,0,0,2.076.986,40.05,40.05,0,0,0,8.588,0,3.326,3.326,0,0,0,2.12-1.03,2.543,2.543,0,0,0,.559-1.663v-.2a2.629,2.629,0,0,0-.381-1.258,5.269,5.269,0,0,1-1.3-2.446.584.584,0,0,1,0-.1V5.816c-.257-2.657-2.928-4.3-5.252-4.3a5.76,5.76,0,0,0-2.821.73.769.769,0,0,1-.777.005A.753.753,0,0,1,4.97.924,7.241,7.241,0,0,1,8.465,0c3.069,0,6.512,2.164,6.9,5.64V7.453a3.75,3.75,0,0,0,.887,1.76.747.747,0,0,1,.071.1A4.055,4.055,0,0,1,17,11.36l-.027.184a4.14,4.14,0,0,1-.941,2.754,4.884,4.884,0,0,1-3.123,1.54,40.7,40.7,0,0,1-4.435.242A40.723,40.723,0,0,1,4.038,15.838Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,11.787v-.219A3.6,3.6,0,0,1,.6,9.75,4.87,4.87,0,0,0,1.8,7.436c0-.666,0-1.342.058-2.009C2.155,2.218,5.327,0,8.461,0h.078c3.134,0,6.306,2.218,6.617,5.427.058.666,0,1.342.049,2.009A4.955,4.955,0,0,0,16.4,9.759a3.506,3.506,0,0,1,.6,1.809v.209a3.566,3.566,0,0,1-.844,2.39A4.505,4.505,0,0,1,13.3,15.538a45.078,45.078,0,0,1-9.615,0A4.554,4.554,0,0,1,.835,14.167,3.6,3.6,0,0,1,0,11.787Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A3.061,3.061,0,0,0,2.037,1.127,3.088,3.088,0,0,0,4.288.5,2.886,2.886,0,0,0,4.812,0\",transform:\"translate(6.055 18.852)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.615 2.514)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.382,0C2.947,0,1.021,4.015,1.021,6.67c0,1.984.288,1.4-.81,3.82-1.341,3.449,4.051,4.858,7.171,4.858s8.511-1.41,7.171-4.858c-1.1-2.42-.81-1.836-.81-3.82C13.743,4.015,11.815,0,7.382,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.62,0A2.992,2.992,0,0,1,0,0\",transform:\"translate(5.071 17.998)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};gt.displayName=\"IconlyNotification\",gt.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Wt=st(gt),Vt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20a9.955,9.955,0,0,1-4.92-1.3,2.2,2.2,0,0,0-1.107-.424,1.213,1.213,0,0,0-.383.063l-2.02.6a.754.754,0,0,1-.226.036.62.62,0,0,1-.5-.239.647.647,0,0,1-.094-.578l.67-2.244a1.046,1.046,0,0,0-.07-.9,10.566,10.566,0,0,1-1.35-5A10.158,10.158,0,0,1,2.831,3.032,9.89,9.89,0,0,1,10.02,0a9.865,9.865,0,0,1,7.12,2.994,10.058,10.058,0,0,1,2.1,3.182A9.89,9.89,0,0,1,20,9.985a10.138,10.138,0,0,1-.865,4.172,9.6,9.6,0,0,1-2.275,3.153A10.245,10.245,0,0,1,10,20ZM14.59,8.743a1.282,1.282,0,1,0,1.28,1.282A1.282,1.282,0,0,0,14.59,8.743Zm-4.629,0A1.268,1.268,0,0,0,8.7,10.015,1.28,1.28,0,1,0,9.98,8.743H9.961Zm-4.591,0a1.282,1.282,0,1,0,1.28,1.282A1.283,1.283,0,0,0,5.37,8.743Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.02,0A10,10,0,0,0,0,10a10.56,10.56,0,0,0,1.35,4.99,1.045,1.045,0,0,1,.07.9L.75,18.13a.624.624,0,0,0,.82.78l2.02-.6a1.7,1.7,0,0,1,1.491.36A9.987,9.987,0,1,0,10.02,0\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.22,1.28A1.28,1.28,0,1,1,10.5,2.561,1.276,1.276,0,0,1,9.22,1.28Zm-4.61-.01a1.28,1.28,0,1,1,1.28,1.291A1.292,1.292,0,0,1,4.611,1.27ZM0,1.28a1.28,1.28,0,0,1,2.56,0A1.29,1.29,0,0,1,1.28,2.561,1.289,1.289,0,0,1,0,1.28Z\",transform:\"translate(4.09 8.73)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.085,1.166a1.169,1.169,0,1,1,1.169,1.169A1.169,1.169,0,0,1,9.085,1.166Zm-4.542,0A1.168,1.168,0,1,1,5.711,2.336,1.169,1.169,0,0,1,4.543,1.166ZM0,1.166A1.169,1.169,0,1,1,1.168,2.336,1.169,1.169,0,0,1,0,1.166Z\",transform:\"translate(4.527 9.056)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.02,0A10.006,10.006,0,0,0,0,10.015a10.584,10.584,0,0,0,1.35,5,1.051,1.051,0,0,1,.07.9L.75,18.157a.624.624,0,0,0,.82.78l2.02-.6a1.7,1.7,0,0,1,1.49.361A10,10,0,1,0,10.02,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.847,19.765A.749.749,0,0,1,8.172,18.3,8.5,8.5,0,1,0,10.006,1.5H10A8.5,8.5,0,0,0,2.46,13.931l.192.375a1.961,1.961,0,0,1,.135,1.482,17,17,0,0,0-.53,1.633C2.818,17.252,3.5,17,4,16.823l.2-.074a.749.749,0,0,1,.509,1.409l-.2.073a23.99,23.99,0,0,1-2.442.791.8.8,0,0,1-.177.018A1.206,1.206,0,0,1,1,18.7a1.309,1.309,0,0,1-.337-1,.828.828,0,0,1,.019-.148,17.461,17.461,0,0,1,.69-2.245.475.475,0,0,0-.049-.309l-.194-.374A10,10,0,0,1,10,0h.012a10,10,0,1,1-2.16,19.765ZM13.21,10A1.189,1.189,0,1,1,14.4,11.188,1.19,1.19,0,0,1,13.21,10Zm-4.4,0A1.189,1.189,0,1,1,10,11.188,1.19,1.19,0,0,1,8.807,10ZM4.4,10a1.189,1.189,0,1,1,1.189,1.189A1.19,1.19,0,0,1,4.4,10Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.057,0A10,10,0,0,0,1.138,14.629l.2.39a1.3,1.3,0,0,1,.1,1,19.8,19.8,0,0,0-.715,2.324c0,.4.114.629.544.619A18.271,18.271,0,0,0,3.5,18.314a1.481,1.481,0,0,1,.954.057c.277.133.839.476.859.476A10,10,0,1,0,10.057,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ellipse\",{cx:\"0.477\",cy:\"0.476\",rx:\"1.477\",ry:\"1.476\",transform:\"translate(4.81 9.524)\",fill:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ellipse\",{cx:\"0.477\",cy:\"0.476\",rx:\"1.477\",ry:\"1.476\",transform:\"translate(9.58 9.524)\",fill:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ellipse\",{cx:\"0.477\",cy:\"0.476\",rx:\"1.477\",ry:\"1.476\",transform:\"translate(14.35 9.524)\",fill:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(13.444 9.913)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.435 9.913)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(5.426 9.913)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.071,17.07a10.006,10.006,0,0,1-11.285,2c-.547-.22-4.085.76-4.853-.007s.213-4.307-.007-4.854A10,10,0,1,1,17.071,17.07Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Vt.displayName=\"IconlyChat\",Vt.propTypes={color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Zt=st(Vt),jt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.501)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.236,19.838a38.535,38.535,0,0,1-6.656-5.21A13.333,13.333,0,0,1,.412,9.55C-.777,5.834.612,1.579,4.5.319a6.579,6.579,0,0,1,6,1.016h0a6.589,6.589,0,0,1,6-1.016c3.887,1.259,5.286,5.514,4.1,9.231a13.333,13.333,0,0,1-3.168,5.078,38.535,38.535,0,0,1-6.656,5.21l-.26.162Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.754,18.837A36.258,36.258,0,0,1,3.426,13.88,12.668,12.668,0,0,1,.4,9.075C-.742,5.535.582,1.489,4.279.288A6.282,6.282,0,0,1,9.985,1.3h0A6.291,6.291,0,0,1,15.691.288c3.7,1.2,5.03,5.247,3.893,8.787a12.67,12.67,0,0,1-3.013,4.8,36.587,36.587,0,0,1-6.328,4.958L9.994,19Z\",transform:\"translate(0.022)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.011,19l-.235-.163a36.319,36.319,0,0,1-6.337-4.958,12.667,12.667,0,0,1-3.048-4.8C-.738,5.535.586,1.489,4.283.288A6.3,6.3,0,0,1,10.011,1.31Z\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.261,17.854a34.84,34.84,0,0,1-6.022-4.689A11.99,11.99,0,0,1,.373,8.6C-.7,5.25.554,1.421,4.071.288A5.978,5.978,0,0,1,9.5,1.2h0A5.987,5.987,0,0,1,14.921.288C18.438,1.421,19.7,5.25,18.628,8.6a11.99,11.99,0,0,1-2.866,4.57A34.84,34.84,0,0,1,9.74,17.854L9.505,18Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.235,3.494A6.208,6.208,0,0,0,15.521.3a6.565,6.565,0,0,0-5.515.737A6.565,6.565,0,0,0,4.491.3,6.208,6.208,0,0,0,.776,3.494,7.945,7.945,0,0,0,.406,9.427a12.364,12.364,0,0,0,2.974,4.764,34.307,34.307,0,0,0,5.991,4.683A.705.705,0,0,0,9.776,19a.743.743,0,0,0,.693-.537.763.763,0,0,0-.287-.838A33.042,33.042,0,0,1,4.429,13.13,10.981,10.981,0,0,1,1.782,8.959a6.4,6.4,0,0,1,.282-4.782A4.778,4.778,0,0,1,4.941,1.741a5.033,5.033,0,0,1,4.615.818.73.73,0,0,0,.882,0,5.042,5.042,0,0,1,4.615-.818A4.78,4.78,0,0,1,17.9,4.186a6.345,6.345,0,0,1,.3,4.8,10.946,10.946,0,0,1-2.647,4.18,23.352,23.352,0,0,1-2.647,2.328.738.738,0,0,0-.3.483.748.748,0,0,0,.128.559.724.724,0,0,0,1.006.2l.053-.045a23.865,23.865,0,0,0,2.815-2.472,12.518,12.518,0,0,0,2.965-4.764A7.9,7.9,0,0,0,19.235,3.494Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.748,17.854A36.489,36.489,0,0,1,3.41,13.165,11.922,11.922,0,0,1,.393,8.6C-.74,5.25.583,1.421,4.285.288A6.563,6.563,0,0,1,10,1.2h0a6.573,6.573,0,0,1,5.71-.914c3.7,1.133,5.035,4.963,3.9,8.308a11.922,11.922,0,0,1-3.017,4.57,36.489,36.489,0,0,1-6.339,4.689L10.005,18Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A2.814,2.814,0,0,1,2.018,2.422\",transform:\"translate(13.936 4.053)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.55 3.55)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.372,8.9C-.7,5.546.554,1.381,4.071.249A4.869,4.869,0,0,1,9.5,1.939a4.73,4.73,0,0,1,5.42-1.69c3.516,1.132,4.778,5.3,3.706,8.647-1.67,5.31-7.5,8.076-9.126,8.076S2.1,14.268.372,8.9Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A2.154,2.154,0,0,1,1.917,2.422\",transform:\"translate(13.238 4.014)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};jt.displayName=\"IconlyHeart\",jt.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ct=st(jt),vt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.501)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.03,19h0l-.259-.16A38.164,38.164,0,0,1,3.4,13.879,12.993,12.993,0,0,1,.39,9.08,7.744,7.744,0,0,1,.533,3.805,6.084,6.084,0,0,1,4.321.269,4.5,4.5,0,0,1,5.21.06h.12A5.7,5.7,0,0,1,6.17,0h.11A6.266,6.266,0,0,1,8.111.33H8.17A.331.331,0,0,1,8.26.39a3.375,3.375,0,0,1,.63.261L9.27.82a2.627,2.627,0,0,1,.285.19c.057.042.106.077.145.1l.041.024A2.435,2.435,0,0,1,10,1.3,6.224,6.224,0,0,1,13.806,0h.044a5.826,5.826,0,0,1,1.86.291,6.019,6.019,0,0,1,3.755,3.517A7.915,7.915,0,0,1,19.62,9.08a12.781,12.781,0,0,1-3.009,4.81,38.6,38.6,0,0,1-6.332,4.96l-.25.15ZM14.937,3.118a.809.809,0,0,0-.757.543.82.82,0,0,0,.5,1.029,1.676,1.676,0,0,1,1.07,1.57V6.29a.86.86,0,0,0,.19.62.841.841,0,0,0,.57.29.823.823,0,0,0,.79-.76V6.321A3.3,3.3,0,0,0,15.19,3.16.78.78,0,0,0,14.937,3.118Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.754,18.837A36.258,36.258,0,0,1,3.426,13.88,12.668,12.668,0,0,1,.4,9.075C-.742,5.535.582,1.489,4.279.288A6.282,6.282,0,0,1,9.985,1.3h0A6.291,6.291,0,0,1,15.691.288c3.7,1.2,5.03,5.247,3.893,8.787a12.67,12.67,0,0,1-3.013,4.8,36.587,36.587,0,0,1-6.328,4.958L9.994,19Z\",transform:\"translate(0.022)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.011,19l-.235-.163a36.319,36.319,0,0,1-6.337-4.958,12.667,12.667,0,0,1-3.048-4.8C-.738,5.535.586,1.489,4.283.288A6.3,6.3,0,0,1,10.011,1.31Z\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.23,4h0a.719.719,0,0,1-.517-.278.818.818,0,0,1-.167-.591h0A1.647,1.647,0,0,0,.552,1.54.787.787,0,0,1,.022.592.725.725,0,0,1,.886.019a.383.383,0,0,1,.139.052A3.2,3.2,0,0,1,3,3.226a.807.807,0,0,1-.229.56A.708.708,0,0,1,2.23,4Z\",transform:\"translate(14 3)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.261,17.854a34.84,34.84,0,0,1-6.022-4.689A11.99,11.99,0,0,1,.373,8.6C-.7,5.25.554,1.421,4.071.288A5.978,5.978,0,0,1,9.5,1.2h0A5.987,5.987,0,0,1,14.921.288C18.438,1.421,19.7,5.25,18.628,8.6a11.99,11.99,0,0,1-2.866,4.57A34.84,34.84,0,0,1,9.74,17.854L9.505,18Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A2.782,2.782,0,0,1,1.917,2.422\",transform:\"translate(13.239 4.053)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.371,18.874A34.311,34.311,0,0,1,3.38,14.191,12.375,12.375,0,0,1,.406,9.427,7.944,7.944,0,0,1,.777,3.494,6.208,6.208,0,0,1,4.491.3a6.565,6.565,0,0,1,5.515.737A6.563,6.563,0,0,1,15.521.3a6.209,6.209,0,0,1,3.715,3.191,7.9,7.9,0,0,1,.335,5.96,12.524,12.524,0,0,1-2.965,4.765,23.9,23.9,0,0,1-2.814,2.471l-.053.045a.724.724,0,0,1-1.006-.2.747.747,0,0,1-.128-.559.737.737,0,0,1,.3-.483,23.377,23.377,0,0,0,2.647-2.328A10.95,10.95,0,0,0,18.2,8.986a6.345,6.345,0,0,0-.3-4.8,4.782,4.782,0,0,0-2.849-2.445,5.043,5.043,0,0,0-4.615.818.729.729,0,0,1-.882,0,5.035,5.035,0,0,0-4.615-.818A4.782,4.782,0,0,0,2.065,4.177,6.4,6.4,0,0,0,1.782,8.96,10.991,10.991,0,0,0,4.43,13.13a33.016,33.016,0,0,0,5.753,4.495.762.762,0,0,1,.287.838A.744.744,0,0,1,9.777,19h0A.705.705,0,0,1,9.371,18.874ZM14.8,7.188a1.973,1.973,0,0,0-1.359-1.8.762.762,0,0,1-.311-.876A.741.741,0,0,1,13.888,4a3.467,3.467,0,0,1,2.374,3.011.751.751,0,0,1-.148.549.721.721,0,0,1-.488.278.734.734,0,0,1-.1.006A.746.746,0,0,1,14.8,7.188Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.748,17.854A36.489,36.489,0,0,1,3.41,13.165,11.922,11.922,0,0,1,.393,8.6C-.74,5.25.583,1.421,4.285.288A6.563,6.563,0,0,1,10,1.2h0a6.573,6.573,0,0,1,5.71-.914c3.7,1.133,5.035,4.963,3.9,8.308a11.922,11.922,0,0,1-3.017,4.57,36.489,36.489,0,0,1-6.339,4.689L10.005,18Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A2.814,2.814,0,0,1,2.018,2.422\",transform:\"translate(13.936 4.053)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.55 3.55)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.372,8.9C-.7,5.546.554,1.381,4.071.249A4.869,4.869,0,0,1,9.5,1.939a4.73,4.73,0,0,1,5.42-1.69c3.516,1.132,4.778,5.3,3.706,8.647-1.67,5.31-7.5,8.076-9.126,8.076S2.1,14.268.372,8.9Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};vt.displayName=\"IconlyHeart2\",vt.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ht=st(vt),bt=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.473,4.473,0,0,1,12.554,20Zm.01-6.359a.756.756,0,0,0,.743.75h5.386a.756.756,0,0,0,.743-.75.742.742,0,0,0-.743-.741H5.426A.742.742,0,0,0,4.684,13.64Zm0-4.99a.742.742,0,0,0,.743.74H8.772a.742.742,0,0,0,.743-.74.756.756,0,0,0-.743-.75H5.426A.756.756,0,0,0,4.684,8.65Zm8.964-3.091a2.018,2.018,0,0,1-2-2.017V.906a.473.473,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.34.806h-.691C14.793,5.567,14.149,5.564,13.648,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.877A4.476,4.476,0,0,0,17,15.5V7.471a.453.453,0,0,0-.453-.458c-.423,0-.93.008-1.239.008\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.487.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.744,6.484a.745.745,0,0,1,0-1.49H6.188a.745.745,0,0,1,0,1.49Zm0-5A.744.744,0,1,1,.744,0H4.129a.744.744,0,1,1,0,1.489Z\",transform:\"translate(4.73 7.899)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.487,0H3.834A3.82,3.82,0,0,0,0,3.729V14.442a3.827,3.827,0,0,0,3.834,3.911h7.989a3.887,3.887,0,0,0,3.729-3.911V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.4.5H0\",transform:\"translate(5.387 13.058)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.356.5H0\",transform:\"translate(5.386 8.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.57,20A4.583,4.583,0,0,1,0,15.308V12.785a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A3.1,3.1,0,0,0,4.57,18.49h7.964a3.162,3.162,0,0,0,2.97-3.182V6.383L11.688,2.369V3.685A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.337,3.337,0,0,1-3.307-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.681a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.681V4.522A4.6,4.6,0,0,1,4.57.012h6.313C10.9.01,10.92,0,10.94,0s.037.01.057.012H11.2a.745.745,0,0,1,.54.233l5.049,5.312A.76.76,0,0,1,17,6.08v9.228A4.644,4.644,0,0,1,12.534,20Zm.8-5.594a.755.755,0,0,1,0-1.51h5.381a.755.755,0,0,1,0,1.51Zm0-4.986a.755.755,0,0,1,0-1.51H8.716a.755.755,0,0,1,0,1.51Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.487,0H3.834A3.82,3.82,0,0,0,0,3.729V14.442a3.827,3.827,0,0,0,3.834,3.911h7.989a3.887,3.887,0,0,0,3.729-3.911V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.4.5H0\",transform:\"translate(5.387 13.058)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.356.5H0\",transform:\"translate(5.386 8.106)\",fill:\"none\",stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a,opacity:n}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.4.5H0\",transform:\"translate(5.255 12.2)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.356.5H0\",transform:\"translate(5.255 8.189)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};bt.displayName=\"IconlyPaper\",bt.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var wt=st(bt),St=function(t){var r=t.color,n=t.opacity,e=t.secondaryColor,a=t.strokeWidth,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.455-9.01a.742.742,0,0,0,.742.74h1.7V13.46a.738.738,0,1,0,1.475,0V11.73h1.713a.745.745,0,0,0,0-1.49H9.05V8.51a.738.738,0,1,0-1.475,0v1.73h-1.7A.747.747,0,0,0,5.129,10.99Zm8.518-5.431a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.339.807h-.645C14.824,5.568,14.161,5.565,13.647,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.876A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.422,0-.93.008-1.238.008\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:e,opacity:n}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.688,2.472H3.96V.745a.745.745,0,1,0-1.489,0V2.472H.744a.745.745,0,0,0,0,1.49H2.471V5.688a.745.745,0,1,0,1.489,0V3.962H5.688a.745.745,0,0,0,0-1.49\",transform:\"translate(5.179 7.764)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.893 10.414)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.9V0\",transform:\"translate(7.844 8.464)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.57,20A4.463,4.463,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A2.96,2.96,0,0,0,4.57,18.49h7.963A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm3-6.544V11.744H5.875a.755.755,0,0,1,0-1.51H7.57V8.521a.748.748,0,1,1,1.5,0v1.713h1.7a.755.755,0,0,1,0,1.51h-1.7v1.712a.748.748,0,1,1-1.5,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.893 10.414)\",fill:\"none\",opacity:n,stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.9V0\",transform:\"translate(7.844 8.464)\",fill:\"none\",opacity:n,stroke:e,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.762 9.731)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.9V0\",transform:\"translate(7.713 7.781)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:a}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};St.displayName=\"IconlyPaperPlus\",St.propTypes={color:Q.string,opacity:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Tt=st(St),Ot=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.458.458,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.423,0,.794,0,1.122.006.257,0,.481,0,.68,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.455-9.01a.742.742,0,0,0,.742.74h4.891a.745.745,0,0,0,0-1.49H5.872A.747.747,0,0,0,5.129,10.99Zm8.518-5.431a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.814-.334l3.986,4.187a.477.477,0,0,1-.339.807h-.645C14.824,5.568,14.161,5.565,13.647,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.463A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.488.008a.477.477,0,0,0,.342-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.688,1.489H.745A.745.745,0,1,1,.745,0H5.688a.745.745,0,1,1,0,1.489\",transform:\"translate(5.179 11.08)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.819,3.819,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z\",transform:\"translate(0.751 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.893 11.247)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.57,20A4.463,4.463,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A2.96,2.96,0,0,0,4.57,18.49h7.963A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.6,4.6,0,0,1,4.57.012h6.312c.02,0,.037-.012.058-.012s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm1.305-7.418a.755.755,0,0,1,0-1.51h4.886a.755.755,0,0,1,0,1.51Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.819,3.819,0,0,0,0,3.729V14.578a3.713,3.713,0,0,0,3.834,3.775h7.988a3.769,3.769,0,0,0,3.73-3.775v-9.3Z\",transform:\"translate(0.751 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.893 11.247)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.9.5H0\",transform:\"translate(5.762 9.731)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ot.displayName=\"IconlyPaperNegative\",Ot.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var It=st(Ot),Nt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.418,0,.79,0,1.119.006.256,0,.48,0,.673,0,.142,0,.328,0,.528,0,.239,0,.485-.005.709-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20ZM8.3,12.041,9.5,13.26a.735.735,0,0,0,1.049,0,.749.749,0,0,0,0-1.049L9.347,10.99l1.208-1.22a.75.75,0,0,0,0-1.05.724.724,0,0,0-1.049,0L8.3,9.94,7.089,8.72a.713.713,0,0,0-1.04,0,.75.75,0,0,0,0,1.05l1.208,1.22L6.05,12.21a.749.749,0,0,0,0,1.049.691.691,0,0,0,.515.22.711.711,0,0,0,.525-.22L8.3,12.041h0Zm5.345-6.482a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334C13.531,1.7,15.4,3.661,16.447,4.759a.477.477,0,0,1-.341.807h-.645C14.82,5.568,14.157,5.565,13.643,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.463A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.017,5.134c.7.008,1.665.01,2.487.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.546,2.492,4.767,1.27A.744.744,0,0,0,3.714.218L2.493,1.438,1.272.218A.745.745,0,0,0,.218,1.27L1.44,2.492.218,3.713A.745.745,0,1,0,1.272,4.765l1.221-1.22,1.221,1.22A.744.744,0,0,0,4.767,3.713Z\",transform:\"translate(5.889 8.493)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.487,0H3.729A3.729,3.729,0,0,0,0,3.729V14.578a3.8,3.8,0,0,0,3.94,3.775h7.883a3.768,3.768,0,0,0,3.729-3.775v-9.3Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.466,3.466,0,0\",transform:\"translate(6.61 9.182)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.466,3.466,0\",transform:\"translate(6.611 9.182)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.675,20A4.568,4.568,0,0,1,0,15.443V12.92a.752.752,0,0,1,.748-.755.752.752,0,0,1,.748.755v2.523A3.046,3.046,0,0,0,4.675,18.49h7.859A3.013,3.013,0,0,0,15.5,15.443V6.383L11.687,2.369V3.686A1.831,1.831,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.509h0a3.336,3.336,0,0,1-3.308-3.346V1.522H4.464a2.988,2.988,0,0,0-2.968,3V8.816a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.816V4.522A4.492,4.492,0,0,1,4.464.012h6.419C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.756.756,0,0,1,17,6.08v9.364A4.518,4.518,0,0,1,12.533,20Zm4.843-6.733-1.2-1.21-1.2,1.21a.743.743,0,0,1-1.058,0,.762.762,0,0,1,0-1.068l1.2-1.21-1.2-1.211a.761.761,0,0,1,0-1.067.745.745,0,0,1,1.058,0l1.2,1.211,1.2-1.211a.743.743,0,0,1,1.057,0,.759.759,0,0,1,0,1.067l-1.2,1.211,1.2,1.21a.76.76,0,0,1,0,1.068.741.741,0,0,1-1.057,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.487,0H3.729A3.729,3.729,0,0,0,0,3.729V14.578a3.8,3.8,0,0,0,3.94,3.775h7.883a3.768,3.768,0,0,0,3.729-3.775v-9.3Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.574,2.574,0,0,0,2.568,5.484c1.317,0,2.664,0,2.755,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.733,1.733,0,3.466,1.733,1.733,0,0,1.733,1.733,3.466,0,1.733,1.733,3.466,3.466Z\",transform:\"translate(6.61 9.182)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.466,3.466,0,0\",transform:\"translate(6.479 8.498)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.466,3.466,0\",transform:\"translate(6.48 8.498)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Nt.displayName=\"IconlyPaperFail\",Nt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var xt=st(Nt),Pt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.418,0,.79,0,1.119.006.256,0,.48,0,.673,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.448.448,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20Zm.109-9.29a.755.755,0,0,0,0,1.06l2.831,2.87a.78.78,0,0,0,.238.159.7.7,0,0,0,.287.06.644.644,0,0,0,.277-.06.78.78,0,0,0,.238-.159l2.841-2.87a.747.747,0,0,0-.01-1.06.729.729,0,0,0-1.04,0l-1.574,1.6V7.49a.734.734,0,0,0-.733-.75.747.747,0,0,0-.743.75v4.82l-1.574-1.6a.729.729,0,0,0-1.04,0Zm8.86-5.151a2.017,2.017,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334l3.987,4.187a.477.477,0,0,1-.34.807H15.46C14.819,5.568,14.156,5.565,13.642,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.451,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.457.457,0,0,0,9.752,0H4.464A4.49,4.49,0,0,0,0,4.509V15.284A4.693,4.693,0,0,0,4.67,20h7.875A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.423,0-.93.008-1.238.008\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7,3.973a.745.745,0,0,0-1.054,0l-1.589,1.6V.745a.745.745,0,1,0-1.49,0V5.572l-1.59-1.6A.745.745,0,0,0,.216,5.026L3.079,7.9h0a.745.745,0,0,0,.24.161.757.757,0,0,0,.287.057A.741.741,0,0,0,3.9,8.062.753.753,0,0,0,4.133,7.9h0L7,5.026A.744.744,0,0,0,7,3.973\",transform:\"translate(4.61 6.736)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,6.573V0\",transform:\"translate(7.641 7.441)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.838,2.851,5.677,0\",transform:\"translate(5.302 11.163)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.57,20A4.57,4.57,0,0,1,0,15.332V12.809a.748.748,0,1,1,1.5,0v2.523A3.048,3.048,0,0,0,4.57,18.49h7.963A3.11,3.11,0,0,0,15.5,15.332V6.383L11.687,2.368V3.685A1.832,1.832,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.338,3.338,0,0,1-3.308-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.7a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.7V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.76.76,0,0,1,17,6.08v9.251A4.631,4.631,0,0,1,12.533,20Zm3.256-5.194a.772.772,0,0,1-.24-.163L4.756,11.772a.761.761,0,0,1,0-1.067.743.743,0,0,1,1.058,0l1.552,1.574V7.492a.748.748,0,1,1,1.5,0V12.28l1.552-1.573a.742.742,0,0,1,1.057,0,.759.759,0,0,1,0,1.067L8.646,14.643h0a.742.742,0,0,1-.816.162Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,6.573V0\",transform:\"translate(7.641 7.441)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:a,strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.838,2.851,5.677,0\",transform:\"translate(5.302 11.163)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:a,strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,6.041V0\",transform:\"translate(7.51 7.226)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.345,2.355,4.69,0\",transform:\"translate(5.665 10.912)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Pt.displayName=\"IconlyPaperDownload\",Pt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Et=st(Pt),Dt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.674,20A4.7,4.7,0,0,1,0,15.29V4.51A4.493,4.493,0,0,1,4.465,0H9.752a.464.464,0,0,1,.455.46V3.68a3.341,3.341,0,0,0,3.308,3.34c.416,0,.785,0,1.11.005.256,0,.482,0,.682,0,.141,0,.323,0,.521,0,.229,0,.486-.005.716-.005A.453.453,0,0,1,17,7.47v8.04A4.478,4.478,0,0,1,12.544,20ZM7.4,9.293V14.12a.738.738,0,1,0,1.475,0V9.29l1.574,1.6a.731.731,0,0,0,1.04,0,.739.739,0,0,0,.01-1.05L8.654,6.96A.78.78,0,0,0,8.416,6.8a.644.644,0,0,0-.277-.06.7.7,0,0,0-.287.06.78.78,0,0,0-.238.159L4.783,9.84a.748.748,0,0,0,0,1.05.731.731,0,0,0,1.04,0l1.572-1.6,0,0Zm6.246-3.733a2.018,2.018,0,0,1-2-2.017V.906a.472.472,0,0,1,.813-.334C13.53,1.7,15.4,3.661,16.445,4.759a.477.477,0,0,1-.34.806h-.691C14.787,5.567,14.144,5.564,13.642,5.559Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.309,7.021c-.452,0-1.05-.01-1.794-.01a3.336,3.336,0,0,1-3.309-3.336V.459A.456.456,0,0,0,9.753,0H4.464A4.489,4.489,0,0,0,0,4.509V15.284A4.692,4.692,0,0,0,4.67,20h7.876A4.476,4.476,0,0,0,17,15.5V7.471a.454.454,0,0,0-.453-.458c-.422,0-.93.008-1.238.008\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.821.147A.477.477,0,0,0,0,.481V3.118A2.026,2.026,0,0,0,2.016,5.134c.7.008,1.666.01,2.488.008a.477.477,0,0,0,.343-.808C3.792,3.237,1.9,1.271.821.147\",transform:\"translate(11.763 0.42)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.995,4.147a.745.745,0,0,1-1.054,0l-1.589-1.6V7.375a.745.745,0,1,1-1.489,0V2.548l-1.591,1.6A.745.745,0,0,1,.217,3.094L3.079.219h0a.745.745,0,0,1,.815-.16.753.753,0,0,1,.238.159s0,0,0,0L7,3.094a.744.744,0,0,1,0,1.053\",transform:\"translate(4.61 6.737)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V6.573\",transform:\"translate(7.641 7.441)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.851,2.838,0,5.677,2.851\",transform:\"translate(5.302 7.44)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.57,20A4.57,4.57,0,0,1,0,15.332V12.809a.748.748,0,1,1,1.5,0v2.523A3.048,3.048,0,0,0,4.57,18.49h7.963A3.11,3.11,0,0,0,15.5,15.332V6.383L11.687,2.368V3.685A1.832,1.832,0,0,0,13.5,5.522a.755.755,0,0,1,0,1.51h0a3.338,3.338,0,0,1-3.308-3.348V1.522H4.57a3.078,3.078,0,0,0-3.074,3V8.7a.752.752,0,0,1-.748.755A.752.752,0,0,1,0,8.7V4.522A4.6,4.6,0,0,1,4.57.012h6.312C10.9.01,10.92,0,10.939,0s.038.01.058.012h.2a.745.745,0,0,1,.54.233l5.05,5.312A.76.76,0,0,1,17,6.08v9.251A4.631,4.631,0,0,1,12.533,20Zm2.8-5.89V9.319L5.816,10.895a.743.743,0,0,1-1.058,0,.762.762,0,0,1,0-1.068l2.831-2.87h0a.745.745,0,0,1,1.058,0h0l2.831,2.87a.761.761,0,0,1,0,1.068.744.744,0,0,1-1.057,0L8.863,9.319v4.791a.748.748,0,1,1-1.5,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.486,0H3.834A3.82,3.82,0,0,0,0,3.729V14.466a3.806,3.806,0,0,0,3.834,3.887h7.988a3.867,3.867,0,0,0,3.73-3.887V5.276Z\",transform:\"translate(0.75 0.762)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.909A2.575,2.575,0,0,0,2.569,5.484c1.316,0,2.663,0,2.754,0\",transform:\"translate(10.974 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V6.573\",transform:\"translate(7.641 7.441)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:a,strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.851,2.838,0,5.677,2.851\",transform:\"translate(5.302 7.44)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",opacity:a,strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.51,5.55,10.84.15A18.2,18.2,0,0,0,8.39,0C2.1,0,0,2.32,0,9.25S2.1,18.5,8.39,18.5s8.4-2.31,8.4-9.25A21.045,21.045,0,0,0,16.51,5.55Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V2.661A3.363,3.363,0,0,0,3.364,6.024H6.315\",transform:\"translate(10.284 0.083)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V6.041\",transform:\"translate(7.51 7.226)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.69,2.355,2.345,0,0,2.355\",transform:\"translate(5.665 7.227)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Dt.displayName=\"IconlyPaperUpload\",Dt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var $t=st(Dt),qt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.435.582A1.933,1.933,0,0,0,17.5.079L1.408,4.76A1.919,1.919,0,0,0,.024,6.281a2.253,2.253,0,0,0,1,2.1L6.06,11.477a1.3,1.3,0,0,0,1.61-.193l5.763-5.8a.734.734,0,0,1,1.06,0,.763.763,0,0,1,0,1.067l-5.773,5.8a1.324,1.324,0,0,0-.193,1.619L11.6,19.054A1.91,1.91,0,0,0,13.263,20a2.078,2.078,0,0,0,.25-.01A1.95,1.95,0,0,0,15.144,18.6L19.916,2.525a1.964,1.964,0,0,0-.48-1.943\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.427.578a1.938,1.938,0,0,0-1.93-.5L1.407,4.727A1.914,1.914,0,0,0,.024,6.238a2.235,2.235,0,0,0,1,2.09L6.057,11.4a1.308,1.308,0,0,0,1.609-.191l5.761-5.761a.735.735,0,0,1,1.06,0,.754.754,0,0,1,0,1.06L8.716,12.269a1.31,1.31,0,0,0-.193,1.609l3.074,5.05a2,2,0,0,0,1.91.929,1.944,1.944,0,0,0,1.63-1.38l4.77-15.969a1.943,1.943,0,0,0-.48-1.93\",transform:\"translate(0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.765,7.626a.75.75,0,0,1,0-1.06L6.13,5.2A.75.75,0,0,1,7.191,6.26L5.825,7.626a.75.75,0,0,1-1.06,0ZM3.981,3.838a.75.75,0,0,1,0-1.06L5.346,1.411A.75.75,0,0,1,6.407,2.472L5.041,3.838a.75.75,0,0,1-1.06,0ZM.22,2.645a.75.75,0,0,1,0-1.06L1.585.219A.75.75,0,0,1,2.646,1.28L1.28,2.645a.75.75,0,0,1-1.06,0Z\",transform:\"translate(0.261 11.943)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.855,5.121l-5.664,5.7L.561,6.741A1.182,1.182,0,0,1,.847,4.6L16.5.047a1.176,1.176,0,0,1,1.447,1.471L13.3,17.158a1.168,1.168,0,0,1-2.123.274l-3.989-6.61\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.6,19.054l-4.1-6.79a.76.76,0,0,1,.112-.926L13.434,5.48a.745.745,0,0,1,1.06,0,.759.759,0,0,1,0,1.067l-5.4,5.44,3.794,6.282a.452.452,0,0,0,.822-.105l2.322-7.816a.748.748,0,0,1,.934-.507.756.756,0,0,1,.5.94L15.144,18.6a1.933,1.933,0,0,1-1.625,1.387,1.787,1.787,0,0,1-.258.017A1.925,1.925,0,0,1,11.6,19.054ZM4.323,10.407.936,8.322a1.97,1.97,0,0,1,.477-3.567L17.5.077a1.943,1.943,0,0,1,1.93.5,1.975,1.975,0,0,1,.484,1.948l-1.249,4.2A.75.75,0,1,1,17.232,6.3l1.248-4.2a.455.455,0,0,0-.56-.57L1.83,6.206a.458.458,0,0,0-.112.828L5.1,9.118a.758.758,0,0,1,.247,1.039.747.747,0,0,1-.64.361A.735.735,0,0,1,4.323,10.407Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.821,0,0,5.821\",transform:\"translate(7.391 5.227)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.391,11.048.576,6.881A1.2,1.2,0,0,1,.87,4.7L16.96.049a1.2,1.2,0,0,1,1.487,1.5L13.673,17.514a1.2,1.2,0,0,1-2.182.28l-4.1-6.746\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.8 2.8)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.693,9.638S-3.283,7.161.879,4.758C4.391,2.731,16.495-.755,18.186.146c.9,1.691-2.585,13.795-4.612,17.307C11.171,21.615,8.693,9.638,8.693,9.638Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.492,9.492,0\",transform:\"translate(8.693 0.146)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};qt.displayName=\"IconlySend\",qt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ut=st(qt),Rt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.999)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.666,20C2.277,20,0,17.623,0,14.084V5.917C0,2.378,2.277,0,5.666,0h8.669C17.724,0,20,2.378,20,5.917v8.168C20,17.623,17.723,20,14.334,20Zm7.266-9.25h1.329v1.1a.75.75,0,0,0,1.5,0V10a.751.751,0,0,0-.75-.75H9.319a2.6,2.6,0,1,0,0,1.5h2.112v1.1a.75.75,0,0,0,1.5,0v-1.1h0ZM5.739,10a1.1,1.1,0,1,1,1.1,1.1A1.1,1.1,0,0,1,5.739,10Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.334,0H5.665C2.276,0,0,2.378,0,5.917v8.167C0,17.622,2.276,20,5.665,20h8.668C17.722,20,20,17.622,20,14.084V5.917C20,2.378,17.723,0,14.334,0\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.78,5.2a.743.743,0,0,1-.751-.751V3.35H8.7v1.1A.751.751,0,0,1,7.95,5.2.742.742,0,0,1,7.2,4.45V3.35H5.08A2.567,2.567,0,0,1,2.61,5.2a2.6,2.6,0,1,1,0-5.2A2.566,2.566,0,0,1,5.08,1.85h5.7a.751.751,0,0,1,.75.75V4.45A.751.751,0,0,1,10.78,5.2ZM2.61,1.5a1.1,1.1,0,1,0,1.1,1.1A1.106,1.106,0,0,0,2.61,1.5Z\",transform:\"translate(4.234 7.399)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.7,1.852A1.852,1.852,0,1,1,1.851,0,1.852,1.852,0,0,1,3.7,1.852Z\",transform:\"translate(4.989 8.148)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H6.318V1.852\",transform:\"translate(8.692 10)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,1.852V0\",transform:\"translate(11.682 10)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.953,20a.75.75,0,1,1,0-1.5h5.38c2.531,0,4.167-1.733,4.167-4.416V5.916c0-2.683-1.636-4.415-4.166-4.415H5.665C3.135,1.5,1.5,3.233,1.5,5.916v8.168c0,2.683,1.634,4.416,4.164,4.416a.75.75,0,1,1,0,1.5C2.276,20,0,17.622,0,14.084V5.916C0,2.378,2.276,0,5.665,0h8.67C17.723,0,20,2.378,20,5.916v8.168C20,17.622,17.722,20,14.333,20Zm5.306-8.149v-1.1H12.931v1.1a.75.75,0,1,1-1.5,0v-1.1H9.318A2.6,2.6,0,1,1,4.467,8.932a.75.75,0,1,1,1.368.615A1.1,1.1,0,1,0,6.84,8.9a.75.75,0,1,1,0-1.5,2.6,2.6,0,0,1,2.478,1.85H15.01a.751.751,0,0,1,.75.751v1.851a.75.75,0,1,1-1.5,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.7,1.852A1.852,1.852,0,1,1,1.851,0,1.852,1.852,0,0,1,3.7,1.852Z\",transform:\"translate(4.989 8.148)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H6.318V1.852\",transform:\"translate(8.692 10)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,1.852V0\",transform:\"translate(11.682 10)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.75 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.7,1.852A1.852,1.852,0,1,1,1.852,0h0A1.851,1.851,0,0,1,3.7,1.852Z\",transform:\"translate(4.235 7.398)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H6.318V1.852\",transform:\"translate(7.942 9.25)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,1.852V0\",transform:\"translate(10.932 9.25)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Rt.displayName=\"IconlyPassword\",Rt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var _t=st(Rt),Ft=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.454,17.721a4.445,4.445,0,0,1-.434-.394A17.665,17.665,0,0,1,10.909,12.7a4.061,4.061,0,0,1-.32-1.078V11.57a1.461,1.461,0,0,1,.779-1.288,6.515,6.515,0,0,1,1.04-.28A20.9,20.9,0,0,1,15.3,9.83a17.926,17.926,0,0,1,2.985.2,7.45,7.45,0,0,1,.835.209,1.5,1.5,0,0,1,.709.65,1.633,1.633,0,0,1,.171.732,3.875,3.875,0,0,1-.264.963,17.773,17.773,0,0,1-3.155,4.736c-.16.162-.355.337-.4.382a1.43,1.43,0,0,1-.891.3A1.363,1.363,0,0,1,14.454,17.721Zm-10.94-2.3.257-4.578a.934.934,0,1,1,1.867,0L5.9,15.417a1.191,1.191,0,1,1-2.381,0Zm-1.8-7.444A7.4,7.4,0,0,1,.88,7.764a1.491,1.491,0,0,1-.709-.65A1.62,1.62,0,0,1,0,6.384a3.943,3.943,0,0,1,.262-.963A17.762,17.762,0,0,1,3.418.685c.161-.162.355-.337.4-.383A1.433,1.433,0,0,1,4.712,0a1.368,1.368,0,0,1,.834.278,4.586,4.586,0,0,1,.435.4A17.751,17.751,0,0,1,9.091,5.3a4.108,4.108,0,0,1,.321,1.079v.047a1.464,1.464,0,0,1-.778,1.287A6.442,6.442,0,0,1,7.593,8,20.9,20.9,0,0,1,4.7,8.17,17.926,17.926,0,0,1,1.715,7.973Zm12.647-.811L14.1,2.583a1.191,1.191,0,1,1,2.381,0l-.257,4.579a.934.934,0,1,1-1.867,0Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.191,0A.941.941,0,0,0,.257.948L0,5.527A1.2,1.2,0,0,0,1.191,6.734a1.2,1.2,0,0,0,1.19-1.208L2.125.948A.941.941,0,0,0,1.191,0\",transform:\"translate(3.514 9.891)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.98.673a4.62,4.62,0,0,0-.434-.4A1.371,1.371,0,0,0,4.712,0a1.432,1.432,0,0,0-.893.3c-.046.046-.24.221-.4.384A17.743,17.743,0,0,0,.262,5.421,3.917,3.917,0,0,0,0,6.384a1.628,1.628,0,0,0,.171.73,1.491,1.491,0,0,0,.709.65,7.394,7.394,0,0,0,.834.209,17.975,17.975,0,0,0,2.986.2A20.868,20.868,0,0,0,7.593,8a6.358,6.358,0,0,0,1.04-.279A1.465,1.465,0,0,0,9.412,6.43V6.384A4.123,4.123,0,0,0,9.091,5.3,17.742,17.742,0,0,0,5.98.673\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.191,6.735a.941.941,0,0,0,.934-.948l.256-4.579A1.2,1.2,0,0,0,1.191,0,1.2,1.2,0,0,0,0,1.208L.257,5.787a.941.941,0,0,0,.934.948\",transform:\"translate(14.103 1.375)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.241,1.056a1.5,1.5,0,0,0-.709-.65A7.457,7.457,0,0,0,7.7.2,17.975,17.975,0,0,0,4.712,0,20.868,20.868,0,0,0,1.819.173,6.484,6.484,0,0,0,.778.453,1.463,1.463,0,0,0,0,1.741v.046A4.065,4.065,0,0,0,.321,2.866,17.694,17.694,0,0,0,3.431,7.5a4.5,4.5,0,0,0,.434.394,1.361,1.361,0,0,0,.836.279,1.434,1.434,0,0,0,.892-.3c.046-.046.24-.221.4-.382A17.777,17.777,0,0,0,9.148,2.751a3.881,3.881,0,0,0,.263-.963,1.629,1.629,0,0,0-.171-.732\",transform:\"translate(10.588 9.829)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.556,13.618V0\",transform:\"translate(14.284 3.546)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.156,0,4.078,4.1,0,0\",transform:\"translate(10.762 13.068)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.556,0V13.618\",transform:\"translate(4.356 0.833)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.1,4.078,0,8.156,4.1\",transform:\"translate(0.833 0.832)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.359,17.937a.834.834,0,0,1-.509-.77V3.546a.824.824,0,1,1,1.648,0v11.6l2.042-2.077a.82.82,0,0,1,1.166,0,.842.842,0,0,1,0,1.179l-3.451,3.506a.816.816,0,0,1-.9.183Zm-2.7-2.65-1.6-1.629a.841.841,0,0,1,0-1.179.817.817,0,0,1,1.165,0l1.6,1.631a.84.84,0,0,1,0,1.178.818.818,0,0,1-1.166,0Zm-7.628-.835V.833a.832.832,0,0,1,.509-.77.817.817,0,0,1,.9.182l4.033,4.1a.84.84,0,0,1,0,1.179.817.817,0,0,1-1.165,0L5.681,2.852v11.6a.824.824,0,1,1-1.648,0ZM.243,5.519a.839.839,0,0,1,0-1.178l1.6-1.63a.818.818,0,0,1,1.166,0,.842.842,0,0,1,0,1.18l-1.6,1.629a.815.815,0,0,1-1.165,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.556,13.618V0\",transform:\"translate(14.284 3.546)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.156,0,4.078,4.1,0,0\",transform:\"translate(10.762 13.068)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.556,0V13.618\",transform:\"translate(4.356 0.833)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.1,4.078,0,8.156,4.1\",transform:\"translate(0.833 0.832)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.9 4.6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V12.618\",transform:\"translate(3.579 0.001)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.1S2.169,0,4.078,0,8.156,4.1,8.156,4.1\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,12.618V0\",transform:\"translate(13.506 2.21)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.156,0S5.986,4.1,4.078,4.1,0,0,0,0\",transform:\"translate(9.929 10.728)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ft.displayName=\"IconlySwap\",Ft.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var zt=st(Ft),Bt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.972,20a3.829,3.829,0,0,1-3.8-3.847L.1,10.987a.211.211,0,0,1,.09-.172.128.128,0,0,1,.071-.02.207.207,0,0,1,.119.041,17.072,17.072,0,0,0,7,2.632.722.722,0,0,0,.1.006.753.753,0,0,0,.722-.554,1.824,1.824,0,0,1,1.78-1.377h.031a1.824,1.824,0,0,1,1.78,1.377.753.753,0,0,0,.723.554.718.718,0,0,0,.1-.006,17.072,17.072,0,0,0,7-2.632l.04-.021a.183.183,0,0,1,.08-.019.132.132,0,0,1,.07.019.211.211,0,0,1,.09.172l-.08,5.165A3.829,3.829,0,0,1,16.018,20Zm5.273-6.248v1.307a.755.755,0,0,0,.75.759.746.746,0,0,0,.751-.759V13.752a.756.756,0,0,0-.751-.76A.765.765,0,0,0,9.245,13.752Zm3.6-2.078A3.3,3.3,0,0,0,10,10.025a3.358,3.358,0,0,0-2.873,1.642.327.327,0,0,1-.276.166.286.286,0,0,1-.056-.005A15.524,15.524,0,0,1,1.171,9.56L.21,8.891a.289.289,0,0,1-.13-.243C.051,8.141,0,6.487,0,6.471A3.839,3.839,0,0,1,3.812,2.613H5.783A2.977,2.977,0,0,1,8.7,0h2.581a2.977,2.977,0,0,1,2.921,2.613h1.981A3.839,3.839,0,0,1,20,6.471c0,.009-.059.913-.08,2.154a.33.33,0,0,1-.129.256c-.471.347-.918.647-.961.669a15.328,15.328,0,0,1-5.647,2.288.3.3,0,0,1-.057.005A.325.325,0,0,1,12.848,11.674ZM7.3,2.613h5.383a1.447,1.447,0,0,0-1.4-1.093H8.7A1.448,1.448,0,0,0,7.3,2.613Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0C.05,2.338.19,6.337.21,6.778A4.651,4.651,0,0,0,1.2,9.346,3.689,3.689,0,0,0,4.292,10.71c1.856.01,3.9.01,5.889.01s3.931,0,5.566-.01a3.733,3.733,0,0,0,3.089-1.364,4.514,4.514,0,0,0,.974-2.568c.02-.371.12-4.712.18-6.778Z\",transform:\"translate(0 9.078)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.75V2.044a.75.75,0,0,0,1.5,0V.75A.75.75,0,0,0,0,.75\",transform:\"translate(9.245 12.634)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.473,13.117a.749.749,0,0,1-.727-.564A1.8,1.8,0,0,0,9.99,11.2a1.826,1.826,0,0,0-1.779,1.357.754.754,0,0,1-.726.552.783.783,0,0,1-.1-.007,17.159,17.159,0,0,1-7.047-2.62A.747.747,0,0,1,0,9.855V6.389A3.817,3.817,0,0,1,3.817,2.581H5.784A2.959,2.959,0,0,1,8.7,0h2.582a2.957,2.957,0,0,1,2.92,2.581h1.977A3.812,3.812,0,0,1,19.99,6.389V9.855a.752.752,0,0,1-.336.626,17.143,17.143,0,0,1-7.078,2.629A.8.8,0,0,1,12.473,13.117ZM8.7,1.5A1.46,1.46,0,0,0,7.3,2.581h5.387a1.46,1.46,0,0,0-1.4-1.081Z\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S.142,1.738.175,2.286a3.823,3.823,0,0,0,.8,2.126A2.968,2.968,0,0,0,3.486,5.507c1.237,0,10.232,0,11.469,0a2.968,2.968,0,0,0,2.509-1.095,3.832,3.832,0,0,0,.8-2.126C18.3,1.738,18.441,0,18.441,0\",transform:\"translate(0.804 13.477)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.579V2.208A2.207,2.207,0,0,1,2.208,0H4.79A2.208,2.208,0,0,1,7,2.208v.371\",transform:\"translate(6.496 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,1.294V0\",transform:\"translate(9.495 13.384)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.058V6.525a16.327,16.327,0,0,0,6.738,2.5,2.58,2.58,0,0,1,4.985.01A16.326,16.326,0,0,0,18.49,6.525V3.058A3.051,3.051,0,0,0,15.433,0H3.067A3.059,3.059,0,0,0,0,3.058Z\",transform:\"translate(0.75 3.331)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.78,18.985a.751.751,0,0,1,.751-.751l6.2,0a2.219,2.219,0,0,0,1.932-.823,3.11,3.11,0,0,0,.633-1.693c.031-.553.185-2.3.185-2.3a.743.743,0,0,1,1.484.058c0,.023-.141,1.789-.173,2.334a4.569,4.569,0,0,1-.974,2.561,3.733,3.733,0,0,1-3.085,1.365l-6.2,0A.75.75,0,0,1,8.78,18.985Zm-4.52.748a3.73,3.73,0,0,1-3.086-1.366A4.557,4.557,0,0,1,.2,15.806C.168,15.262.027,13.5.027,13.473a.743.743,0,0,1,1.484-.057s.154,1.749.187,2.3a3.091,3.091,0,0,0,.631,1.692,2.217,2.217,0,0,0,1.933.824H5.4a.75.75,0,1,1,0,1.5Zm4.984-5.055V13.383a.75.75,0,0,1,1.5,0v1.294a.75.75,0,1,1-1.5,0Zm2.5-2.126A1.8,1.8,0,0,0,9.99,11.2a1.828,1.828,0,0,0-1.779,1.356.748.748,0,0,1-.716.554.763.763,0,0,1-.111-.008A17.148,17.148,0,0,1,.337,10.481.75.75,0,0,1,0,9.855V6.388A3.817,3.817,0,0,1,3.817,2.581H5.77A2.964,2.964,0,0,1,8.7,0h2.582A2.964,2.964,0,0,1,14.22,2.581h1.963A3.812,3.812,0,0,1,19.99,6.388V9.855a.752.752,0,0,1-.336.626,17.158,17.158,0,0,1-7.078,2.629.761.761,0,0,1-.1.006A.749.749,0,0,1,11.746,12.551Zm1.213-1.02A15.725,15.725,0,0,0,18.49,9.445V6.388a2.31,2.31,0,0,0-2.307-2.308H10a.75.75,0,1,1,0-1.5h2.7A1.462,1.462,0,0,0,11.286,1.5H8.7A1.46,1.46,0,0,0,7.245,2.958v.37a.748.748,0,0,1-.75.751l-2.678,0A2.315,2.315,0,0,0,1.5,6.388V9.445a15.673,15.673,0,0,0,5.511,2.078A3.336,3.336,0,0,1,9.99,9.7,3.288,3.288,0,0,1,12.959,11.532Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S.142,1.738.175,2.286a3.823,3.823,0,0,0,.8,2.126A2.968,2.968,0,0,0,3.486,5.507c1.237,0,10.232,0,11.469,0a2.968,2.968,0,0,0,2.509-1.095,3.832,3.832,0,0,0,.8-2.126C18.3,1.738,18.441,0,18.441,0\",transform:\"translate(0.804 13.477)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.579V2.208A2.207,2.207,0,0,1,2.208,0H4.79A2.208,2.208,0,0,1,7,2.208v.371\",transform:\"translate(6.496 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,1.294V0\",transform:\"translate(9.495 13.384)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.058V6.525a16.327,16.327,0,0,0,6.738,2.5,2.58,2.58,0,0,1,4.985.01A16.326,16.326,0,0,0,18.49,6.525V3.058A3.051,3.051,0,0,0,15.433,0H3.067A3.059,3.059,0,0,0,0,3.058Z\",transform:\"translate(0.75 3.331)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.75 2.45)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,2.628V0\",transform:\"translate(8.711 11.439)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.257,0l-.029.021a17.52,17.52,0,0,1-9.1,2.393A17.48,17.48,0,0,1,.03.021L0,0\",transform:\"translate(0.082 9.027)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,8.2C0,2.051,2.3,0,9.211,0s9.211,2.051,9.211,8.2-2.3,8.2-9.211,8.2S0,14.355,0,8.2Z\",transform:\"translate(0 2.697)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.525,2.919v-.63A2.184,2.184,0,0,0,4.465,0H2.06A2.184,2.184,0,0,0,0,2.289v.63\",transform:\"translate(5.949 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Bt.displayName=\"IconlyWork\",Bt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Gt=st(Bt),Jt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.6,18a.747.747,0,1,1,0-1.493h1.593a2.44,2.44,0,0,0,2.462-2.414v-3.56H16.032v.992a2.269,2.269,0,0,1-2.27,2.266H8.238a2.269,2.269,0,0,1-2.269-2.266v-.992H3.346V14.1A2.437,2.437,0,0,0,5.8,16.506H7.428a.747.747,0,1,1,0,1.493H5.8a3.946,3.946,0,0,1-3.974-3.9V10.534H.762a.746.746,0,1,1,0-1.492H21.239a.746.746,0,1,1,0,1.492H20.177v3.56A3.95,3.95,0,0,1,16.194,18ZM6.24,7.523a.278.278,0,0,1-.27-.269V6.008A2.268,2.268,0,0,1,8.239,3.743h5.524a2.26,2.26,0,0,1,2.27,2.265V7.254a.28.28,0,0,1-.273.269Zm12.415-1.76V3.906a2.44,2.44,0,0,0-2.461-2.413H14.6a.754.754,0,0,1-.761-.745A.755.755,0,0,1,14.6,0h1.593a3.948,3.948,0,0,1,3.983,3.906V5.763a.761.761,0,0,1-1.522,0Zm-16.831,0V3.9A3.945,3.945,0,0,1,5.8,0h1.63a.755.755,0,0,1,.761.747.753.753,0,0,1-.761.746H5.8A2.436,2.436,0,0,0,3.347,3.9V5.762a.762.762,0,0,1-1.524,0Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.415,7.523a.279.279,0,0,1-.27-.269V6.008a2.269,2.269,0,0,1,2.27-2.265h5.523a2.26,2.26,0,0,1,2.271,2.265V7.254a.281.281,0,0,1-.274.269Zm12.416-1.76V3.906A2.44,2.44,0,0,0,14.37,1.493H12.777a.754.754,0,0,1-.761-.745A.755.755,0,0,1,12.777,0H14.37a3.948,3.948,0,0,1,3.983,3.906V5.763a.761.761,0,0,1-1.522,0ZM0,5.762V3.9A3.945,3.945,0,0,1,3.974,0H5.6a.754.754,0,0,1,.76.747.753.753,0,0,1-.76.746H3.975A2.436,2.436,0,0,0,1.523,3.9V5.762a.755.755,0,0,1-.761.747A.755.755,0,0,1,0,5.762Z\",transform:\"translate(1.824 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M21.239,0H.762A.755.755,0,0,0,0,.747a.754.754,0,0,0,.762.745H1.823V5.056A3.946,3.946,0,0,0,5.8,8.958H7.427a.747.747,0,1,0,0-1.493H5.8A2.436,2.436,0,0,1,3.346,5.056V1.492H5.969v.991A2.269,2.269,0,0,0,8.238,4.75h5.524a2.269,2.269,0,0,0,2.27-2.266V1.492h2.623v3.56a2.44,2.44,0,0,1-2.461,2.413H14.6a.747.747,0,1,0,0,1.493h1.593a3.949,3.949,0,0,0,3.983-3.907V1.492h1.062A.753.753,0,0,0,22,.747.754.754,0,0,0,21.239,0\",transform:\"translate(0 9.041)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.5 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M21.132.524H0\",transform:\"translate(0 8.991)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.969,5.278V3.325A3.335,3.335,0,0,0,1.644,0H0\",transform:\"translate(14.281 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.278V3.321A3.32,3.32,0,0,1,3.317,0H5\",transform:\"translate(1.882 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.969,0V4.531A3.335,3.335,0,0,1,1.644,7.856H0\",transform:\"translate(14.281 9.514)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V4.535a3.32,3.32,0,0,0,3.317,3.32H5\",transform:\"translate(1.882 9.514)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.6,18a.747.747,0,1,1,0-1.493h1.593a2.44,2.44,0,0,0,2.462-2.414V10.535H3.346V14.1A2.437,2.437,0,0,0,5.8,16.506H7.428a.747.747,0,1,1,0,1.493H5.8a3.947,3.947,0,0,1-3.975-3.9V10.535H.761a.747.747,0,1,1,0-1.493H21.239a.747.747,0,1,1,0,1.493H20.177v3.559A3.95,3.95,0,0,1,16.194,18ZM9.142,14.267a.747.747,0,1,1,0-1.493h3.717a.747.747,0,1,1,0,1.493Zm0-7.757a.747.747,0,1,1,0-1.494h3.717a.747.747,0,1,1,0,1.494ZM1.823,5.762V3.9A3.945,3.945,0,0,1,5.8,0h1.63a.755.755,0,0,1,.761.747.753.753,0,0,1-.761.746H5.8A2.436,2.436,0,0,0,3.347,3.9V5.762a.762.762,0,0,1-1.524,0Zm16.832,0V3.906a2.441,2.441,0,0,0-2.462-2.413H14.6a.753.753,0,0,1-.76-.746A.753.753,0,0,1,14.6,0h1.593a3.949,3.949,0,0,1,3.983,3.905V5.763a.761.761,0,0,1-1.522,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.5 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M21.132.524H0\",transform:\"translate(0 8.991)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.969,5.278V3.325A3.335,3.335,0,0,0,1.644,0H0\",transform:\"translate(14.281 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.278V3.321A3.32,3.32,0,0,1,3.317,0H5\",transform:\"translate(1.882 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.969,0V4.531A3.335,3.335,0,0,1,1.644,7.856H0\",transform:\"translate(14.281 9.514)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V4.535a3.32,3.32,0,0,0,3.317,3.32H5\",transform:\"translate(1.882 9.514)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.45 2.95)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M21.132.5H0\",transform:\"translate(0 9.35)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.77C.57,2.29,2.29.57,5.77,0\",transform:\"translate(1.546 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.981,8.186C2.5,7.606.781,5.9.211,2.416v0A17.035,17.035,0,0,1,0,0\",transform:\"translate(1.335 9.854)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.979,0a17.183,17.183,0,0,1-.21,2.42l0,0C5.2,5.9,3.48,7.606,0,8.186\",transform:\"translate(13.816 9.854)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0C3.48.57,5.2,2.29,5.77,5.77\",transform:\"translate(13.816 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Jt.displayName=\"IconlyScan\",Jt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Yt=st(Jt),Qt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.4,20a5.469,5.469,0,0,1-3.976-1.428A5.474,5.474,0,0,1,0,14.6V7.2A5.5,5.5,0,0,1,1.425,3.215,5.455,5.455,0,0,1,5.4,1.78H13.45a4.858,4.858,0,0,0-.059.75A4.069,4.069,0,0,0,17.45,6.6a4.668,4.668,0,0,0,.74-.068V14.6a5.47,5.47,0,0,1-1.425,3.973A5.466,5.466,0,0,1,12.79,20ZM7.19,8.96a.781.781,0,0,0-.5.3L3.731,13.11l-.061.09a.747.747,0,0,0,.21.95.832.832,0,0,0,.46.15h.026A.715.715,0,0,0,4.93,14l2.51-3.231,2.849,2.141.09.058a.749.749,0,0,0,.95-.21l2.89-3.729-.04.02A.75.75,0,0,0,14.26,8.3a.736.736,0,0,0-.608-.439c-.028,0-.056,0-.084,0a.768.768,0,0,0-.617.314L10.531,11.3,7.76,9.121a.783.783,0,0,0-.481-.165C7.25,8.956,7.22,8.958,7.19,8.96Zm7.99-6.55a2.41,2.41,0,1,1,2.41,2.41A2.411,2.411,0,0,1,15.18,2.41Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.662,18H5.346A5.415,5.415,0,0,1,1.41,16.588,5.4,5.4,0,0,1,0,12.661V5.356A5.428,5.428,0,0,1,1.41,1.42,5.4,5.4,0,0,1,5.346,0h7.967a3.909,3.909,0,0,0-.07.738A4.029,4.029,0,0,0,17.27,4.759a4.142,4.142,0,0,0,.73-.07v7.972a5.405,5.405,0,0,1-1.409,3.927A5.4,5.4,0,0,1,12.662,18ZM7.222,7.079a.752.752,0,0,0-.1.006.741.741,0,0,0-.493.29L3.676,11.186a.728.728,0,0,0-.158.457.739.739,0,0,0,1.363.43l2.47-3.2,2.743,2.152a.747.747,0,0,0,.464.163.741.741,0,0,0,.592-.3l2.858-3.687V7.191a.75.75,0,0,0-.14-1.045.73.73,0,0,0-1.038.149L10.42,9.4,7.677,7.235A.742.742,0,0,0,7.222,7.079Z\",transform:\"translate(0 2)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"2.5\",cy:\"2.5\",r:\"2.5\",transform:\"translate(15)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.989,2.993,1.1,6.407,3.78,9.336,0\",transform:\"translate(5.245 8.293)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"1.922\",cy:\"1.922\",r:\"1.922\",transform:\"translate(16.073 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.146,0H4.879C1.867,0,0,2.133,0,5.144v8.082c0,3.011,1.831,5.135,4.879,5.135h8.6c3.011,0,4.879-2.124,4.879-5.135V6.188\",transform:\"translate(0.778 1.62)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.305,20a.741.741,0,0,1-.743-.732.751.751,0,0,1,.743-.741h2.952c2.925,0,4.542-1.6,4.568-4.532V7.522a.729.729,0,1,1,1.459,0v6.473c0,3.7-2.316,6-6.027,6ZM0,13.995v-7.2C0,3.078,2.307.776,6.018.776h6.505a.743.743,0,0,1,.733.741.734.734,0,0,1-.742.733h-6.5c-2.925,0-4.542,1.614-4.542,4.541v7.2c0,2.928,1.617,4.532,4.542,4.532a.75.75,0,0,1,.743.741A.741.741,0,0,1,6.018,20C2.307,20,0,17.7,0,13.995Zm4.648-.608a.741.741,0,0,1-.132-1.032L7.406,8.6a.745.745,0,0,1,1.043-.132l2.713,2.126,2.387-3.043A.733.733,0,0,1,14.7,8.43l-2.828,3.642a.789.789,0,0,1-.5.282.742.742,0,0,1-.539-.158L8.122,10.071,5.683,13.236a.737.737,0,0,1-.592.3A.737.737,0,0,1,4.648,13.387ZM14.8,2.6a2.6,2.6,0,1,1,2.6,2.583A2.585,2.585,0,0,1,14.8,2.6Zm1.476,0A1.122,1.122,0,1,0,17.4,1.481,1.122,1.122,0,0,0,16.279,2.6Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.989,2.993,1.1,6.407,3.78,9.336,0\",transform:\"translate(5.245 8.293)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"1.922\",cy:\"1.922\",r:\"1.922\",transform:\"translate(16.073 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.146,0H4.879C1.867,0,0,2.133,0,5.144v8.082c0,3.011,1.831,5.135,4.879,5.135h8.6c3.011,0,4.879-2.124,4.879-5.135V6.188\",transform:\"translate(0.778 1.62)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.45 2.35)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.989,2.993,1.1,6.407,3.78,9.336,0\",transform:\"translate(4.468 7.515)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.922,0A1.922,1.922,0,1,1,0,1.922,1.921,1.921,0,0,1,1.922,0Z\",transform:\"translate(15.296 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.306,6.216A20.809,20.809,0,0,1,18.5,9.25c0,6.938-2.312,9.25-9.25,9.25S0,16.188,0,9.25,2.313,0,9.25,0a20.931,20.931,0,0,1,2.983.187\",transform:\"translate(0 0.703)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Qt.displayName=\"IconlyActivity\",Qt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Kt=st(Qt),Xt=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.152,20H5.141A5.152,5.152,0,0,1,1.4,18.619,5.139,5.139,0,0,1,.011,14.88L0,6.553a5.089,5.089,0,0,1,1.219-3.5A4.939,4.939,0,0,1,4.506,1.53V.78a.773.773,0,0,1,.22-.553.766.766,0,0,1,1.3.552v.7l5.865-.008V.77a.77.77,0,0,1,.218-.552.766.766,0,0,1,1.3.55v.75a4.966,4.966,0,0,1,3.321,1.487A4.993,4.993,0,0,1,17.989,6.49L18,14.916c0,3.125-1.961,5.07-5.128,5.074Zm7.891-5.808a.833.833,0,0,0-.809.851.83.83,0,1,0,.819-.851Zm-8.126,0h0a.851.851,0,0,0-.808.86.823.823,0,0,0,.811.8h.039a.809.809,0,0,0,.565-.265.821.821,0,0,0,.215-.6.813.813,0,0,0-.819-.8Zm4.068-.005h0a.855.855,0,0,0-.808.861.823.823,0,0,0,.814.8h.036a.823.823,0,0,0,.779-.861.813.813,0,0,0-.819-.8ZM4.912,10.594h0a.851.851,0,0,0-.808.86.821.821,0,0,0,.812.8h.039a.806.806,0,0,0,.563-.265.823.823,0,0,0,.214-.6.812.812,0,0,0-.818-.8Zm4.069-.035h0a.851.851,0,0,0-.809.86.823.823,0,0,0,.815.8h.036a.825.825,0,0,0,.778-.861.813.813,0,0,0-.818-.8Zm4.07.006h0a.826.826,0,0,0-.808.839v.012a.813.813,0,0,0,.821.8h.019a.825.825,0,0,0-.028-1.649ZM4.508,3.058c-1.985.2-2.991,1.375-2.988,3.493l0,.311,14.948-.02v-.35C16.428,4.379,15.4,3.22,13.414,3.047v.77a.764.764,0,0,1-1.3.547.773.773,0,0,1-.217-.545V3.01l-5.865.008,0,.808a.765.765,0,0,1-1.3.547.773.773,0,0,1-.217-.546v-.77Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.127,12.743A4.776,4.776,0,0,1,0,7.613V0H18V7.674c0,3.138-1.976,5.069-5.137,5.069Z\",transform:\"translate(0 7.257)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.767A15.855,15.855,0,0,1,.155,3.64,4.591,4.591,0,0,1,4.541,0h8.911a4.639,4.639,0,0,1,4.386,3.64,15.892,15.892,0,0,1,.154,2.127Z\",transform:\"translate(0.003 1.49)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.761,4.59a.747.747,0,0,0,.761-.77V.771A.748.748,0,0,0,.761,0,.748.748,0,0,0,0,.771V3.82a.747.747,0,0,0,.761.77\",transform:\"translate(4.544 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.761,4.59a.753.753,0,0,0,.761-.77V.771A.754.754,0,0,0,.761,0,.748.748,0,0,0,0,.771V3.82a.747.747,0,0,0,.761.77\",transform:\"translate(11.934 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.473H17.824\",transform:\"translate(0.093 6.931)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(12.984 10.837)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(8.546 10.837)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(4.099 10.837)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(12.984 14.723)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(8.546 14.723)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.459.473H.468\",transform:\"translate(4.099 14.723)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.463,0V3.291\",transform:\"translate(12.581 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.463,0V3.291\",transform:\"translate(4.502 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.238,0H4.771C1.834,0,0,1.636,0,4.643v9.05c0,3.054,1.834,4.728,4.771,4.728h8.458c2.946,0,4.771-1.645,4.771-4.652V4.643C18.009,1.636,16.184,0,13.238,0Z\",transform:\"translate(0 1.579)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.626,20C1.9,20,0,18.311,0,14.985V6.715A4.542,4.542,0,0,1,2.07,2.469.685.685,0,0,1,2.8,2.442a.713.713,0,0,1-.071,1.265A3.143,3.143,0,0,0,1.374,6.715V6.98H14.061a.7.7,0,0,1,0,1.4H1.374v6.608c0,2.538,1.235,3.591,4.252,3.609h6.748c2.974,0,4.243-1.079,4.243-3.618V6.706c0-2.211-.966-3.282-3.165-3.539v.672a.694.694,0,0,1-1.382-.053V.673a.7.7,0,0,1,.222-.49.677.677,0,0,1,.5-.183.712.712,0,0,1,.661.734V1.77C16.461,2.062,18,3.725,18,6.715v8.27C18,18.311,16.1,20,12.374,20Zm6.7-4.918a.877.877,0,0,1,.869-.885h-.009a.863.863,0,0,1,.621.256.894.894,0,0,1,.257.629.87.87,0,1,1-1.739,0Zm-4.174,0a.87.87,0,1,1,.869.885A.877.877,0,0,1,8.148,15.082Zm-4.165,0a.877.877,0,0,1,.869-.885H4.844a.861.861,0,0,1,.62.256.89.89,0,0,1,.257.629.87.87,0,1,1-1.739,0ZM12.322,11.5a.877.877,0,0,1,.869-.884h-.009a.859.859,0,0,1,.621.256.893.893,0,0,1,.257.628.87.87,0,1,1-1.739,0Zm-4.174,0a.87.87,0,1,1,.869.885A.877.877,0,0,1,8.148,11.5Zm-4.165,0a.877.877,0,0,1,.869-.884H4.844a.857.857,0,0,1,.62.256.889.889,0,0,1,.257.628.87.87,0,1,1-1.739,0Zm1.235-7a.694.694,0,0,1-.67-.708V.735a.694.694,0,0,1,1.382,0V1.7H9.861a.7.7,0,0,1,0,1.4H5.913v.7a.706.706,0,0,1-.2.5.683.683,0,0,1-.485.2Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.473H17.824\",transform:\"translate(0.093 6.931)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.343,4.36h.009Zm-4.438,0h.01Zm-4.446,0H.468ZM9.343.473h.009Zm-4.438,0h.01ZM.459.473H.468Z\",transform:\"translate(4.099 10.837)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.463,0V3.291\",transform:\"translate(12.581 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.463,0V3.291\",transform:\"translate(4.502 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.238,0H4.771C1.834,0,0,1.636,0,4.643v9.05c0,3.054,1.834,4.728,4.771,4.728h8.458c2.946,0,4.771-1.645,4.771-4.652V4.643C18.009,1.636,16.184,0,13.238,0Z\",transform:\"translate(0 1.579)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.75 2.05)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.274C0,2.318,2.319,0,9.274,0s9.275,2.318,9.275,9.274-2.319,9.274-9.275,9.274S0,16.23,0,9.274Z\",transform:\"translate(0 1.452)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H18.008\",transform:\"translate(0.275 6.774)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(13.183 10.711)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(8.784 10.711)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(4.376 10.711)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(13.183 14.563)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(8.784 14.563)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(4.376 14.563)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V3.262\",transform:\"translate(12.783 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V3.262\",transform:\"translate(4.775 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Xt.displayName=\"IconlyCalendar\",Xt.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var tr=st(Xt),rr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.939,18H5.06A5.061,5.061,0,0,1,0,12.95V5.05A5.061,5.061,0,0,1,5.06,0h9.879a5.091,5.091,0,0,1,3.58,1.481A5.012,5.012,0,0,1,20,5.05v7.9A5.061,5.061,0,0,1,14.939,18ZM4.034,5.246A.733.733,0,0,0,3.5,5.47a.764.764,0,0,0-.071,1l.131.13L8.11,10.15a3.129,3.129,0,0,0,1.95.68,3.18,3.18,0,0,0,1.958-.68L16.53,6.54l.08-.08a.774.774,0,0,0-.012-1,.831.831,0,0,0-.528-.26h-.042a.76.76,0,0,0-.519.2L11,9a1.565,1.565,0,0,1-1,.36A1.592,1.592,0,0,1,9,9L4.5,5.4A.778.778,0,0,0,4.034,5.246Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,7.143a5.047,5.047,0,0,1-5.03,5.06H5.05A5.047,5.047,0,0,1,0,7.163v-.01S.006,2.727.014.5A.5.5,0,0,1,.822.109C3.2,1.994,7.447,5.431,7.5,5.476a4.067,4.067,0,0,0,2.53.89,4.013,4.013,0,0,0,2.53-.9C12.613,5.43,16.767,2.1,19.179.18a.5.5,0,0,1,.811.39C20,2.779,20,7.143,20,7.143\",transform:\"translate(2 8.797)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.973,2.674A5.035,5.035,0,0,0,14.527,0H4.547A5.035,5.035,0,0,0,.1,2.674.864.864,0,0,0,.322,3.752L7.747,9.691a2.826,2.826,0,0,0,1.78.629h.02a2.826,2.826,0,0,0,1.78-.629l7.425-5.939a.864.864,0,0,0,.221-1.078\",transform:\"translate(2.503 3)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.314,0,7.048,3.434a2.223,2.223,0,0,1-2.746,0L0,0\",transform:\"translate(3.954 5.561)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.888,0h9.428A4.957,4.957,0,0,1,17.9,1.59a5.017,5.017,0,0,1,1.326,3.7v6.528a5.017,5.017,0,0,1-1.326,3.7,4.957,4.957,0,0,1-3.58,1.59H4.888C1.968,17.116,0,14.741,0,11.822V5.294C0,2.375,1.968,0,4.888,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.8,18A5.832,5.832,0,0,1,0,12.155V5.845A5.824,5.824,0,0,1,5.8,0h8.4A5.842,5.842,0,0,1,20,5.845V7.307a.71.71,0,0,1-.707.713L19.283,8a.705.705,0,0,1-.5-.209.716.716,0,0,1-.207-.5V5.845A4.439,4.439,0,0,0,14.2,1.435H5.8A4.44,4.44,0,0,0,1.424,5.845v6.309A4.44,4.44,0,0,0,5.8,16.565h8.4a4.439,4.439,0,0,0,4.378-4.411.716.716,0,0,1,1.424,0A5.842,5.842,0,0,1,14.2,18ZM8.05,9.98,3.928,6.656a.725.725,0,0,1-.106-1.007.7.7,0,0,1,.991-.107L8.969,8.858a1.425,1.425,0,0,0,1.769,0l4.113-3.316h.009a.711.711,0,1,1,.885,1.114L11.632,9.98a2.84,2.84,0,0,1-3.582,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.314,0,7.048,3.434a2.223,2.223,0,0,1-2.746,0L0,0\",transform:\"translate(3.954 5.561)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.888,0h9.428A4.957,4.957,0,0,1,17.9,1.59a5.017,5.017,0,0,1,1.326,3.7v6.528a5.017,5.017,0,0,1-1.326,3.7,4.957,4.957,0,0,1-3.58,1.59H4.888C1.968,17.116,0,14.741,0,11.822V5.294C0,2.375,1.968,0,4.888,0Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.452 2.852)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.151,0S7.941,3.853,5.593,3.853,0,0,0,0\",transform:\"translate(3.942 6.167)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.117C0,2.279,2.381,0,9.524,0s9.524,2.279,9.524,9.117-2.381,9.117-9.524,9.117S0,15.954,0,9.117Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};rr.displayName=\"IconlyMessage\",rr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var nr=st(rr),er=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.113,15A3.91,3.91,0,0,1,0,10.939V4.061A3.91,3.91,0,0,1,4.113,0H9.905a3.91,3.91,0,0,1,4.113,4.061v6.879A3.91,3.91,0,0,1,9.905,15Zm13.844-2.38-1.48-.747a1.624,1.624,0,0,1-.888-1.457V4.583a1.618,1.618,0,0,1,.888-1.455l1.481-.749a1.384,1.384,0,0,1,1.373.064A1.432,1.432,0,0,1,20,3.662v7.676a1.43,1.43,0,0,1-.669,1.219,1.4,1.4,0,0,1-.743.216A1.384,1.384,0,0,1,17.957,12.621Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.743.216A1.383,1.383,0,0,0,2.37.152L.888.9A1.618,1.618,0,0,0,0,2.356V8.19A1.622,1.622,0,0,0,.888,9.647l1.481.747A1.372,1.372,0,0,0,3,10.547a1.4,1.4,0,0,0,.743-.216,1.429,1.429,0,0,0,.669-1.218V1.435A1.432,1.432,0,0,0,3.743.216\",transform:\"translate(15.588 2.226)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.905,15H4.113A3.91,3.91,0,0,1,0,10.939V4.061A3.91,3.91,0,0,1,4.113,0H9.905a3.91,3.91,0,0,1,4.113,4.061v6.878A3.91,3.91,0,0,1,9.905,15\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.8 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.266,10.37a3.272,3.272,0,0,1-3.53,3.4H3.519A3.265,3.265,0,0,1,0,10.37V3.41A3.275,3.275,0,0,1,3.53,0H9.736a3.28,3.28,0,0,1,3.53,3.41Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.582,4.1.228a1,1,0,0,1,1.637.777V7.877A1,1,0,0,1,4.1,8.654L0,5.3\",transform:\"translate(14.016 3.194)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.02,2.569a1.686,1.686,0,0,0-1.813.223l-1.575,1.3a.741.741,0,0,0-.1,1.037.73.73,0,0,0,1.03.1l1.575-1.3a.234.234,0,0,1,.259-.031.241.241,0,0,1,.142.226v6.749a.241.241,0,0,1-.142.226.234.234,0,0,1-.26-.031L14.406,7.995V4.087A3.953,3.953,0,0,0,10.23,0H4.176A3.953,3.953,0,0,0,0,4.087v6.836A3.944,3.944,0,0,0,4.166,15a.737.737,0,0,0,0-1.473,2.462,2.462,0,0,1-2.7-2.6V4.087A2.471,2.471,0,0,1,4.176,1.473H10.23a2.471,2.471,0,0,1,2.712,2.614v6.836a2.467,2.467,0,0,1-2.712,2.6H8.543a.737.737,0,0,0,0,1.473H10.23a3.949,3.949,0,0,0,4.176-4.076V9.9l2.8,2.309a1.684,1.684,0,0,0,1.076.391A1.721,1.721,0,0,0,20,10.875V4.125a1.709,1.709,0,0,0-.98-1.557\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.8 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.582,4.1.228a1,1,0,0,1,1.637.777V7.877A1,1,0,0,1,4.1,8.654L0,5.3\",transform:\"translate(14.016 3.194)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.266,10.37a3.272,3.272,0,0,1-3.53,3.4H3.519A3.265,3.265,0,0,1,0,10.37V3.41A3.275,3.275,0,0,1,3.53,0H9.736a3.28,3.28,0,0,1,3.53,3.41Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.514 5.114)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.466C1.838,1.009,4.3-.4,4.771.1c.771.829.7,8.714,0,9.467-.429.467-2.914-.943-4.771-2.39\",transform:\"translate(13.637 2.092)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.923C0,1.73,1.725,0,6.9,0s6.9,1.73,6.9,6.923-1.725,6.923-6.9,6.923S0,12.114,0,6.923Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};er.displayName=\"IconlyVideo\",er.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var or=st(er),ar=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.67,20H5.33a5.349,5.349,0,0,1-3.944-1.394A5.356,5.356,0,0,1,0,14.67V5.33A5.358,5.358,0,0,1,1.386,1.386,5.358,5.358,0,0,1,5.33,0h9.33a5.372,5.372,0,0,1,3.945,1.386A5.345,5.345,0,0,1,20,5.33v9.34C20,18.057,18.057,20,14.67,20ZM6.33,9.16a.819.819,0,0,0-.83.83.839.839,0,0,0,.83.84H9.16V13.66a.83.83,0,1,0,1.66,0V10.83h2.84a.835.835,0,0,0,0-1.669H10.82V6.34a.83.83,0,1,0-1.66,0V9.16Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.667,0H5.333C1.929,0,0,1.929,0,5.333v9.333C0,18.062,1.92,20,5.333,20h9.333C18.071,20,20,18.062,20,14.667V5.333C20,1.929,18.071,0,14.667,0Z\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.32,4.708H4.75V7.257a.75.75,0,0,1-1.5,0V4.708H.68a.75.75,0,0,1,0-1.494H3.242V.674a.758.758,0,0,1,1.507,0V3.214H7.32a.75.75,0,0,1,0,1.494Z\",transform:\"translate(6 6)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V7.326\",transform:\"translate(9.524 6.327)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.333.476H0\",transform:\"translate(6.333 9.515)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.765.756V9.56a.764.764,0,0,1-.765-.765V6.253C18.47,3.2,16.8,1.53,13.756,1.53h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,1,1,1.53,0C20,17.608,17.608,20,13.756,20Zm3.765-5.857a.774.774,0,0,1-.739-.792v-.967a.765.765,0,1,1,1.53.053V13.4a.764.764,0,0,1-.764.739Zm3.4-3.588H6.658a.817.817,0,0,1-.792-.774.756.756,0,0,1,.757-.765H9.261v-2.4a.783.783,0,0,1,.774-.765.758.758,0,0,1,.225.034.766.766,0,0,1,.567.74V9.015h2.6a.772.772,0,0,1,.792.774.766.766,0,0,1-.748.765Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V7.326\",transform:\"translate(9.524 6.327)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.333.476H0\",transform:\"translate(6.333 9.515)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.3 2.3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.526,0V7.148\",transform:\"translate(9.211 6.163)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.156.526H0\",transform:\"translate(6.159 9.211)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.737C0,2.435,2.435,0,9.737,0s9.737,2.435,9.737,9.737-2.435,9.737-9.737,9.737S0,17.039,0,9.737Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ar.displayName=\"IconlyPlus\",ar.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var sr=st(ar),ir=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.669,20H5.33a5.352,5.352,0,0,1-3.94-1.39A5.353,5.353,0,0,1,0,14.67V5.33a5.353,5.353,0,0,1,1.389-3.94A5.353,5.353,0,0,1,5.33,0h9.339a5.345,5.345,0,0,1,3.937,1.389A5.38,5.38,0,0,1,20,5.33v9.34a5.352,5.352,0,0,1-1.39,3.94A5.354,5.354,0,0,1,14.669,20Zm-.02-9.087a.865.865,0,0,0-.449.128.807.807,0,0,0-.38.789v3.28a.826.826,0,0,0,.83.75.843.843,0,0,0,.83-.75V11.83a.839.839,0,0,0-.391-.789A.823.823,0,0,0,14.649,10.913ZM10.051,4a.823.823,0,0,0-.44.128.847.847,0,0,0-.392.79V15.11a.843.843,0,0,0,.831.75.827.827,0,0,0,.83-.75V4.92a.816.816,0,0,0-.379-.79A.872.872,0,0,0,10.051,4ZM5.39,7.282a.822.822,0,0,0-.44.128.843.843,0,0,0-.39.79v6.91a.834.834,0,0,0,1.659,0V8.2a.845.845,0,0,0-.389-.79A.825.825,0,0,0,5.39,7.282Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.676,0H5.333C1.929,0,0,1.929,0,5.333v9.333C0,18.071,1.929,20,5.333,20h9.342C18.08,20,20,18.071,20,14.667V5.333C20,1.929,18.08,0,14.676,0\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.827,0A.833.833,0,0,0,0,.836V7.707a.831.831,0,0,0,1.662,0V.836A.835.835,0,0,0,.827,0\",transform:\"translate(4.542 7.369)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.827,0A.833.833,0,0,0,0,.836V10.987a.831.831,0,0,0,1.662,0V.836A.835.835,0,0,0,.827,0\",transform:\"translate(9.209 4.089)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.836,0A.835.835,0,0,0,0,.836V4.08a.831.831,0,0,0,1.662,0V.836A.833.833,0,0,0,.836,0\",transform:\"translate(13.804 10.996)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V6.86\",transform:\"translate(4.895 8.202)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V10.143\",transform:\"translate(9.562 4.919)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V3.235\",transform:\"translate(14.152 11.827)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.493C17.59,0,20,2.392,20,6.253V8.575a.764.764,0,0,1-.765.765h-.009a.756.756,0,0,1-.756-.774V6.253c0-3.043-1.68-4.723-4.723-4.723H6.253C3.2,1.53,1.53,3.21,1.53,6.253v7.5c0,3.043,1.68,4.714,4.723,4.714h7.493c3.052,0,4.723-1.68,4.723-4.714a.765.765,0,1,1,1.53,0C20,17.608,17.608,20,13.756,20ZM5.7,15.479a.765.765,0,0,1-.738-.791v-6.4a.757.757,0,0,1,.791-.731.766.766,0,0,1,.739.792V14.74a.765.765,0,0,1-.765.739ZM9.27,14.7V5.321a.765.765,0,1,1,1.53,0V14.7a.765.765,0,1,1-1.53,0Zm4.239-.009V11.7a.765.765,0,0,1,1.531,0v2.991a.765.765,0,0,1-1.531,0ZM9.27,5.277v.044Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V6.86\",transform:\"translate(4.895 8.202)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V10.143\",transform:\"translate(9.562 4.919)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,0V3.235\",transform:\"translate(14.152 11.827)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.686,0H5.314C2.048,0,0,2.312,0,5.585v8.83C0,17.688,2.038,20,5.314,20h9.371C17.962,20,20,17.688,20,14.415V5.585C20,2.312,17.962,0,14.686,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.3 2.3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.526,0V6.694\",transform:\"translate(4.657 7.961)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.526,0V9.9\",transform:\"translate(9.211 4.757)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.526,0V3.157\",transform:\"translate(13.689 11.498)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.737C0,2.435,2.435,0,9.737,0s9.737,2.435,9.737,9.737-2.435,9.737-9.737,9.737S0,17.039,0,9.737Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ir.displayName=\"IconlyChart\",ir.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var lr=st(ir),ur=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.01,20c-1.6,0-2.909-.012-4.122-.039A5.643,5.643,0,0,1,0,14.181V9.875A5.648,5.648,0,0,1,5.9,4.094C7.1,4.076,8.47,4.056,9.833,4.056V3.892a1.217,1.217,0,0,0-1.227-1.2H7.635A1.991,1.991,0,0,1,5.623.723.739.739,0,0,1,6.359,0,.73.73,0,0,1,7.1.723a.531.531,0,0,0,.539.52h.972a2.7,2.7,0,0,1,2.7,2.64v.183c.6,0,1.213.008,1.8.016l1,.012A5.644,5.644,0,0,1,20,9.875v4.307a5.643,5.643,0,0,1-5.888,5.78C12.9,19.987,11.6,20,10.01,20Zm-4.7-8.7a.739.739,0,0,0-.736.723.73.73,0,0,0,.736.723h1.04v1.021a.73.73,0,0,0,.736.722.738.738,0,0,0,.735-.722V12.746h1.03a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.723H7.821V10.289a.736.736,0,0,0-1.472,0V11.3ZM14.7,12.986a.73.73,0,0,0-.736.723.722.722,0,0,0,.736.723h.1a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.723ZM13.023,9.672a.73.73,0,0,0-.736.723.722.722,0,0,0,.736.723h.1a.723.723,0,1,0,0-1.445Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.682,3.882v.183c-.491-.01-.981-.01-1.472-.01V3.892a1.222,1.222,0,0,0-1.227-1.2H2.012A1.994,1.994,0,0,1,0,.723.735.735,0,0,1,.736,0a.728.728,0,0,1,.736.723.532.532,0,0,0,.54.52h.972a2.7,2.7,0,0,1,2.7,2.64\",transform:\"translate(5.623 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.01,15.944c-1.54,0-2.888-.013-4.122-.039A5.644,5.644,0,0,1,0,10.125V5.819A5.648,5.648,0,0,1,5.9.039C7.223.018,8.521,0,9.833,0c.482,0,.981,0,1.472.01.629,0,1.27.009,1.889.017l.918.012A5.643,5.643,0,0,1,20,5.819v4.306a5.644,5.644,0,0,1-5.888,5.781C12.878,15.932,11.536,15.944,10.01,15.944Zm-4.7-8.7a.739.739,0,0,0-.736.722.73.73,0,0,0,.736.723h1.04V9.711a.736.736,0,0,0,1.472,0V8.69h1.03a.73.73,0,0,0,.736-.723.739.739,0,0,0-.736-.722H7.821V6.233a.736.736,0,0,0-1.472,0V7.245ZM14.7,8.931a.73.73,0,0,0-.736.723.721.721,0,0,0,.736.722h.1a.73.73,0,0,0,.736-.722.739.739,0,0,0-.736-.723ZM13.023,5.617a.73.73,0,0,0-.736.722.722.722,0,0,0,.736.723h.1a.73.73,0,0,0,.735-.723.738.738,0,0,0-.735-.722Z\",transform:\"translate(0 4.056)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.53,0V3.745\",transform:\"translate(6.318 10.314)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.821.519H0\",transform:\"translate(4.938 11.667)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.583.519H.476\",transform:\"translate(12.783 9.909)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.583.519H.476\",transform:\"translate(14.596 13.483)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H0A1.355,1.355,0,0,0,1.368,1.341H2.424A2.1,2.1,0,0,1,4.54,3.413v.675\",transform:\"translate(6.072 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.428,15.589q-4.508.076-8.856,0A5.34,5.34,0,0,1,0,10.138V5.488A5.34,5.34,0,0,1,5.573.037q4.374-.075,8.856,0A5.34,5.34,0,0,1,20,5.488v4.65A5.339,5.339,0,0,1,14.428,15.589Z\",transform:\"translate(0 4.373)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.871,19.962A5.646,5.646,0,0,1,.005,14.55C0,14.426,0,14.3,0,14.18V9.87A5.668,5.668,0,0,1,5.541,4.1c.122,0,.246,0,.371.005H9.871v-.23A1.255,1.255,0,0,0,8.617,2.643h-1a2.058,2.058,0,0,1-1.383-.562A1.948,1.948,0,0,1,5.649.7.7.7,0,0,1,6.34,0h.008a.7.7,0,0,1,.7.691.552.552,0,0,0,.169.4.558.558,0,0,0,.391.161H8.621a2.656,2.656,0,0,1,2.646,2.616V4.8a.7.7,0,0,1-.7.7H5.882c-.122,0-.216-.006-.308,0A4.273,4.273,0,0,0,1.4,9.854v4.34c0,.109,0,.2,0,.3a4.262,4.262,0,0,0,4.452,4.077c2.718.046,5.481.046,8.256,0,.134,0,.228.006.321,0A4.268,4.268,0,0,0,18.6,14.209V9.87c0-.111,0-.2,0-.3A4.265,4.265,0,0,0,14.128,5.5.7.7,0,0,1,14.11,4.1,5.744,5.744,0,0,1,20,9.516c.005.124.006.248,0,.372v4.306a5.661,5.661,0,0,1-5.537,5.771c-.122,0-.247,0-.372,0-1.378.025-2.763.036-4.142.036S7.212,19.986,5.871,19.962Zm1.205-5.474a.759.759,0,0,1-.753-.756v-1H5.314a.763.763,0,0,1-.728-.35.752.752,0,0,1,0-.8.763.763,0,0,1,.728-.35H6.323v-.994a.762.762,0,0,1,1.524,0v.994H8.855a.763.763,0,0,1,.728.35.752.752,0,0,1,0,.8.763.763,0,0,1-.728.35H7.846v1a.769.769,0,0,1-.762.756Zm7.1-.247a.744.744,0,0,1,0-1.055.766.766,0,0,1,.823-.167.964.964,0,0,1,.248.167.744.744,0,0,1-.005,1.055.758.758,0,0,1-1.062,0Zm-1.7-3.341a.725.725,0,0,1,0-1.064.68.68,0,0,1,.239-.167.745.745,0,0,1,.567,0,.9.9,0,0,1,.257.167.764.764,0,0,1,.168.818.61.61,0,0,1-.168.246.772.772,0,0,1-1.062,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.53,0V3.745\",transform:\"translate(6.318 10.314)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.821.519H0\",transform:\"translate(4.938 11.667)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.583.519H.476\",transform:\"translate(12.783 9.909)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.583.519H.476\",transform:\"translate(14.596 13.483)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H0A1.355,1.355,0,0,0,1.368,1.341H2.424A2.1,2.1,0,0,1,4.54,3.413v.675\",transform:\"translate(6.072 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.428,15.589q-4.508.076-8.856,0A5.34,5.34,0,0,1,0,10.138V5.488A5.34,5.34,0,0,1,5.573.037q4.374-.075,8.856,0A5.34,5.34,0,0,1,20,5.488v4.65A5.339,5.339,0,0,1,14.428,15.589Z\",transform:\"translate(0 4.373)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.977)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.477,0V3.575\",transform:\"translate(6.777 10.085)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.648.477H0\",transform:\"translate(5.432 11.395)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.528.477h-.1\",transform:\"translate(12.949 9.716)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.528.477h-.1\",transform:\"translate(14.68 13.128)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H0A1.293,1.293,0,0,0,1.306,1.28H2.314a2.005,2.005,0,0,1,2.02,1.978V4.265\",transform:\"translate(6.514 0.239)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.1,7.414C19.1,1.854,16.709,0,9.549,0S0,1.854,0,7.414s2.387,7.414,9.549,7.414S19.1,12.975,19.1,7.414Z\",transform:\"translate(0.716 4.504)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ur.displayName=\"IconlyGame\",ur.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var dr=st(ur),kr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.159,20H4.868c-1.88,0-3.175-.438-3.958-1.338C.091,17.72-.172,16.3.105,14.314L.883,8.12A4.081,4.081,0,0,1,2.076,5.708,2.736,2.736,0,0,1,3.932,5H4.01a.679.679,0,0,1,0-.226,5,5,0,0,1,9.991,0h-.026A.517.517,0,0,1,13.93,5h.157a2.668,2.668,0,0,1,1.827.731,4.388,4.388,0,0,1,1.23,2.389l.769,6.195a5.133,5.133,0,0,1-.906,4.23A4.914,4.914,0,0,1,13.159,20ZM11.885,8.33a.91.91,0,1,0,.884.909A.9.9,0,0,0,11.885,8.33ZM6.1,8.33a.91.91,0,1,0,.884.909A.9.9,0,0,0,6.1,8.33ZM8.966,1.3A3.482,3.482,0,0,0,5.482,4.774a.633.633,0,0,1,0,.226h7.011a.653.653,0,0,1-.043-.226A3.482,3.482,0,0,0,8.966,1.3Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.159,15H4.868c-1.88,0-3.175-.438-3.958-1.339C.091,12.72-.172,11.3.105,9.315L.883,3.12A4.083,4.083,0,0,1,2.076.707,2.736,2.736,0,0,1,3.932,0H14.087a2.667,2.667,0,0,1,1.827.731,4.391,4.391,0,0,1,1.23,2.389l.769,6.195a5.132,5.132,0,0,1-.906,4.23A4.914,4.914,0,0,1,13.159,15ZM11.885,3.329a.91.91,0,1,0,.884.91A.9.9,0,0,0,11.885,3.329Zm-5.789,0a.91.91,0,1,0,.884.91A.9.9,0,0,0,6.1,3.329Z\",transform:\"translate(0 5)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.974,4.774A.5.5,0,0,1,9.93,5H8.493a.649.649,0,0,1-.044-.226,3.484,3.484,0,0,0-6.968,0,.649.649,0,0,1,0,.226H.01a.649.649,0,0,1,0-.226,5,5,0,0,1,9.99,0Z\",transform:\"translate(4)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.213,14.682H4.865C1.8,14.682-.554,13.574.114,9.117L.892,3.076C1.3.851,2.723,0,3.968,0H14.146c1.263,0,2.6.915,3.076,3.076L18,9.117C18.567,13.071,16.279,14.682,13.213,14.682Z\",transform:\"translate(0.801 5.318)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.659,4.32A4.32,4.32,0,0,0,4.339,0h0A4.32,4.32,0,0,0,0,4.32H0\",transform:\"translate(5.492 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.481.458H.435\",transform:\"translate(12.316 9.144)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.481.458H.435\",transform:\"translate(6.485 9.144)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,18.287A4.93,4.93,0,0,1,.183,13.739a.768.768,0,1,1,1.52.22,4.064,4.064,0,0,0,.659,3.323,4.2,4.2,0,0,0,3.172,1.142h8.012c1.59,0,2.688-.334,3.259-1.028a4.4,4.4,0,0,0,.572-3.437l-.747-5.81c-.264-1.407-1.081-2.286-2.187-2.286h-9.8c-1.054,0-1.871.879-2.2,2.347L2.23,9.5A.773.773,0,0,1,.71,9.238L.93,7.919c.58-2.681,2.293-3.56,3.707-3.56h8.24a3.438,3.438,0,0,0-1.089-2.021A3.372,3.372,0,0,0,7.026,2.6v.088A.774.774,0,0,1,5.893,1.634a4.919,4.919,0,0,1,8.548,2.724c1.475,0,3.224.879,3.707,3.516l.755,5.872a5.789,5.789,0,0,1-.967,4.659c-.878,1.046-2.318,1.556-4.392,1.556h-8A4.924,4.924,0,0,1,1.2,18.287Zm10.813-8.258a.881.881,0,0,1-.387-.483.735.735,0,0,1-.061-.334.58.58,0,0,1,0-.176V8.869l.087-.149a.388.388,0,0,1,.106-.132l.131-.114a.686.686,0,0,1,.158-.079.6.6,0,0,1,.167-.052.761.761,0,0,1,.343,0,1.12,1.12,0,0,1,.325.131,1.259,1.259,0,0,1,.238.247.346.346,0,0,1,.078.149.522.522,0,0,1,.053.167.58.58,0,0,1,0,.176.738.738,0,0,1-.07.334.7.7,0,0,1-.211.29.882.882,0,0,1-.616.264A1.063,1.063,0,0,1,12.008,10.029ZM6.166,9.835a.871.871,0,0,1-.194-.29.883.883,0,0,1-.062-.334.58.58,0,0,1,0-.176.522.522,0,0,1,.053-.167.5.5,0,0,1,.079-.149.4.4,0,0,1,.105-.132.593.593,0,0,1,.131-.105A.5.5,0,0,1,6.429,8.4.543.543,0,0,1,6.6,8.349a.761.761,0,0,1,.343,0,.545.545,0,0,1,.167.053.5.5,0,0,1,.149.079A.592.592,0,0,1,7.4,8.6a.4.4,0,0,1,.105.131.865.865,0,0,1,.088.15l.052.166a.953.953,0,0,1,0,.176.857.857,0,0,1-1.475.616Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.213,14.682H4.865C1.8,14.682-.554,13.574.114,9.117L.892,3.076C1.3.851,2.723,0,3.968,0H14.146c1.263,0,2.6.915,3.076,3.076L18,9.117C18.567,13.071,16.279,14.682,13.213,14.682Z\",transform:\"translate(0.801 5.318)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.659,4.32A4.32,4.32,0,0,0,4.339,0h0A4.32,4.32,0,0,0,0,4.32H0\",transform:\"translate(5.492 0.778)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.481.458H.435\",transform:\"translate(12.316 9.144)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.481.458H.435\",transform:\"translate(6.485 9.144)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.95 2.55)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.659,4.32A4.33,4.33,0,0,0,0,4.3V4.32\",transform:\"translate(4.755 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.523.5H.477\",transform:\"translate(11.5 8.324)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.523.5H.477\",transform:\"translate(5.669 8.324)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.084,14.934c-6.508,0-7.257-2.05-8.718-7.467C-1.1,2.033,1.841,0,9.084,0S19.268,2.033,17.8,7.467C16.341,12.884,15.592,14.934,9.084,14.934Z\",transform:\"translate(0 4.006)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};kr.displayName=\"IconlyBag\",kr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var cr=st(kr),fr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.123,20H4.877A4.945,4.945,0,0,1,0,15V9.48A4.95,4.95,0,0,1,4.877,4.47h.2A4.577,4.577,0,0,1,6.388,1.31,4.44,4.44,0,0,1,9.509,0a4.324,4.324,0,0,1,3.1,1.309A4.56,4.56,0,0,1,13.918,4.47h.2A4.95,4.95,0,0,1,19,9.48V15A4.945,4.945,0,0,1,14.123,20ZM13.207,5.66a.742.742,0,0,0-.732.75V7.57a.732.732,0,1,0,1.463,0V6.41A.742.742,0,0,0,13.207,5.66Zm-7.5,0a.751.751,0,0,0-.732.75V7.57a.732.732,0,1,0,1.463,0V6.41A.742.742,0,0,0,5.706,5.66Zm3.8-4.16a2.979,2.979,0,0,0-2.1.879A3.092,3.092,0,0,0,6.545,4.47h5.91A3,3,0,0,0,9.509,1.5Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.12,15H4.88A4.863,4.863,0,0,1,0,10.165V4.835A4.863,4.863,0,0,1,4.88,0H14.12A4.863,4.863,0,0,1,19,4.835v5.329A4.863,4.863,0,0,1,14.12,15\",transform:\"translate(0 5)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.255,8a.734.734,0,0,1-.745-.722V4.357a2.961,2.961,0,0,0-3-2.912,3.131,3.131,0,0,0-2.13.843A2.847,2.847,0,0,0,1.49,4.343V7.278A.734.734,0,0,1,.745,8,.734.734,0,0,1,0,7.278V4.357A4.27,4.27,0,0,1,1.33,1.263,4.641,4.641,0,0,1,4.512,0,4.43,4.43,0,0,1,9,4.357V7.278A.734.734,0,0,1,8.255,8\",transform:\"translate(5)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.562,6.805V3.773A3.781,3.781,0,0,0,0,3.756V6.805\",transform:\"translate(5.211 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.742,14.026H4.258A4.256,4.256,0,0,1,0,9.771V4.255A4.256,4.256,0,0,1,4.258,0h9.484A4.256,4.256,0,0,1,18,4.255V9.771A4.256,4.256,0,0,1,13.742,14.026Z\",transform:\"translate(0 4.474)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.12,4.474h-.207A4.467,4.467,0,0,0,9.512,0,4.35,4.35,0,0,0,6.387,1.311a4.558,4.558,0,0,0-1.3,3.163H4.88A4.949,4.949,0,0,0,0,9.479v5.516A4.949,4.949,0,0,0,4.88,20a.75.75,0,0,0,0-1.5,3.466,3.466,0,0,1-3.417-3.505V9.479A3.466,3.466,0,0,1,4.88,5.974h.2V7.555a.732.732,0,1,0,1.463,0V4.509a3.043,3.043,0,0,1,.872-2.134A3.127,3.127,0,0,1,9.509,1.5a2.985,2.985,0,0,1,2.942,2.974h-3.2a.75.75,0,0,0,0,1.5h3.2V7.555a.732.732,0,1,0,1.463,0V5.974h.2a3.466,3.466,0,0,1,3.417,3.505v5.516A3.466,3.466,0,0,1,14.12,18.5H8.863a.75.75,0,0,0,0,1.5H14.12A4.949,4.949,0,0,0,19,14.995V9.479a4.949,4.949,0,0,0-4.88-5.005\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.562,6.805V3.773A3.781,3.781,0,0,0,0,3.756V6.805\",transform:\"translate(5.211 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.742,14.026H4.258A4.256,4.256,0,0,1,0,9.771V4.255A4.256,4.256,0,0,1,4.258,0h9.484A4.256,4.256,0,0,1,18,4.255V9.771A4.256,4.256,0,0,1,13.742,14.026Z\",transform:\"translate(0 4.474)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.95 2.65)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.562,6.822V3.79A3.781,3.781,0,1,0,0,3.773V6.822\",transform:\"translate(5.238 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,7.059C0,1.765,2.255,0,9.019,0s9.019,1.765,9.019,7.059-2.255,7.058-9.019,7.058S0,12.352,0,7.059Z\",transform:\"translate(0 4.499)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};fr.displayName=\"IconlyBag2\",fr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var pr=st(fr),mr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.858,18H4.143A4.128,4.128,0,0,1,0,13.9V11.219a.747.747,0,0,1,.75-.743A1.484,1.484,0,0,0,2.24,9,1.411,1.411,0,0,0,.75,7.612.748.748,0,0,1,0,6.869L0,4.1A4.128,4.128,0,0,1,4.144,0H15.856A4.129,4.129,0,0,1,20,4.1V6.782a.745.745,0,0,1-.75.743,1.475,1.475,0,1,0,0,2.95.747.747,0,0,1,.75.743V13.9A4.128,4.128,0,0,1,15.858,18ZM10,11.27h0l1.455.757a.751.751,0,0,0,.349.088.741.741,0,0,0,.726-.859l-.279-1.608L13.431,8.51a.72.72,0,0,0,.187-.753.729.729,0,0,0-.6-.5l-1.629-.236-.729-1.463a.743.743,0,0,0-1.327,0L8.608,7.025,6.982,7.26a.736.736,0,0,0-.6.5.723.723,0,0,0,.187.753L7.748,9.648,7.47,11.256a.727.727,0,0,0,.3.718.741.741,0,0,0,.777.055L10,11.27Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.25,10.476a1.476,1.476,0,1,1,0-2.952.754.754,0,0,0,.53-.217A.741.741,0,0,0,20,6.781V4.1A4.129,4.129,0,0,0,15.856,0H4.144A4.129,4.129,0,0,0,0,4.1V6.868a.741.741,0,0,0,.22.526.754.754,0,0,0,.53.217A1.41,1.41,0,0,1,2.239,9,1.484,1.484,0,0,1,.75,10.476.747.747,0,0,0,0,11.22v2.675A4.129,4.129,0,0,0,4.143,18H15.857A4.129,4.129,0,0,0,20,13.895V11.22a.747.747,0,0,0-.75-.743\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.086,3.388,5.907,4.536l.279,1.623a.741.741,0,0,1-1.076.779L3.655,6.173,2.2,6.939a.739.739,0,0,1-1.072-.78L1.4,4.536.224,3.388A.739.739,0,0,1,.637,2.126l1.626-.237L2.992.412A.738.738,0,0,1,3.655,0h0a.736.736,0,0,1,.662.413l.729,1.476,1.629.238a.739.739,0,0,1,.409,1.261\",transform:\"translate(6.344 5.201)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.107,16.667A3.392,3.392,0,0,0,18.5,13.274v-2.7a2.239,2.239,0,1,1,0-4.478l0-2.7A3.392,3.392,0,0,0,15.106,0H3.394A3.393,3.393,0,0,0,0,3.393v2.79A2.163,2.163,0,0,1,2.239,8.335,2.236,2.236,0,0,1,0,10.574v2.7a3.392,3.392,0,0,0,3.392,3.393Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.205,5.179l1.74.915a.223.223,0,0,0,.323-.234L4.935,3.921,6.344,2.55a.222.222,0,0,0-.123-.379L4.275,1.888,3.4.124a.222.222,0,0,0-.4,0L2.135,1.888.19,2.171a.222.222,0,0,0-.123.379L1.475,3.921,1.142,5.86a.223.223,0,0,0,.323.234l1.74-.915Z\",transform:\"translate(6.794 5.676)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.4,18a.743.743,0,1,1,0-1.486h5.463A2.634,2.634,0,0,0,18.5,13.9V11.868a2.956,2.956,0,0,1,0-5.735l0-2.029a2.634,2.634,0,0,0-2.642-2.619H4.144A2.634,2.634,0,0,0,1.5,4.1V6.213A2.863,2.863,0,0,1,3.739,9,2.969,2.969,0,0,1,1.5,11.868V13.9a2.634,2.634,0,0,0,2.642,2.619h1.79a.743.743,0,1,1,0,1.486H4.143A4.128,4.128,0,0,1,0,13.9V11.219a.747.747,0,0,1,.75-.743A1.484,1.484,0,0,0,2.239,9,1.409,1.409,0,0,0,.75,7.612a.749.749,0,0,1-.53-.219A.741.741,0,0,1,0,6.869L0,4.1A4.128,4.128,0,0,1,4.144,0H15.856A4.129,4.129,0,0,1,20,4.1V6.782a.744.744,0,0,1-.22.526.752.752,0,0,1-.53.218,1.475,1.475,0,1,0,0,2.95.747.747,0,0,1,.75.743V13.9A4.128,4.128,0,0,1,15.858,18ZM7.571,12.808a1.007,1.007,0,0,1-.385-.977l.276-1.653L6.294,9.005a1.013,1.013,0,0,1-.246-1.023A.97.97,0,0,1,6.832,7.3l1.612-.242.723-1.506a.958.958,0,0,1,1.738,0L11.691,7.1a.775.775,0,0,1-.312,1.031.716.716,0,0,1-.563.053.743.743,0,0,1-.436-.373l-.331-.649L9.6,8.1a.74.74,0,0,1-.558.418l-.968.145.7.706a.775.775,0,0,1,.213.675l-.166.994.868-.469a.719.719,0,0,1,.689,0l.868.469-.165-.994a.777.777,0,0,1,.212-.676l1.446-1.452a.689.689,0,0,1,.524-.216.727.727,0,0,1,.525.23.776.776,0,0,1-.014,1.078l-1.167,1.173.276,1.653a1,1,0,0,1-.386.977.945.945,0,0,1-1.022.075L10.034,12.1l-1.443.779A.928.928,0,0,1,8.14,13,.946.946,0,0,1,7.571,12.808Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.107,16.667A3.392,3.392,0,0,0,18.5,13.274v-2.7a2.239,2.239,0,1,1,0-4.478l0-2.7A3.392,3.392,0,0,0,15.106,0H3.394A3.393,3.393,0,0,0,0,3.393v2.79A2.163,2.163,0,0,1,2.239,8.335,2.236,2.236,0,0,1,0,10.574v2.7a3.392,3.392,0,0,0,3.392,3.393Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.205,5.179l1.74.915a.223.223,0,0,0,.323-.234L4.935,3.921,6.344,2.55a.222.222,0,0,0-.123-.379L4.275,1.888,3.4.124a.222.222,0,0,0-.4,0L2.135,1.888.19,2.171a.222.222,0,0,0-.123.379L1.475,3.921,1.142,5.86a.223.223,0,0,0,.323.234l1.74-.915Z\",transform:\"translate(6.794 5.676)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.65 3.411)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.79,10.583c-2.661,0-2.661-4.114,0-4.114C18.79,1.7,18.79,0,9.4,0S0,1.7,0,6.469c2.661,0,2.661,4.114,0,4.114,0,4.768,0,6.47,9.4,6.47S18.79,15.351,18.79,10.583Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.018,0C2.335,0,2.27,1.089,1.864,1.475S.194,1.42.018,2.1s.962.916,1.1,1.5S.567,5.016,1.16,5.427s1.233-.518,1.858-.518,1.264.927,1.858.518-.1-1.235.039-1.822,1.278-.819,1.1-1.5S4.579,1.86,4.172,1.475,3.7,0,3.018,0Z\",transform:\"translate(6.377 5.76)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};mr.displayName=\"IconlyTicketStar\",mr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var hr=st(mr),Mr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,0,1,2.926,2.93,10,10,0,1,1,10,20ZM14.48,8.8A1.2,1.2,0,1,0,15.67,10,1.2,1.2,0,0,0,14.48,8.8ZM10,8.8A1.2,1.2,0,1,0,11.19,10,1.2,1.2,0,0,0,10,8.8Zm-4.48,0A1.2,1.2,0,1,0,6.71,10,1.2,1.2,0,0,0,5.52,8.8Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.959,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,8.959,1.2Zm-4.479,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.479,1.2ZM0,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,0,1.2Z\",transform:\"translate(6.323 10.804)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.25,0A9.25,9.25,0,1,1,0,9.25,9.251,9.251,0,0,1,9.25,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(4.323 8.802)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(8.802 8.802)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(13.281 8.802)\",fill:r}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.073,16.1a.727.727,0,1,1,1.152-.888A8.547,8.547,0,1,0,1.454,10a8.636,8.636,0,0,0,.1,1.3.727.727,0,0,1-1.437.22A10,10,0,1,1,2.073,16.1ZM13.28,10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,13.28,10ZM8.8,10A1.2,1.2,0,1,1,10,11.2,1.2,1.2,0,0,1,8.8,10Zm-4.48,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.322,10Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.25,0A9.25,9.25,0,1,1,0,9.25,9.251,9.251,0,0,1,9.25,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(4.323 8.802)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(8.802 8.802)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(13.281 8.802)\",fill:n,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(12.709 11.4)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.709 7.4)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(6.7 11.4)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Mr.displayName=\"IconlyMoreCircle\",Mr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Lr=st(Mr),Ar=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.625,0,14.09V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.17C20,17.625,17.725,20,14.34,20Zm.14-11.2A1.2,1.2,0,1,0,15.67,10,1.2,1.2,0,0,0,14.48,8.8ZM10,8.8A1.2,1.2,0,1,0,11.2,10,1.2,1.2,0,0,0,10,8.8Zm-4.48,0A1.2,1.2,0,1,0,6.72,10,1.2,1.2,0,0,0,5.52,8.8Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.959,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,8.959,1.2Zm-4.479,0a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.479,1.2ZM0,1.2a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,0,1.2Z\",transform:\"translate(6.323 10.804)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(4.323 8.802)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(8.802 8.802)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(13.281 8.802)\",fill:r}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm7.037-10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,13.281,10ZM8.8,10A1.2,1.2,0,1,1,10,11.2,1.2,1.2,0,0,1,8.8,10ZM4.323,10a1.2,1.2,0,1,1,1.2,1.2A1.2,1.2,0,0,1,4.323,10Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(4.323 8.802)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(8.802 8.802)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.2,2.395A1.2,1.2,0,1,1,2.4,1.2a1.2,1.2,0,0,1-1.2,1.2\",transform:\"translate(13.281 8.802)\",fill:n,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(13.498 9.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.499 9.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(5.5 9.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ar.displayName=\"IconlyMoreSquare\",Ar.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var yr=st(Ar),gr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.001)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.006,20a3.024,3.024,0,0,1-2.131-.868l-.73-.732a1.489,1.489,0,0,0-1.06-.438H5.054a3.015,3.015,0,0,1-3.011-3.011V13.917a1.538,1.538,0,0,0-.44-1.071l-.72-.71a3.021,3.021,0,0,1-.01-4.259l.73-.732a1.5,1.5,0,0,0,.44-1.07V5.055A3.013,3.013,0,0,1,5.054,2.047h1.03a1.511,1.511,0,0,0,1.06-.441l.72-.72A3.017,3.017,0,0,1,12.127.877l.731.729a1.49,1.49,0,0,0,1.06.441h1.03a3.013,3.013,0,0,1,3.011,3.009V6.087A1.485,1.485,0,0,0,18.4,7.145l.72.72a3.03,3.03,0,0,1,.02,4.251l-.02.02-.01.01-.71.71a1.488,1.488,0,0,0-.441,1.061v1.029a3.014,3.014,0,0,1-3.011,3.011h-1.03a1.489,1.489,0,0,0-1.06.438l-.721.72A2.986,2.986,0,0,1,10.006,20Zm2.571-8.3a.875.875,0,1,0,.87.87A.877.877,0,0,0,12.578,11.7Zm-.005-5.144a.866.866,0,0,0-.616.254l-5.142,5.14a.88.88,0,0,0,0,1.239.829.829,0,0,0,.61.26.837.837,0,0,0,.62-.26l5.143-5.139a.875.875,0,0,0-.616-1.495Zm-5.137,0a.875.875,0,1,0,.87.869A.876.876,0,0,0,7.435,6.556Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20a3,3,0,0,1-2.124-.875l-.73-.73a1.5,1.5,0,0,0-1.064-.439H5.054a3.015,3.015,0,0,1-3.011-3.011V13.916a1.509,1.509,0,0,0-.44-1.065l-.718-.717A3.015,3.015,0,0,1,.874,7.877l.73-.731a1.5,1.5,0,0,0,.439-1.064V5.056A3.015,3.015,0,0,1,5.054,2.044H6.082A1.5,1.5,0,0,0,7.146,1.6L7.865.886A3.014,3.014,0,0,1,12.122.875l.73.73a1.5,1.5,0,0,0,1.063.439h1.028a3.015,3.015,0,0,1,3.011,3.012V6.083a1.509,1.509,0,0,0,.44,1.065l.718.718a3.009,3.009,0,0,1,.02,4.247c-.01.01-.019.021-.029.03l-.71.71a1.5,1.5,0,0,0-.439,1.064v1.027a3.015,3.015,0,0,1-3.011,3.011H13.915a1.5,1.5,0,0,0-1.064.44l-.719.718A3,3,0,0,1,10,20\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.4,6.638a.9.9,0,0,1-.189-.282.845.845,0,0,1-.061-.34.854.854,0,0,1,.061-.341A1.2,1.2,0,0,1,5.39,5.4a.885.885,0,0,1,.964-.194.786.786,0,0,1,.289.187.9.9,0,0,1,0,1.237.907.907,0,0,1-.619.257A.894.894,0,0,1,5.4,6.638Zm-5.138,0a.877.877,0,0,1,0-1.238L5.4.256A.875.875,0,0,1,6.638,1.494L1.5,6.634a.876.876,0,0,1-1.237,0ZM.26,1.5A.877.877,0,0,1,0,.876.914.914,0,0,1,.254.261a.794.794,0,0,1,.3-.194A.856.856,0,0,1,1.5.26a.917.917,0,0,1,.194.275.852.852,0,0,1-.2.962.854.854,0,0,1-.616.254A.9.9,0,0,1,.26,1.5Z\",transform:\"translate(8.552 8.554)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.044,4.305A2.262,2.262,0,0,1,4.305,2.043H5.334a2.262,2.262,0,0,0,1.593-.657l.719-.72a2.262,2.262,0,0,1,3.2-.008l.009.008.72.72a2.258,2.258,0,0,0,1.593.657h1.028a2.262,2.262,0,0,1,2.262,2.262V5.332a2.26,2.26,0,0,0,.657,1.594l.72.72a2.262,2.262,0,0,1,.009,3.2l-.009.009-.72.72a2.256,2.256,0,0,0-.657,1.592v1.029a2.261,2.261,0,0,1-2.262,2.261H13.166a2.259,2.259,0,0,0-1.593.658l-.72.719a2.261,2.261,0,0,1-3.2.009l-.009-.009-.719-.719a2.263,2.263,0,0,0-1.593-.658H4.305a2.261,2.261,0,0,1-2.261-2.261V13.165a2.257,2.257,0,0,0-.658-1.592l-.719-.72a2.261,2.261,0,0,1-.009-3.2l.009-.009.719-.72a2.261,2.261,0,0,0,.658-1.594V4.305\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.14,5.14,0\",transform:\"translate(7.43 7.43)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.75,1.49a.749.749,0,0,1-.53-.22.821.821,0,0,1-.16-.25A.668.668,0,0,1,0,.74.717.717,0,0,1,.06.45.776.776,0,0,1,.22.21a.774.774,0,0,1,1.06,0,.807.807,0,0,1,.17.24A.929.929,0,0,1,1.5.74a.863.863,0,0,1-.05.28.852.852,0,0,1-.17.25.749.749,0,0,1-.53.22\",transform:\"translate(11.817 11.832)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.75,1.491A.672.672,0,0,1,.47,1.43a.818.818,0,0,1-.25-.159.963.963,0,0,1-.16-.25A.674.674,0,0,1,0,.741.714.714,0,0,1,.06.451.674.674,0,0,1,.22.211a.772.772,0,0,1,1.06,0,.748.748,0,0,1,.22.53.666.666,0,0,1-.05.28,1.006,1.006,0,0,1-.17.25.773.773,0,0,1-.24.159.718.718,0,0,1-.29.061\",transform:\"translate(6.677 6.692)\",fill:r}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.876,19.126l-.73-.731a1.512,1.512,0,0,0-1.065-.439H5.055a3.015,3.015,0,0,1-3.011-3.01.75.75,0,1,1,1.5,0,1.511,1.511,0,0,0,1.511,1.51H6.083a3,3,0,0,1,2.122.877l.721.722A1.506,1.506,0,0,0,10,18.5a1.424,1.424,0,0,0,1.072-.445.751.751,0,1,1,1.064,1.059,3.018,3.018,0,0,1-4.259.011Zm6.318-1.92a.75.75,0,0,1,.75-.75,1.513,1.513,0,0,0,1.511-1.512V13.917a2.99,2.99,0,0,1,.878-2.123l.72-.721a1.512,1.512,0,0,0,0-2.146l-.721-.722a3,3,0,0,1-.878-2.123V5.053a1.511,1.511,0,0,0-1.511-1.511.751.751,0,0,1,0-1.5,3.015,3.015,0,0,1,3.011,3.012V6.081a1.505,1.505,0,0,0,.44,1.065l.717.718a3.013,3.013,0,0,1,.012,4.259l-.73.73a1.528,1.528,0,0,0-.439,1.065v1.027a3.016,3.016,0,0,1-3.011,3.012A.75.75,0,0,1,14.194,17.206ZM11.7,12.572a.868.868,0,1,1,.868.868A.868.868,0,0,1,11.7,12.572ZM6.9,13.1a.752.752,0,0,1,0-1.062L12.039,6.9A.75.75,0,1,1,13.1,7.959L7.961,13.1a.753.753,0,0,1-1.061,0ZM.887,12.136a3.018,3.018,0,0,1-.01-4.262l.73-.73a1.5,1.5,0,0,0,.44-1.06V5.053a3.014,3.014,0,0,1,3.01-3.011h1.03A1.49,1.49,0,0,0,7.146,1.6l.72-.719a3.009,3.009,0,0,1,4.14-.111,1.073,1.073,0,0,1,.121.1.763.763,0,0,1,.21.52.75.75,0,0,1-1.26.55l-.02-.019a1.531,1.531,0,0,0-2.13.019l-.72.721a2.974,2.974,0,0,1-2.12.88H5.056a1.516,1.516,0,0,0-1.51,1.51V6.083A2.97,2.97,0,0,1,2.667,8.2l-.72.722a1.525,1.525,0,0,0,0,2.149.756.756,0,0,1,0,1.061.77.77,0,0,1-.53.22A.743.743,0,0,1,.887,12.136ZM6.553,7.444a.868.868,0,1,1,.868.867A.868.868,0,0,1,6.553,7.444Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.044,4.305A2.262,2.262,0,0,1,4.305,2.043H5.334a2.262,2.262,0,0,0,1.593-.657l.719-.72a2.262,2.262,0,0,1,3.2-.008l.009.008.72.72a2.258,2.258,0,0,0,1.593.657h1.028a2.262,2.262,0,0,1,2.262,2.262V5.332a2.26,2.26,0,0,0,.657,1.594l.72.72a2.262,2.262,0,0,1,.009,3.2l-.009.009-.72.72a2.256,2.256,0,0,0-.657,1.592v1.029a2.261,2.261,0,0,1-2.262,2.261H13.166a2.259,2.259,0,0,0-1.593.658l-.72.719a2.261,2.261,0,0,1-3.2.009l-.009-.009-.719-.719a2.263,2.263,0,0,0-1.593-.658H4.305a2.261,2.261,0,0,1-2.261-2.261V13.165a2.257,2.257,0,0,0-.658-1.592l-.719-.72a2.261,2.261,0,0,1-.009-3.2l.009-.009.719-.72a2.261,2.261,0,0,0,.658-1.594V4.305\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.14,5.14,0\",transform:\"translate(7.43 7.43)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.75,1.49a.749.749,0,0,1-.53-.22.821.821,0,0,1-.16-.25A.668.668,0,0,1,0,.74.717.717,0,0,1,.06.45.776.776,0,0,1,.22.21a.774.774,0,0,1,1.06,0,.807.807,0,0,1,.17.24A.929.929,0,0,1,1.5.74a.863.863,0,0,1-.05.28.852.852,0,0,1-.17.25.749.749,0,0,1-.53.22\",transform:\"translate(11.817 11.832)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.75,1.491A.672.672,0,0,1,.47,1.43a.818.818,0,0,1-.25-.159.963.963,0,0,1-.16-.25A.674.674,0,0,1,0,.741.714.714,0,0,1,.06.451.674.674,0,0,1,.22.211a.772.772,0,0,1,1.06,0,.748.748,0,0,1,.22.53.666.666,0,0,1-.05.28,1.006,1.006,0,0,1-.17.25.773.773,0,0,1-.24.159.718.718,0,0,1-.29.061\",transform:\"translate(6.677 6.692)\",fill:n,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.14,5.14,0\",transform:\"translate(7.43 7.43)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(12 12)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(7 7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};gr.displayName=\"IconlyDiscount\",gr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Wr=st(gr),Vr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.149,18.459A1.514,1.514,0,1,1,16.668,20,1.535,1.535,0,0,1,15.149,18.459Zm-11.241,0A1.514,1.514,0,1,1,5.426,20,1.534,1.534,0,0,1,3.908,18.459Zm1.679-3.164a2.509,2.509,0,0,1-1.726-.689,2.616,2.616,0,0,1-.812-1.7L2.129,1.784.62,1.518A.766.766,0,0,1,.765,0,.817.817,0,0,1,.88.009L3.263.375a.768.768,0,0,1,.619.694l.19,2.286a.617.617,0,0,0,.609.572H18.176a1.689,1.689,0,0,1,1.409.684,2.251,2.251,0,0,1,.38,1.754l-.95,6.694a2.582,2.582,0,0,1-2.528,2.235Zm5.785-6.826a.758.758,0,0,0,.75.765h2.767a.758.758,0,0,0,.75-.765.75.75,0,0,0-.75-.766H12.121A.75.75,0,0,0,11.372,8.468Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.25,1.52a1.515,1.515,0,1,1,1.52,1.51A1.52,1.52,0,0,1,11.25,1.52ZM0,1.52A1.515,1.515,0,1,1,1.52,3.03,1.52,1.52,0,0,1,0,1.52Z\",transform:\"translate(3.911 16.569)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.5,14.989H5.591a2.549,2.549,0,0,1-2.54-2.339L2.13,1.749.621,1.489A.747.747,0,0,1,.14,1.181.732.732,0,0,1,.011.628.761.761,0,0,1,.768,0,.793.793,0,0,1,.881.008l2.385.36a.759.759,0,0,1,.619.68l.191,2.24a.612.612,0,0,0,.609.561H18.191a1.706,1.706,0,0,1,1.41.67,2.169,2.169,0,0,1,.38,1.719l-.95,6.56A2.566,2.566,0,0,1,16.5,14.989Zm-4.37-7.44a.742.742,0,0,0-.751.75.751.751,0,0,0,.751.751H14.9a.751.751,0,0,0,.751-.751.742.742,0,0,0-.751-.75Z\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.764,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.764,0Z\",transform:\"translate(4.658 17.32)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.765,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.765,0Z\",transform:\"translate(15.91 17.32)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.08.36l.963,11.473a1.8,1.8,0,0,0,1.8,1.653H15.752a1.8,1.8,0,0,0,1.785-1.546l.949-6.558a1.341,1.341,0,0,0-1.327-1.533H2.414\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H2.773\",transform:\"translate(12.125 7.795)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.161,18.455A1.515,1.515,0,1,1,16.674,20,1.532,1.532,0,0,1,15.161,18.455Zm-11.253,0A1.515,1.515,0,1,1,5.423,20,1.533,1.533,0,0,1,3.908,18.455Zm1.683-3.163A2.56,2.56,0,0,1,3.046,12.9L2.132,1.786.622,1.519A.765.765,0,0,1,.011.635.752.752,0,0,1,.877.01L2.959.379a.758.758,0,0,1,.618.69l.963,11.707a1.056,1.056,0,0,0,1.05.985H16.5a1.067,1.067,0,0,0,1.043-.921l.949-6.693a.606.606,0,0,0-.138-.482.582.582,0,0,0-.447-.208H7.164a.766.766,0,0,1,0-1.531H17.908a2.071,2.071,0,0,1,1.581.738,2.161,2.161,0,0,1,.489,1.7l-.95,6.693A2.583,2.583,0,0,1,16.5,15.292Zm6.535-6.062a.766.766,0,0,1,0-1.531H14.9a.766.766,0,0,1,0,1.531Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.764,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.764,0Z\",transform:\"translate(4.658 17.32)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.765,0A.765.765,0,1,1,0,.765.766.766,0,0,1,.765,0Z\",transform:\"translate(15.91 17.32)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.08.36l.963,11.473a1.8,1.8,0,0,0,1.8,1.653H15.752a1.8,1.8,0,0,0,1.785-1.546l.949-6.558a1.341,1.341,0,0,0-1.327-1.533H2.414\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H2.773\",transform:\"translate(12.125 7.795)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.65 2.85)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.044,3.58c9.848-1.337,12.187-.6,13.717,1.14s1.261,6.917-.528,8.516-9.553,1.751-12.013,0C.621,11.386,2.129,5.692,2.044,2.243,2.1.313,0,0,0,0\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H2.773\",transform:\"translate(10.506 7.37)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.545,0A.545.545,0,1,1,0,.544.545.545,0,0,1,.545,0Z\",transform:\"translate(3.069 17.277)\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.544,0A.545.545,0,1,1,0,.544.545.545,0,0,1,.544,0Z\",transform:\"translate(13.401 17.277)\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Vr.displayName=\"IconlyBuy\",Vr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Zr=st(Vr),jr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.999)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20a10,10,0,1,1,7.074-2.929A10.011,10.011,0,0,1,10,20Zm0-7.069a.871.871,0,0,0-.87.869.875.875,0,1,0,.87-.869Zm0-7.6a.892.892,0,0,0-.88.88v4.42a.875.875,0,0,0,1.751,0V6.21A.876.876,0,0,0,10,5.33Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.005,8.468a.878.878,0,1,1,.879.875A.874.874,0,0,1,.005,8.468ZM0,5.295V.875a.875.875,0,0,1,1.75,0v4.42a.875.875,0,1,1-1.75,0Z\",transform:\"translate(11.12 7.336)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.25,0A9.25,9.25,0,1,1,0,9.25,9.25,9.25,0,0,1,9.25,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V4.419\",transform:\"translate(9.495 6.204)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.5 13.296)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.073,16.1a.727.727,0,0,1,1.152-.888A8.547,8.547,0,1,0,1.454,10a8.636,8.636,0,0,0,.1,1.3.727.727,0,0,1-.608.828.719.719,0,0,1-.828-.608A10,10,0,1,1,2.073,16.1Zm7.183-2.3A.746.746,0,0,1,10,13.046h.01a.75.75,0,1,1-.754.751ZM9.25,10.625V6.2a.75.75,0,1,1,1.5,0v4.421a.75.75,0,0,1-1.5,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.25,0A9.25,9.25,0,1,1,0,9.25,9.25,9.25,0,0,1,9.25,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V4.419\",transform:\"translate(9.495 6.204)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.5 13.296)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V3.895\",transform:\"translate(9.5 6.105)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.5 13)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};jr.displayName=\"IconlyInfoCircle\",jr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Cr=st(jr),vr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.999)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM9.99,8.481a.876.876,0,0,0-.87.88v4.42a.875.875,0,0,0,1.751,0V9.361A.881.881,0,0,0,9.99,8.481Zm.02-3.17a.875.875,0,1,0,.87.88A.871.871,0,0,0,10.01,5.311Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,8.468V4.048a.875.875,0,1,1,1.75,0v4.42a.875.875,0,0,1-1.75,0ZM.005.875a.878.878,0,1,1,.869.875A.878.878,0,0,1,.005.875Z\",transform:\"translate(11.12 7.314)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.419V0\",transform:\"translate(9.49 9.377)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.495 5.704)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm3-6.2V9.376a.75.75,0,1,1,1.5,0V13.8a.75.75,0,0,1-1.5,0Zm.75-6.842A.746.746,0,0,1,9.25,6.2.752.752,0,1,1,10,6.954Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.419V0\",transform:\"translate(9.49 9.377)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.495 5.704)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.75 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(18.5 18.5) rotate(180)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V3.895\",transform:\"translate(9.75 13.145) rotate(180)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.75 6.25) rotate(180)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};vr.displayName=\"IconlyInfoSquare\",vr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Hr=st(vr),br=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.316,18H2.679a3.129,3.129,0,0,1-.91-.2A2.809,2.809,0,0,1,.218,16.275,2.747,2.747,0,0,1,.21,14.146L7.529,1.433a2.746,2.746,0,0,1,1.1-1.08A2.819,2.819,0,0,1,9.993,0a2.853,2.853,0,0,1,2.484,1.442l7.268,12.615a2.936,2.936,0,0,1,.25,1,2.753,2.753,0,0,1-.73,2.021A2.841,2.841,0,0,1,17.316,18ZM10,12.272a.873.873,0,1,0,0,1.745.877.877,0,0,0,.869-.883A.867.867,0,0,0,10,12.272ZM10,6.09a.872.872,0,0,0-.88.862v2.8a.888.888,0,0,0,.88.873.872.872,0,0,0,.869-.873v-2.8A.867.867,0,0,0,10,6.09Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.723,18.167H2.684a2.828,2.828,0,0,1-2.476-3.89L7.529,1.45a2.83,2.83,0,0,1,4.946.009l7.273,12.728A2.872,2.872,0,0,1,20,15.194a2.829,2.829,0,0,1-2.681,2.972H2.723Z\",transform:\"translate(2 3.001)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,7.124A.875.875,0,1,1,.875,8,.879.879,0,0,1,0,7.124ZM0,3.7V.875a.875.875,0,0,1,1.75,0V3.7A.875.875,0,1,1,0,3.7Z\",transform:\"translate(11.125 9.146)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.756A.755.755,0,0,1,.75,0,.746.746,0,0,1,1.5.745V.756a.75.75,0,1,1-1.5,0Z\",transform:\"translate(9.25 12.514)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.045,16.668H16.527a2.077,2.077,0,0,0,1.819-2.859L11.069,1.073a2.08,2.08,0,0,0-3.639,0L.153,13.809A2.08,2.08,0,0,0,1.3,16.518a2.125,2.125,0,0,0,.676.15\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,3.1V0\",transform:\"translate(9.49 7.296)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.81,17.418a.75.75,0,0,1,.75-.75H17.278a1.334,1.334,0,0,0,1.221-1.4,1.332,1.332,0,0,0-.081-.392L11.169,2.2a1.333,1.333,0,0,0-1.812-.528,1.316,1.316,0,0,0-.519.519l-7.255,12.7a1.332,1.332,0,0,0,1.179,1.787.75.75,0,0,1-.038,1.5H2.687A2.83,2.83,0,0,1,.21,14.276a.637.637,0,0,1,.043-.09L7.53,1.451a2.829,2.829,0,0,1,4.946.009l7.272,12.726a.7.7,0,0,1,.044.091,2.83,2.83,0,0,1-2.477,3.89H6.559A.75.75,0,0,1,5.81,17.418Zm3.442-4.149a.754.754,0,0,1,.75-.755.747.747,0,0,1,.751.745v.01a.75.75,0,1,1-1.5,0Zm0-3.421V7.021a.75.75,0,0,1,1.5,0V9.848a.75.75,0,1,1-1.5,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,7a.755.755,0,0,1,.75-.756.746.746,0,0,1,.75.745V7A.75.75,0,0,1,0,7Z\",transform:\"translate(9.25 6.272)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.045,16.668H16.527a2.077,2.077,0,0,0,1.819-2.859L11.069,1.073a2.08,2.08,0,0,0-3.639,0L.153,13.809A2.08,2.08,0,0,0,1.3,16.518a2.125,2.125,0,0,0,.676.15\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,3.1V0\",transform:\"translate(9.49 7.296)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25C0,2.313,2.313,0,9.25,0S18.5,2.313,18.5,9.25,16.187,18.5,9.25,18.5,0,16.187,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V3.895\",transform:\"translate(9.5 6.105)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(9.5 13)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};br.displayName=\"IconlyDanger\",br.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var wr=st(br),Sr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.999)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM10,11.231h0L11.78,13a.815.815,0,0,0,.61.261A.873.873,0,0,0,13.01,13a.869.869,0,0,0,0-1.228l-1.78-1.78L13.01,8.21a.875.875,0,0,0-.616-1.494.89.89,0,0,0-.624.256L10,8.75,8.22,6.971A.89.89,0,0,0,7.6,6.716.876.876,0,0,0,6.98,8.21L8.76,9.991,6.98,11.761a.88.88,0,0,0,.619,1.5A.873.873,0,0,0,8.22,13L10,11.232Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0\",transform:\"translate(2 2)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.29,5.052,4.511,3.274,6.289,1.5A.875.875,0,0,0,5.052.258L3.273,2.036,1.494.256A.875.875,0,1,0,.256,1.494l1.78,1.78L.26,5.049A.875.875,0,0,0,1.5,6.287L3.273,4.511,5.053,6.29A.875.875,0,0,0,6.29,5.052\",transform:\"translate(8.726 8.719)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.792,0,0,4.792\",transform:\"translate(7.603 7.595)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.8,4.8,0,0\",transform:\"translate(7.601 7.593)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.756.756h-.009V9.56A.765.765,0,0,1,18.47,8.8V6.253c0-3.053-1.67-4.723-4.714-4.723h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,0,1,1.53,0C20,17.608,17.608,20,13.756,20Zm.861-7.072-.022-.016a.773.773,0,0,1,.038-1.082l.684-.684a.765.765,0,1,1,1.044,1.119l-.681.681a.764.764,0,0,1-1.063-.018Zm4.958-.112-.038-.037L7.255,8a.817.817,0,0,1-.013-1.108.755.755,0,0,1,1.069-.013l.008.006,1.865,1.867,1.7-1.7a.783.783,0,0,1,1.088.007.745.745,0,0,1,.135.183.768.768,0,0,1-.122.925l-1.69,1.689L13.129,11.7a.77.77,0,0,1,.029,1.091c0,.006-.011.01-.015.016a.767.767,0,0,1-1.07.012Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.4,2.4,0,4.794,2.4,2.4,0,0,2.4,2.4,4.794,0,2.4,2.4,4.8,4.8Z\",transform:\"translate(7.601 7.593)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.792,0,0,4.792\",transform:\"translate(7.602 7.595)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.8,4.8,0,0\",transform:\"translate(7.6 7.593)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Sr.displayName=\"IconlyCloseSquare\",Sr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Tr=st(Sr),Or=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.625,0,14.091V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.171C20,17.625,17.725,20,14.34,20ZM6.44,9.125a.875.875,0,0,0-.62,1.5L8.2,12.99a.881.881,0,0,0,1.23,0L14.18,8.24A.877.877,0,0,0,12.94,7L8.81,11.13,7.06,9.38A.868.868,0,0,0,6.44,9.125Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.249,6.5a.872.872,0,0,1-.619-.256L.257,3.868A.875.875,0,0,1,1.493,2.629L3.249,4.385,7.377.257A.875.875,0,0,1,8.613,1.495L3.868,6.24a.872.872,0,0,1-.619.256\",transform:\"translate(5.565 6.752)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.373,2.374,4.746,7.12,0\",transform:\"translate(6.44 7.627)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.253,20C2.392,20,0,17.608,0,13.756v-7.5C0,2.392,2.392,0,6.253,0h7.5C17.59,0,20,2.392,20,6.253V8.822a.756.756,0,0,1-.756.756h-.009V9.56A.765.765,0,0,1,18.47,8.8V6.253c0-3.053-1.67-4.723-4.714-4.723h-7.5C3.21,1.53,1.53,3.21,1.53,6.253v7.5c0,3.034,1.68,4.714,4.723,4.714h7.5c3.043,0,4.714-1.68,4.714-4.714a.765.765,0,0,1,1.53,0C20,17.608,17.608,20,13.756,20Zm2.03-7.1L5.909,10.531A.75.75,0,1,1,6.97,9.47l1.843,1.844L13.029,7.1A.75.75,0,0,1,14.09,8.158L9.344,12.9a.751.751,0,0,1-1.061,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.885,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.373,2.374,4.746,7.12,0\",transform:\"translate(6.44 7.627)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.373,2.374,4.746,7.12,0\",transform:\"translate(6.44 7.627)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Or.displayName=\"IconlyTickSquare\",Or.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ir=st(Or),Nr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,0,1,2.926,2.93,10,10,0,1,1,17.07,17.074,9.936,9.936,0,0,1,10,20ZM13.428,6.118a.459.459,0,0,0-.137.021L8.17,7.74a.669.669,0,0,0-.44.44l-1.6,5.13a.435.435,0,0,0,.064.393.45.45,0,0,0,.361.188.437.437,0,0,0,.135-.022l5.1-1.6a.644.644,0,0,0,.44-.44L13.85,6.71a.454.454,0,0,0-.066-.409A.445.445,0,0,0,13.428,6.118Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.742.592l-1.62,5.12a.651.651,0,0,1-.44.441l-5.1,1.6a.448.448,0,0,1-.56-.56l1.6-5.13a.668.668,0,0,1,.44-.44l5.12-1.6a.449.449,0,0,1,.56.57\",transform:\"translate(6.118 6.113)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.682,1.593,1.593,6.682,0,5.089,5.089Z\",transform:\"translate(6.27 6.27)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"9.611\",cy:\"9.611\",r:\"9.611\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.741,19.05A10,10,0,0,1,10,0a9.659,9.659,0,0,1,2.174.246,9.982,9.982,0,0,1,7.576,11.984.781.781,0,1,1-1.508-.386,8.4,8.4,0,1,0-1.561,3.319.781.781,0,0,1,1.211.957A9.978,9.978,0,0,1,5.741,19.05Zm.826-5.108a.775.775,0,0,1-.509-.975L7.584,8.086a.781.781,0,0,1,.509-.5l4.876-1.527a.671.671,0,0,1,.455,0,.763.763,0,0,1,.509.966l-1.561,4.89a.773.773,0,0,1-.394.465l-.877.439a.781.781,0,0,1-.666-1.4l.588-.29L12,7.98l-3.069.966-1.4,4.486a.772.772,0,0,1-.965.509Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.682,1.593,1.593,6.682,0,5.089,5.089Z\",transform:\"translate(6.27 6.27)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"9.611\",cy:\"9.611\",r:\"9.611\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.6l1.574-5.03L6.6,0,5.03,5.029Z\",transform:\"translate(6.698 6.698)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Nr.displayName=\"IconlyDiscovery\",Nr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var xr=st(Nr),Pr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.5,20a1.358,1.358,0,0,1-.734-.247,21.513,21.513,0,0,1-5.54-5.141A10.384,10.384,0,0,1,0,8.318,8.168,8.168,0,0,1,2.5,2.434,8.53,8.53,0,0,1,8.493,0,8.423,8.423,0,0,1,17,8.318a10.39,10.39,0,0,1-2.23,6.294,21.92,21.92,0,0,1-5.541,5.141A1.319,1.319,0,0,1,8.5,20ZM8.493,5.777a2.8,2.8,0,0,0-2.8,2.8,2.712,2.712,0,0,0,.821,1.954,2.823,2.823,0,0,0,4.79-1.954,2.824,2.824,0,0,0-2.813-2.8Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.042,17h0a.823.823,0,0,1-.39-.119,18.454,18.454,0,0,1-4.838-4.548A9.227,9.227,0,0,1,0,7.134,7.166,7.166,0,0,1,3.532.937a6.889,6.889,0,0,1,7.034.058,7.254,7.254,0,0,1,2.525,2.674A7.419,7.419,0,0,1,14,7.261a10.515,10.515,0,0,1-3.192,6.775,18.751,18.751,0,0,1-3.359,2.82A1.173,1.173,0,0,1,7.042,17ZM6.993,4.848a2.342,2.342,0,0,0-1.679.706,2.445,2.445,0,0,0-.519,2.641,2.369,2.369,0,0,0,2.2,1.5h.017a2.327,2.327,0,0,0,1.667-.7,2.455,2.455,0,0,0-.768-3.956A2.328,2.328,0,0,0,6.993,4.848Z\",transform:\"translate(0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"ellipse\",{cx:\"5\",cy:\"1\",rx:\"5\",ry:\"1\",transform:\"translate(2 18)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,7.652A7.678,7.678,0,1,1,15.357,7.7v.087a11.338,11.338,0,0,1-3.478,7.3,20.183,20.183,0,0,1-3.591,2.957.93.93,0,0,1-1.217,0,19.817,19.817,0,0,1-5.052-4.73A9.826,9.826,0,0,1,0,7.678Z\",transform:\"translate(0.739 0.739)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"2.461\",cy:\"2.461\",r:\"2.461\",transform:\"translate(5.957 6.078)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.856,19.879a23.973,23.973,0,0,1-5.7-5.3A10.6,10.6,0,0,1,0,8.513,8.516,8.516,0,0,1,8.5,0h.033A8.5,8.5,0,0,1,17,8.522v.094c-.064,3.344-2.075,6.12-3.749,7.859a20.427,20.427,0,0,1-1.508,1.42.746.746,0,0,1-.968-1.134,19.168,19.168,0,0,0,1.4-1.319c1.49-1.547,3.279-3.992,3.333-6.854a7.027,7.027,0,0,0-6.979-7.1H8.5A7.01,7.01,0,0,0,1.493,8.461a9.119,9.119,0,0,0,1.859,5.225A22.377,22.377,0,0,0,8.672,18.63a.746.746,0,0,1-.815,1.249ZM5.262,8.614a.747.747,0,0,1,1.493,0A1.742,1.742,0,1,0,8.5,6.873a.745.745,0,1,1,0-1.49,3.23,3.23,0,1,1-3.235,3.23Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,7.652A7.678,7.678,0,1,1,15.357,7.7v.087a11.338,11.338,0,0,1-3.478,7.3,20.183,20.183,0,0,1-3.591,2.957.93.93,0,0,1-1.217,0,19.817,19.817,0,0,1-5.052-4.73A9.826,9.826,0,0,1,0,7.678Z\",transform:\"translate(0.739 0.739)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"2.461\",cy:\"2.461\",r:\"2.461\",transform:\"translate(5.957 6.078)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5,2.5A2.5,2.5,0,1,0,2.5,5,2.5,2.5,0,0,0,5,2.5Z\",transform:\"translate(5.01 5.21)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,18C4.6,18,0,12.959,0,7.6A7.549,7.549,0,0,1,7.5,0,7.55,7.55,0,0,1,15,7.6C15,12.959,10.4,18,7.5,18Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Pr.displayName=\"IconlyLocation\",Pr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Er=st(Pr),Dr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.191,20H4.81C1.753,20,0,18.236,0,15.16V4.83A4.91,4.91,0,0,1,1.265,1.271,4.863,4.863,0,0,1,4.81,0h8.382C16.247,0,18,1.761,18,4.83V15.16a4.891,4.891,0,0,1-1.246,3.583A4.819,4.819,0,0,1,13.191,20ZM5,13.736a.78.78,0,0,0-.668.374.786.786,0,0,0,.653,1.206.7.7,0,0,0,.1-.006H12.92a.79.79,0,0,0,0-1.57H5.08A.8.8,0,0,0,5,13.736ZM5.08,9.179a.78.78,0,0,0,0,1.561H12.92a.78.78,0,0,0,0-1.561Zm0-4.529v.01h0a.779.779,0,0,0,0,1.559h2.99a.785.785,0,0,0,0-1.57Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.191,0H4.81C1.77,0,0,1.78,0,4.83V15.16C0,18.26,1.77,20,4.81,20h8.381C16.28,20,18,18.26,18,15.16V4.83C18,1.78,16.28,0,13.191,0\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.12,10.3a.8.8,0,0,1,0-.84A.785.785,0,0,1,.87,9.09H8.71a.79.79,0,0,1,0,1.57H.87a.732.732,0,0,1-.1.007A.783.783,0,0,1,.12,10.3ZM.87,6.09a.781.781,0,0,1,0-1.562H8.71a.781.781,0,0,1,0,1.562Zm0-4.521A.78.78,0,1,1,.87.01V0H3.859a.785.785,0,0,1,0,1.57Z\",transform:\"translate(4.21 4.65)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(5.496 13.723)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(5.496 9.537)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.755.5H0\",transform:\"translate(5.496 5.36)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.158,0,4.469,0A4.251,4.251,0,0,0,0,4.607v9.2A4.254,4.254,0,0,0,4.506,18.41l7.689,0a4.252,4.252,0,0,0,4.47-4.6v-9.2A4.255,4.255,0,0,0,12.158,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.006,20a.734.734,0,0,1,0-1.457h2.848c2.455,0,3.692-1.263,3.692-3.752V5.21c0-2.49-1.237-3.753-3.692-3.753H5.138c-2.456,0-3.7,1.263-3.7,3.753v9.581c0,2.489,1.245,3.752,3.7,3.752a.734.734,0,0,1,0,1.457C1.924,20,0,18.049,0,14.791V5.21C0,1.942,1.924,0,5.138,0h7.716C16.067,0,17.991,1.951,18,5.21v9.581C18,18.049,16.084,20,12.862,20ZM5.39,14.958H5.382a.724.724,0,0,1,0-1.448h7.21a.724.724,0,0,1,0,1.448Zm7.2-4.229H5.382a.734.734,0,0,1,0-1.457h7.21a.72.72,0,0,1,.692.338.745.745,0,0,1,0,.779.724.724,0,0,1-.613.344A.712.712,0,0,1,12.592,10.729ZM5.39,6.5a.734.734,0,0,1,0-1.457H8.133a.734.734,0,0,1,0,1.457Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(5.496 13.723)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(5.496 9.537)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.755.5H0\",transform:\"translate(5.496 5.36)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.158,0,4.469,0A4.251,4.251,0,0,0,0,4.607v9.2A4.254,4.254,0,0,0,4.506,18.41l7.689,0a4.252,4.252,0,0,0,4.47-4.6v-9.2A4.255,4.255,0,0,0,12.158,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.61 2.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(4.766 12.446)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.22.5H0\",transform:\"translate(4.766 8.686)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.755.5H0\",transform:\"translate(4.766 4.927)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.1,9.25,8.391,9.25s8.391-2.313,8.391-9.25S14.685,0,8.391,0,0,2.313,0,9.25Z\",transform:\"translate(0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Dr.displayName=\"IconlyDocument\",Dr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var $r=st(Dr),qr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.2,20H8.807a2.066,2.066,0,0,1-2.125-2.05A1.9,1.9,0,0,0,4.8,16.13a1.58,1.58,0,0,0-.9.23,2.163,2.163,0,0,1-1.084.3A2.122,2.122,0,0,1,1,15.62l-.7-1.2a2,2,0,0,1-.021-2.05,2.108,2.108,0,0,1,.817-.789,1.653,1.653,0,0,0,.644-.64,1.782,1.782,0,0,0,.19-1.365A1.837,1.837,0,0,0,1.071,8.44,2.045,2.045,0,0,1,.314,5.61L1,4.43a2.123,2.123,0,0,1,2.882-.76,1.894,1.894,0,0,0,.9.224A1.959,1.959,0,0,0,6.446,2.98a1.538,1.538,0,0,0,.236-.88A1.788,1.788,0,0,1,6.968,1.04,2.2,2.2,0,0,1,8.776,0h1.441a2.154,2.154,0,0,1,1.82,1.04A1.781,1.781,0,0,1,12.312,2.1a1.545,1.545,0,0,0,.235.88,1.964,1.964,0,0,0,1.672.914,1.926,1.926,0,0,0,.9-.224,2.111,2.111,0,0,1,2.872.76l.684,1.18a2.027,2.027,0,0,1-.756,2.831,1.829,1.829,0,0,0-.853,1.138,1.771,1.771,0,0,0,.2,1.362,1.571,1.571,0,0,0,.634.64,2.307,2.307,0,0,1,.828.789,2.031,2.031,0,0,1-.02,2.05l-.715,1.2a2.1,2.1,0,0,1-2.893.74,1.621,1.621,0,0,0-.9-.23,1.9,1.9,0,0,0-1.891,1.82A2.061,2.061,0,0,1,10.2,20ZM9.512,7.18a2.87,2.87,0,0,0-2.9,2.83,2.763,2.763,0,0,0,.849,2,2.93,2.93,0,0,0,2.053.821A2.822,2.822,0,0,0,11.55,8.006,2.877,2.877,0,0,0,9.512,7.18Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.9,5.65A2.853,2.853,0,0,1,0,2.83,2.861,2.861,0,0,1,2.9,0a2.825,2.825,0,1,1,0,5.65\",transform:\"translate(6.61 7.18)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.73,12.37a2.3,2.3,0,0,0-.828-.79,1.547,1.547,0,0,1-.634-.64,1.822,1.822,0,0,1,.654-2.5,2.027,2.027,0,0,0,.756-2.83l-.685-1.18a2.112,2.112,0,0,0-2.872-.76,1.973,1.973,0,0,1-2.575-.69,1.546,1.546,0,0,1-.235-.88,1.778,1.778,0,0,0-.276-1.06A2.152,2.152,0,0,0,10.217,0H8.776A2.195,2.195,0,0,0,6.967,1.04,1.785,1.785,0,0,0,6.681,2.1a1.546,1.546,0,0,1-.235.88,1.963,1.963,0,0,1-2.565.69A2.124,2.124,0,0,0,1,4.43L.314,5.61a2.044,2.044,0,0,0,.756,2.83,1.834,1.834,0,0,1,.664,2.5,1.634,1.634,0,0,1-.644.64,2.118,2.118,0,0,0-.818.79,2,2,0,0,0,.02,2.05L1,15.62a2.134,2.134,0,0,0,1.819,1.04,2.161,2.161,0,0,0,1.083-.3,1.586,1.586,0,0,1,.9-.23,1.892,1.892,0,0,1,1.88,1.82A2.07,2.07,0,0,0,8.807,20H10.2a2.068,2.068,0,0,0,2.115-2.05A1.908,1.908,0,0,1,14.2,16.13a1.63,1.63,0,0,1,.9.23,2.1,2.1,0,0,0,2.892-.74l.715-1.2a2.018,2.018,0,0,0,.02-2.05\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.528,5.346l-.622-1.08a1.913,1.913,0,0,0-2.609-.7h0a1.9,1.9,0,0,1-2.609-.677,1.831,1.831,0,0,1-.256-.915h0A1.913,1.913,0,0,0,9.519,0H8.265a1.9,1.9,0,0,0-1.9,1.913h0A1.913,1.913,0,0,1,4.448,3.8a1.831,1.831,0,0,1-.915-.256h0a1.913,1.913,0,0,0-2.609.7l-.668,1.1a1.913,1.913,0,0,0,.7,2.609h0a1.913,1.913,0,0,1,.957,1.657,1.913,1.913,0,0,1-.957,1.657h0a1.9,1.9,0,0,0-.7,2.6h0l.632,1.089A1.913,1.913,0,0,0,3.5,15.7h0a1.895,1.895,0,0,1,2.6.7,1.831,1.831,0,0,1,.256.915h0a1.913,1.913,0,0,0,1.913,1.913H9.519a1.913,1.913,0,0,0,1.913-1.9h0a1.9,1.9,0,0,1,1.913-1.913,1.95,1.95,0,0,1,.915.256h0a1.913,1.913,0,0,0,2.609-.7h0l.659-1.1a1.9,1.9,0,0,0-.7-2.609h0a1.9,1.9,0,0,1-.7-2.609,1.876,1.876,0,0,1,.7-.7h0a1.913,1.913,0,0,0,.7-2.6h0Z\",transform:\"translate(0.779 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"2.636\",cy:\"2.636\",r:\"2.636\",transform:\"translate(7.039 7.753)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.175,17.365a.991.991,0,0,0-.143-.527,1.112,1.112,0,0,0-1.493-.4,2.736,2.736,0,0,1-3.6-.949L.329,14.449A2.6,2.6,0,0,1,1.3,10.935a1.1,1.1,0,0,0,.4-.386,1.043,1.043,0,0,0,.179-.85A1.07,1.07,0,0,0,1.345,9,2.6,2.6,0,0,1,.374,5.49a.785.785,0,0,1,.5-.327.8.8,0,0,1,.589.115A.745.745,0,0,1,1.687,6.3a1.05,1.05,0,0,0,.4,1.449,2.586,2.586,0,0,1-.036,4.47,1.051,1.051,0,0,0-.405,1.45l.621,1.045a1.067,1.067,0,0,0,.662.5,1.091,1.091,0,0,0,.831-.118,2.648,2.648,0,0,1,1.322-.342,2.667,2.667,0,0,1,2.7,2.635,1.086,1.086,0,0,0,1.1,1.063l-.009.017a.787.787,0,0,1,.678.383.75.75,0,0,1,0,.764A.789.789,0,0,1,8.874,20,2.668,2.668,0,0,1,6.175,17.365Zm5.028.079a2.628,2.628,0,0,1,1.346-2.227,2.758,2.758,0,0,1,2.648-.031,1.093,1.093,0,0,0,.827.114,1.124,1.124,0,0,0,.666-.5l.611-1.046a1.033,1.033,0,0,0,.113-.806,1.059,1.059,0,0,0-.509-.644,2.571,2.571,0,0,1-.98-1.045A2.6,2.6,0,0,1,16.9,7.747a.811.811,0,0,1,1.062.29.754.754,0,0,1-.27,1.045,1.1,1.1,0,0,0-.4.387,1.038,1.038,0,0,0-.113.809,1.066,1.066,0,0,0,.509.649,2.6,2.6,0,0,1,.935,3.6l-.611,1.045a2.735,2.735,0,0,1-3.6.949,1.1,1.1,0,0,0-1.1-.01,1.05,1.05,0,0,0-.54.932.794.794,0,0,1-1.574,0Zm-4.1-5.1a3.237,3.237,0,0,1-.737-3.6A3.375,3.375,0,0,1,9.494,6.7H9.5a3.392,3.392,0,0,1,2.38.961A3.235,3.235,0,0,1,12.876,10a3.291,3.291,0,0,1-2.082,3.057,3.442,3.442,0,0,1-3.689-.71ZM7.7,10a1.8,1.8,0,1,0,1.8-1.757A1.78,1.78,0,0,0,7.7,10Zm9-4.726A1.112,1.112,0,0,0,15.2,4.892a2.754,2.754,0,0,1-2.644-.029A2.624,2.624,0,0,1,11.2,2.644a1.05,1.05,0,0,0-.306-.775,1.1,1.1,0,0,0-.782-.323H8.883a1.108,1.108,0,0,0-.786.323,1.056,1.056,0,0,0-.312.775,2.581,2.581,0,0,1-1.343,2.23,2.709,2.709,0,0,1-2.651-.017l-.036-.035A.755.755,0,0,1,3.5,3.768a.8.8,0,0,1,1.08-.246,1.151,1.151,0,0,0,.539.148,1.109,1.109,0,0,0,.789-.282,1.064,1.064,0,0,0,.353-.745A2.665,2.665,0,0,1,8.883,0h1.232a2.667,2.667,0,0,1,2.7,2.635.989.989,0,0,0,.144.526,1.084,1.084,0,0,0,.662.5,1.114,1.114,0,0,0,.831-.106,2.735,2.735,0,0,1,3.6.949.772.772,0,0,1-.288,1.045.8.8,0,0,1-.392.1A.794.794,0,0,1,16.691,5.279Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.528,5.346l-.622-1.08a1.913,1.913,0,0,0-2.609-.7h0a1.9,1.9,0,0,1-2.609-.677,1.831,1.831,0,0,1-.256-.915h0A1.913,1.913,0,0,0,9.519,0H8.265a1.9,1.9,0,0,0-1.9,1.913h0A1.913,1.913,0,0,1,4.448,3.8a1.831,1.831,0,0,1-.915-.256h0a1.913,1.913,0,0,0-2.609.7l-.668,1.1a1.913,1.913,0,0,0,.7,2.609h0a1.913,1.913,0,0,1,.957,1.657,1.913,1.913,0,0,1-.957,1.657h0a1.9,1.9,0,0,0-.7,2.6h0l.632,1.089A1.913,1.913,0,0,0,3.5,15.7h0a1.895,1.895,0,0,1,2.6.7,1.831,1.831,0,0,1,.256.915h0a1.913,1.913,0,0,0,1.913,1.913H9.519a1.913,1.913,0,0,0,1.913-1.9h0a1.9,1.9,0,0,1,1.913-1.913,1.95,1.95,0,0,1,.915.256h0a1.913,1.913,0,0,0,2.609-.7h0l.659-1.1a1.9,1.9,0,0,0-.7-2.609h0a1.9,1.9,0,0,1-.7-2.609,1.876,1.876,0,0,1,.7-.7h0a1.913,1.913,0,0,0,.7-2.6h0Z\",transform:\"translate(0.779 0.778)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"2.636\",cy:\"2.636\",r:\"2.636\",transform:\"translate(7.039 7.753)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.5,0A2.5,2.5,0,1,1,0,2.5,2.5,2.5,0,0,1,2.5,0Z\",transform:\"translate(6 7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.668,4.75h0a2.464,2.464,0,0,0-3.379-.912,1.543,1.543,0,0,1-2.314-1.346A2.484,2.484,0,0,0,8.5,0h0A2.484,2.484,0,0,0,6.025,2.492,1.543,1.543,0,0,1,3.712,3.839a2.465,2.465,0,0,0-3.38.912,2.5,2.5,0,0,0,.906,3.4,1.56,1.56,0,0,1,0,2.692,2.5,2.5,0,0,0-.906,3.4,2.465,2.465,0,0,0,3.379.913h0a1.542,1.542,0,0,1,2.313,1.345h0A2.484,2.484,0,0,0,8.5,19h0a2.484,2.484,0,0,0,2.474-2.492h0a1.543,1.543,0,0,1,2.314-1.345,2.465,2.465,0,0,0,3.379-.913,2.5,2.5,0,0,0-.905-3.4h0a1.56,1.56,0,0,1,0-2.692A2.5,2.5,0,0,0,16.668,4.75Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};qr.displayName=\"IconlySetting\",qr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ur=st(qr),Rr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.624,0,14.089V5.919C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.919v8.169C20,17.624,17.725,20,14.34,20ZM9.65,4.919a.76.76,0,0,0-.75.75V10.72a.733.733,0,0,0,.37.64l3.92,2.34a.7.7,0,0,0,.39.11.745.745,0,0,0,.64-.37.72.72,0,0,0,.09-.552.762.762,0,0,0-.35-.477L10.4,10.29V5.669A.751.751,0,0,0,9.65,4.919Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,0H5.67C2.28,0,0,2.38,0,5.92v8.17C0,17.62,2.28,20,5.67,20h8.67C17.73,20,20,17.62,20,14.09V5.92C20,2.38,17.73,0,14.34,0\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.675,8.889a.756.756,0,0,1-.384-.1L.365,6.442A.754.754,0,0,1,0,5.8V.75a.75.75,0,0,1,1.5,0V5.371L5.06,7.494a.75.75,0,0,1-.385,1.395\",transform:\"translate(8.898 4.925)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.391,6.384,0,4.361V0\",transform:\"translate(10 5.634)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.244,20C2.392,20,0,17.608,0,13.753a.765.765,0,0,1,1.53,0c0,3.034,1.671,4.714,4.723,4.714h7.492c3.044,0,4.723-1.671,4.723-4.714v-7.5c0-3.043-1.67-4.723-4.723-4.723H6.253C3.21,1.53,1.53,3.21,1.53,6.253V8.584a.756.756,0,0,1-.756.756H.763A.763.763,0,0,1,0,8.575V6.253C0,2.393,2.41,0,6.254,0h7.492C17.608,0,20,2.393,20,6.256v7.5C20,17.608,17.608,20,13.747,20Zm6.763-7.338-3.39-2.023a.751.751,0,0,1-.366-.645V5.634a.75.75,0,1,1,1.5,0V9.569l3.026,1.8a.751.751,0,0,1-.769,1.29Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.584,0H4.915C1.894,0,0,2.139,0,5.166v8.168C0,16.361,1.884,18.5,4.915,18.5h8.668c3.031,0,4.917-2.139,4.917-5.166V5.166C18.5,2.139,16.614,0,13.584,0Z\",transform:\"translate(0.751 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.391,6.384,0,4.361V0\",transform:\"translate(10 5.634)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.391,6.384,0,4.361V0\",transform:\"translate(9.999 5.634)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Rr.displayName=\"IconlyTimeSquare\",Rr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var _r=st(Rr),Fr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,1,1,10,0a10,10,0,0,1,7.074,17.074A9.936,9.936,0,0,1,10,20ZM9.65,4.93a.751.751,0,0,0-.75.75v5.05a.747.747,0,0,0,.37.64l3.92,2.34a.764.764,0,0,0,.39.111.746.746,0,0,0,.64-.371.756.756,0,0,0-.26-1.03L10.4,10.3V5.68A.751.751,0,0,0,9.65,4.93Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10,10,0,0,1,20,10\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.675,8.889a.756.756,0,0,1-.384-.1L.365,6.442A.754.754,0,0,1,0,5.8V.75a.75.75,0,0,1,1.5,0V5.371L5.06,7.494a.75.75,0,0,1-.385,1.395\",transform:\"translate(8.899 4.925)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.77,7.1,0,4.847V0\",transform:\"translate(9.661 5.847)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.073,16.1a.727.727,0,0,1,1.152-.888A8.548,8.548,0,1,0,1.455,10a8.635,8.635,0,0,0,.1,1.3.727.727,0,0,1-.608.828.719.719,0,0,1-.828-.608A10,10,0,1,1,2.073,16.1Zm11-2.524L9.288,11.32a.73.73,0,0,1-.354-.625V5.837a.727.727,0,1,1,1.453,0v4.446l3.425,2.042a.727.727,0,0,1-.744,1.249Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.77,7.1,0,4.847V0\",transform:\"translate(9.661 5.847)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.5,9.25A9.25,9.25,0,1,1,9.25,0,9.25,9.25,0,0,1,18.5,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.53,4.921,0,4.847V0\",transform:\"translate(9.661 5.846)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Fr.displayName=\"IconlyTimeCircle\",Fr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var zr=st(Fr),Br=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.677,18a2.693,2.693,0,0,1-1.588-.676l-3.526-2.94H2.752A2.645,2.645,0,0,1,.145,11.8a27.953,27.953,0,0,1,0-5.677,2.7,2.7,0,0,1,2.607-2.51H4.563l3.46-2.9A3.014,3.014,0,0,1,9.758,0a2.548,2.548,0,0,1,2.368,1.956,10.232,10.232,0,0,1,.231,1.495l.048.442a96.7,96.7,0,0,1,0,10.216l-.048.458a9.034,9.034,0,0,1-.224,1.453A2.54,2.54,0,0,1,9.782,18Zm8.614-.22a.957.957,0,0,1-.23-1.308A13.405,13.405,0,0,0,20.165,9,13.4,13.4,0,0,0,18.06,1.529.958.958,0,0,1,18.29.221a.9.9,0,0,1,1.277.236A15.319,15.319,0,0,1,22,9a15.318,15.318,0,0,1-2.433,8.544.912.912,0,0,1-.753.4A.9.9,0,0,1,18.291,17.78Zm-3.162-3.038a.957.957,0,0,1-.23-1.308A7.957,7.957,0,0,0,16.143,9,7.955,7.955,0,0,0,14.9,4.566a.957.957,0,0,1,.229-1.308.907.907,0,0,1,1.279.237A9.878,9.878,0,0,1,17.978,9a9.878,9.878,0,0,1-1.571,5.505.9.9,0,0,1-1.278.237Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.357,3.451a10.165,10.165,0,0,0-.232-1.494A2.547,2.547,0,0,0,9.758,0,3.014,3.014,0,0,0,8.022.719l-3.459,2.9H2.752A2.7,2.7,0,0,0,.145,6.127a27.9,27.9,0,0,0,0,5.677,2.644,2.644,0,0,0,2.607,2.579H4.563l3.526,2.941A2.694,2.694,0,0,0,9.677,18h.1a2.539,2.539,0,0,0,2.351-1.981,9.044,9.044,0,0,0,.224-1.453l.047-.458a96.5,96.5,0,0,0,0-10.215Z\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.671.4A.907.907,0,0,0,.392.167.957.957,0,0,0,.164,1.475,7.956,7.956,0,0,1,1.407,5.909,7.959,7.959,0,0,1,.164,10.343a.956.956,0,0,0,.23,1.308.9.9,0,0,0,1.277-.236A9.876,9.876,0,0,0,3.242,5.909,9.876,9.876,0,0,0,1.671.4\",transform:\"translate(14.736 3.091)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.67.4A.905.905,0,0,0,.393.167a.958.958,0,0,0-.23,1.308,13.407,13.407,0,0,1,2.1,7.471,13.408,13.408,0,0,1-2.1,7.472.957.957,0,0,0,.231,1.308.9.9,0,0,0,.522.167.912.912,0,0,0,.754-.4A15.317,15.317,0,0,0,4.1,8.946,15.319,15.319,0,0,0,1.67.4\",transform:\"translate(17.898 0.054)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.6 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.831,1.831,0,0,1,.141,10.644a25.553,25.553,0,0,1,0-5.35A1.882,1.882,0,0,1,1.972,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.1,93.1,0,0,1,10.871,12.892Z\",transform:\"translate(0 0.25)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A8.794,8.794,0,0,1,1.453,5.008,8.791,8.791,0,0,1,0,10.015\",transform:\"translate(14.843 3.06)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A14.165,14.165,0,0,1,2.341,8.068,14.169,14.169,0,0,1,0,16.137\",transform:\"translate(18.274 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.376,18.855a.831.831,0,0,1-.193-1.124,13.664,13.664,0,0,0,1.923-4.763.782.782,0,0,1,.919-.618.807.807,0,0,1,.59.961,15.348,15.348,0,0,1-2.165,5.343.765.765,0,0,1-.635.346A.743.743,0,0,1,18.376,18.855Zm-8.869-.323a2.626,2.626,0,0,1-1.562-.677L4.269,14.72a.832.832,0,0,1-.112-1.136.749.749,0,0,1,1.086-.116l3.688,3.145a1.086,1.086,0,0,0,.615.3c.381.027.739-.314.881-.812a7.923,7.923,0,0,0,.17-1.178c.015-.166.032-.329.05-.495.161-1.338.161-8.522,0-9.859L10.6,4.1a9.245,9.245,0,0,0-.18-1.234c-.134-.47-.5-.825-.833-.783a1.542,1.542,0,0,0-.719.346l-3.622,3.1a.75.75,0,0,1-.49.184H2.7c-.648,0-.955.575-1.027,1.114a26.916,26.916,0,0,0,0,5.278.8.8,0,0,1-.657.912.786.786,0,0,1-.872-.689,28.568,28.568,0,0,1,0-5.712A2.677,2.677,0,0,1,2.7,4.1h1.78l3.4-2.909A3.024,3.024,0,0,1,9.58.468a2.531,2.531,0,0,1,2.327,1.963,10.383,10.383,0,0,1,.228,1.5l.046.442a98.418,98.418,0,0,1,0,10.255l-.046.456a9.177,9.177,0,0,1-.222,1.46,2.505,2.505,0,0,1-2.307,1.989C9.571,18.532,9.54,18.531,9.507,18.532Zm5.336-2.975a.832.832,0,0,1-.193-1.125A8.982,8.982,0,0,0,16.008,9.5a8.984,8.984,0,0,0-1.359-4.933.831.831,0,0,1,.193-1.124.752.752,0,0,1,1.075.2A10.67,10.67,0,0,1,17.553,9.5a10.666,10.666,0,0,1-1.635,5.855.761.761,0,0,1-.634.346A.749.749,0,0,1,14.843,15.557ZM20.455,9.5a15,15,0,0,0-2.272-8.231A.835.835,0,0,1,18.375.143a.755.755,0,0,1,1.076.2A16.673,16.673,0,0,1,22,9.5a.773.773,0,1,1-1.544,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.6 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.831,1.831,0,0,1,.141,10.644a25.553,25.553,0,0,1,0-5.35A1.882,1.882,0,0,1,1.972,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.1,93.1,0,0,1,10.871,12.892Z\",transform:\"translate(0 0.25)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A8.794,8.794,0,0,1,1.453,5.008,8.791,8.791,0,0,1,0,10.015\",transform:\"translate(14.843 3.06)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A14.165,14.165,0,0,1,2.341,8.068,14.169,14.169,0,0,1,0,16.137\",transform:\"translate(18.274 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A11.128,11.128,0,0,1,0,12.357\",transform:\"translate(17.436 1.274)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.74,7.74,0,0,1,0,7.472\",transform:\"translate(14.989 3.717)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.771c0,1.246,0,2.708,1.029,3.582s1.846.514,3.178.952,3.2,3.146,5.261,1.924c1.115-.792,1.64-2.286,1.64-6.457s-.5-5.649-1.64-6.457C7.407-.908,5.54,1.8,4.208,2.238s-2.148.078-3.178.952S0,5.525,0,6.771Z\",transform:\"translate(0.682 0.682)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Br.displayName=\"IconlyVolumeUp\",Br.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Gr=st(Br),Jr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.689,18A2.694,2.694,0,0,1,8.1,17.323l-3.531-2.94H2.755A2.646,2.646,0,0,1,.145,11.8a27.888,27.888,0,0,1,0-5.677,2.7,2.7,0,0,1,2.61-2.51H4.568L8.032.719A3.022,3.022,0,0,1,9.769,0a2.548,2.548,0,0,1,2.37,1.956,10.116,10.116,0,0,1,.232,1.495l.048.442a96.7,96.7,0,0,1,0,10.216l-.048.458a9.034,9.034,0,0,1-.224,1.453A2.542,2.542,0,0,1,9.793,18Zm5.459-3.257a.955.955,0,0,1-.23-1.308A7.955,7.955,0,0,0,16.163,9a7.952,7.952,0,0,0-1.246-4.434.955.955,0,0,1,.23-1.308.91.91,0,0,1,1.278.237A9.869,9.869,0,0,1,18,9a9.869,9.869,0,0,1-1.574,5.505.914.914,0,0,1-.754.4A.9.9,0,0,1,15.148,14.742Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.372,3.451a10.154,10.154,0,0,0-.232-1.494A2.549,2.549,0,0,0,9.769,0,3.02,3.02,0,0,0,8.032.719l-3.463,2.9H2.755a2.7,2.7,0,0,0-2.61,2.51,27.871,27.871,0,0,0,0,5.677,2.646,2.646,0,0,0,2.61,2.579H4.568L8.1,17.324A2.7,2.7,0,0,0,9.688,18h.1a2.542,2.542,0,0,0,2.354-1.981,9.035,9.035,0,0,0,.225-1.453l.047-.458a96.385,96.385,0,0,0,0-10.215Z\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.672.4A.91.91,0,0,0,.394.166a.955.955,0,0,0-.23,1.308A7.954,7.954,0,0,1,1.409,5.908,7.957,7.957,0,0,1,.164,10.342a.955.955,0,0,0,.23,1.308.9.9,0,0,0,.524.167.915.915,0,0,0,.755-.4A9.872,9.872,0,0,0,3.246,5.908,9.872,9.872,0,0,0,1.672.4\",transform:\"translate(14.754 3.092)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.832,1.832,0,0,1,.14,10.644a25.623,25.623,0,0,1,0-5.35A1.883,1.883,0,0,1,1.971,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.092,93.092,0,0,1,10.871,12.892Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A9.312,9.312,0,0,1,1.538,5.3,9.308,9.308,0,0,1,0,10.6\",transform:\"translate(14.717 2.574)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.75,18a2.736,2.736,0,0,1-1.6-.675L4.377,14.2a.813.813,0,0,1-.113-1.132.784.784,0,0,1,1.114-.116l3.781,3.135a1.114,1.114,0,0,0,.632.3.978.978,0,0,0,.9-.807,7.4,7.4,0,0,0,.175-1.174c.015-.165.031-.328.051-.494.164-1.334.164-8.491,0-9.823l-.05-.47a9.329,9.329,0,0,0-.183-1.229c-.139-.467-.511-.822-.855-.779a1.586,1.586,0,0,0-.738.345L5.379,5.045a.785.785,0,0,1-.5.183H2.77a1.128,1.128,0,0,0-1.054,1.11,25.983,25.983,0,0,0,0,5.259.8.8,0,0,1-.674.91.8.8,0,0,1-.894-.688,27.583,27.583,0,0,1,0-5.692A2.708,2.708,0,0,1,2.77,3.619H4.595L8.079.72A3.156,3.156,0,0,1,9.824,0a2.577,2.577,0,0,1,2.388,1.957,9.961,9.961,0,0,1,.233,1.5l.048.44a95.291,95.291,0,0,1,0,10.217l-.048.455a8.866,8.866,0,0,1-.228,1.454A2.55,2.55,0,0,1,9.851,18C9.816,18,9.784,18,9.75,18Zm5.472-2.965a.813.813,0,0,1-.2-1.12A8.773,8.773,0,0,0,16.417,9a8.764,8.764,0,0,0-1.392-4.914.816.816,0,0,1,.2-1.122.786.786,0,0,1,1.1.2A10.406,10.406,0,0,1,18,9a10.405,10.405,0,0,1-1.676,5.835.785.785,0,0,1-1.1.2Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.871,12.892a12.254,12.254,0,0,1-.252,1.759A1.728,1.728,0,0,1,8.98,16a1.963,1.963,0,0,1-1.143-.471L4.07,12.469h-2.1A1.832,1.832,0,0,1,.14,10.644a25.623,25.623,0,0,1,0-5.35A1.883,1.883,0,0,1,1.971,3.532h2.1L7.759.525A2.264,2.264,0,0,1,8.98,0a1.729,1.729,0,0,1,1.639,1.349,13.9,13.9,0,0,1,.252,1.76A93.092,93.092,0,0,1,10.871,12.892Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A9.312,9.312,0,0,1,1.538,5.3,9.308,9.308,0,0,1,0,10.6\",transform:\"translate(14.717 2.574)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.568,7.568,0,0,1,0,7.306\",transform:\"translate(14.656 3.635)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.621c0,1.219,0,2.648,1.006,3.5s1.805.5,3.108.931,3.128,3.076,5.144,1.881c1.09-.774,1.6-2.236,1.6-6.314S10.371,1.1,9.258.307C7.242-.888,5.417,1.76,4.114,2.188s-2.1.076-3.108.931S0,5.4,0,6.621Z\",transform:\"translate(0.667 0.666)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Jr.displayName=\"IconlyVolumeDown\",Jr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Yr=st(Jr),Qr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.274,18.733a.929.929,0,0,1,0-1.314L3.1,14.593H3.068A2.637,2.637,0,0,1,.443,12.052a27.39,27.39,0,0,1,0-5.6A2.683,2.683,0,0,1,3.068,3.987H4.9L8.392,1.13A3.184,3.184,0,0,1,10.149.42a2.539,2.539,0,0,1,2.382,1.925,8.172,8.172,0,0,1,.234,1.472l.084.677c.014.1.026.2.037.309L17.42.271a.926.926,0,0,1,1.309,1.31L1.58,18.729A.947.947,0,0,1,.924,19,.964.964,0,0,1,.274,18.733Zm9.79-.572a2.746,2.746,0,0,1-1.6-.666l-1.3-1.006a.872.872,0,0,1-.071-1.294c.277-.338,4.648-4.322,4.792-4.463a.843.843,0,0,1,.607-.2c.389.1.464.656.458,1.094-.018,1.273-.06,2.157-.128,2.7l-.048.451a8.6,8.6,0,0,1-.228,1.432,2.546,2.546,0,0,1-2.372,1.952Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.765,17.743a2.756,2.756,0,0,1-1.6-.665l-1.3-1.007a.873.873,0,0,1-.071-1.294c.277-.339,4.648-4.321,4.792-4.463a.845.845,0,0,1,.607-.2c.389.1.464.658.459,1.1-.018,1.272-.061,2.156-.129,2.7l-.048.452a8.817,8.817,0,0,1-.227,1.432,2.547,2.547,0,0,1-2.372,1.952C9.836,17.744,9.8,17.744,9.765,17.743Zm-7-3.568a2.637,2.637,0,0,1-2.625-2.54,27.518,27.518,0,0,1,0-5.6A2.686,2.686,0,0,1,2.768,3.569H4.6L8.094.709A3.208,3.208,0,0,1,9.851,0a2.539,2.539,0,0,1,2.381,1.928,8.127,8.127,0,0,1,.233,1.47l.085.679c.022.158.042.3.053.487L2.991,14.174Z\",transform:\"translate(0.299 0.418)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.728.27a.926.926,0,0,0-1.307,0L.27,17.419a.929.929,0,0,0,0,1.314A.963.963,0,0,0,.925,19a.946.946,0,0,0,.655-.271L18.729,1.581a.927.927,0,0,0,0-1.311\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.1,12.6H1.984A1.845,1.845,0,0,1,.141,10.753a25.917,25.917,0,0,1,0-5.406A1.9,1.9,0,0,1,1.984,3.568H4.1L7.809.53A2.278,2.278,0,0,1,9.039,0a1.742,1.742,0,0,1,1.651,1.363,14.268,14.268,0,0,1,.253,1.777A11.67,11.67,0,0,1,11.069,5.4\",transform:\"translate(0.795 1.286)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.574,0c-.019,1.336-.065,2.149-.123,2.618A12.555,12.555,0,0,1,4.2,4.394,1.741,1.741,0,0,1,2.548,5.757,1.968,1.968,0,0,1,1.4,5.281L0,4.142\",transform:\"translate(7.286 11.691)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.148,0,0,17.148\",transform:\"translate(0.848 0.794)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.288,18.764a.809.809,0,0,1,0-1.139l10.9-10.934a11.738,11.738,0,0,0-.085-1.831L11.02,4.12a8.971,8.971,0,0,0-.184-1.231.985.985,0,0,0-.848-.779H9.967a1.654,1.654,0,0,0-.748.344L5.453,5.545a.8.8,0,0,1-.508.182H2.808A1.136,1.136,0,0,0,1.74,6.838a25.724,25.724,0,0,0,0,5.259.8.8,0,0,1-.683.909.683.683,0,0,1-.112.008A.8.8,0,0,1,.15,12.32a27.344,27.344,0,0,1,0-5.692,2.732,2.732,0,0,1,2.66-2.512h1.85l3.533-2.9A3.309,3.309,0,0,1,9.963.5,2.607,2.607,0,0,1,12.38,2.455a9.965,9.965,0,0,1,.237,1.495l.082.683c.023.162.041.3.056.491L17.629.235a.8.8,0,1,1,1.136,1.139L1.424,18.764a.8.8,0,0,1-1.136,0ZM9.881,18.5a2.794,2.794,0,0,1-1.621-.674l-1.4-1.147a.8.8,0,0,1,1.015-1.247l1.411,1.155a1.324,1.324,0,0,0,.635.3c.007,0,.015,0,.024,0a1,1,0,0,0,.9-.808,7.672,7.672,0,0,0,.176-1.175q.023-.246.052-.493c.06-.492.1-1.355.119-2.57A.79.79,0,0,1,12,11.051a.8.8,0,0,1,.791.817c-.018,1.292-.06,2.188-.129,2.741l-.049.457a8.787,8.787,0,0,1-.229,1.454,2.579,2.579,0,0,1-2.4,1.982Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.084,12.373a1.7,1.7,0,0,1-.631-.635,2.556,2.556,0,0,1-.311-.984,25.917,25.917,0,0,1,0-5.406A1.9,1.9,0,0,1,1.985,3.569H4.1L7.811.53A2.29,2.29,0,0,1,9.04,0a1.742,1.742,0,0,1,1.65,1.364,9.605,9.605,0,0,1,.256,1.481\",transform:\"translate(0 0.491)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.574,0c-.019,1.335-.065,2.148-.123,2.617A12.534,12.534,0,0,1,4.2,4.393,1.743,1.743,0,0,1,2.548,5.757,1.977,1.977,0,0,1,1.4,5.28L0,4.141\",transform:\"translate(6.492 10.898)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.148,0,0,17.148\",transform:\"translate(0.054 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.732,11.008c-1.083-.251-1.816-.054-2.72-.814C0,9.335-.008,7.895,0,6.669-.008,5.443,0,4,1.012,3.144s1.816-.51,3.132-.939,3.141-3.1,5.172-1.9c.823.582,1.306,1.53,1.5,3.615\",transform:\"translate(0.671 1.545)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.509,0c-.116,3.006-.635,4.214-1.593,4.894A2.583,2.583,0,0,1,0,4.509\",transform:\"translate(7.07 9.672)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.345,0,0,15.345\",transform:\"translate(0.941 0.671)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Qr.displayName=\"IconlyVolumeOff\",Qr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Kr=st(Qr),Xr=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.919,11.82a1.1,1.1,0,0,0-.319.97l.889,4.92a1.08,1.08,0,0,1-.45,1.08,1.1,1.1,0,0,1-1.17.08L10.44,16.56a1.131,1.131,0,0,0-.5-.131H9.669a.812.812,0,0,0-.27.09L4.969,18.84a1.168,1.168,0,0,1-.71.11,1.112,1.112,0,0,1-.89-1.271l.89-4.92a1.119,1.119,0,0,0-.319-.979L.329,8.28A1.08,1.08,0,0,1,.06,7.15,1.123,1.123,0,0,1,.949,6.4l4.97-.721A1.112,1.112,0,0,0,6.8,5.07L8.989.58a1.041,1.041,0,0,1,.2-.27l.09-.07A.671.671,0,0,1,9.44.11L9.549.07,9.719,0h.421a1.119,1.119,0,0,1,.88.6l2.219,4.47a1.111,1.111,0,0,0,.83.609l4.97.721a1.134,1.134,0,0,1,.91.75,1.086,1.086,0,0,1-.29,1.13Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.976.614,13.2,5.088a1.112,1.112,0,0,0,.838.6l5,.728a1.121,1.121,0,0,1,.736.43,1.082,1.082,0,0,1,.21.815,1.112,1.112,0,0,1-.321.632l-3.624,3.513a1.056,1.056,0,0,0-.321.963l.892,4.939a1.115,1.115,0,0,1-.892,1.272,1.168,1.168,0,0,1-.714-.114l-4.461-2.324a1.169,1.169,0,0,0-1.053,0L5.033,18.866A1.143,1.143,0,0,1,3.5,18.419a1.131,1.131,0,0,1-.116-.7l.892-4.94a1.061,1.061,0,0,0-.321-.964L.332,8.3A1.084,1.084,0,0,1,.3,6.772l.029-.029a1.078,1.078,0,0,1,.642-.315l5-.729a1.114,1.114,0,0,0,.838-.6L8.96.614A1.107,1.107,0,0,1,9.977,0h.134a1.116,1.116,0,0,1,.865.613\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.992,16.417a1.226,1.226,0,0,0-.552.151L5,18.887a1.158,1.158,0,0,1-1.5-.461,1.106,1.106,0,0,1-.116-.694L4.274,12.8a1.1,1.1,0,0,0-.321-.975L.328,8.318A1.093,1.093,0,0,1,.311,6.774l.017-.016A1.134,1.134,0,0,1,.96,6.441L5.965,5.7A1.083,1.083,0,0,0,6.8,5.1L8.978.563A1.106,1.106,0,0,1,10,0c-.008.3-.008,16.213-.008,16.415\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.214.441,12.53,5.1a.8.8,0,0,0,.6.437l5.185.749a.8.8,0,0,1,.528.306.77.77,0,0,1-.085,1.032L15,11.258a.762.762,0,0,0-.226.7l.9,5.128a.787.787,0,0,1-.652.892.868.868,0,0,1-.516-.08L9.888,15.478a.776.776,0,0,0-.742,0L4.494,17.912a.812.812,0,0,1-1.077-.33.8.8,0,0,1-.081-.5l.9-5.128a.788.788,0,0,0-.226-.7L.232,7.621a.786.786,0,0,1,0-1.112l0,0a.909.909,0,0,1,.452-.222L5.87,5.534a.812.812,0,0,0,.6-.438L8.784.441a.787.787,0,0,1,.458-.4.8.8,0,0,1,.61.044A.82.82,0,0,1,10.214.441Z\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.5,19.919a.67.67,0,0,1-.352-.09l-5.138-2.706L5.484,19.559a1.521,1.521,0,0,1-2.062-.613l-.015-.028a1.64,1.64,0,0,1-.158-1l.88-5.194L.451,9a1.6,1.6,0,0,1,0-2.227,1.494,1.494,0,0,1,.88-.451l5.043-.766L8.617.883a1.515,1.515,0,0,1,2.754,0l2.253,4.689,5.06.775a1.525,1.525,0,0,1,1.016.624,1.649,1.649,0,0,1-.162,2.081l-3.661,3.68.51,2.8a.782.782,0,0,1-.625.9.758.758,0,0,1-.88-.613l-.519-2.8a1.623,1.623,0,0,1,.44-1.408l3.67-3.706-5.06-.785a1.52,1.52,0,0,1-1.153-.9L10.008,1.551,7.728,6.294a1.518,1.518,0,0,1-1.153.9L1.532,7.96l3.643,3.7a1.591,1.591,0,0,1,.44,1.389l-.88,5.194,4.523-2.426a1.472,1.472,0,0,1,1.443,0l5.131,2.706a.788.788,0,0,1,.387.879.77.77,0,0,1-.739.6Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9,0C6.964,0,6.771,3.547,5.559,4.8S.578,4.62.055,6.844s2.868,2.98,3.286,4.889-1.651,4.591.119,5.926S7.134,15.975,9,15.975s3.771,3.019,5.541,1.685-.3-4.017.119-5.926,3.808-2.664,3.286-4.889-4.292-.791-5.5-2.044S11.036,0,9,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Xr.displayName=\"IconlyStar\",Xr.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var tn=st(Xr),rn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.219,16H13.066a.583.583,0,0,1-.59-.573V13.4a.708.708,0,0,0-.725-.7.716.716,0,0,0-.725.7v2.03a.582.582,0,0,1-.589.573H3.782A3.733,3.733,0,0,1,0,12.326V9.916a.693.693,0,0,1,.739-.661A1.283,1.283,0,0,0,2.021,8a1.212,1.212,0,0,0-1.3-1.174.734.734,0,0,1-.513-.207A.69.69,0,0,1,0,6.116V3.683A3.742,3.742,0,0,1,3.791,0h6.646a.582.582,0,0,1,.589.573v2.4a.725.725,0,0,0,.725.7.716.716,0,0,0,.725-.7V.573A.583.583,0,0,1,13.066,0h3.153A3.733,3.733,0,0,1,20,3.674V6.041a.694.694,0,0,1-.212.5.734.734,0,0,1-.513.206,1.255,1.255,0,1,0-.014,2.509A.693.693,0,0,1,20,9.916v2.41A3.733,3.733,0,0,1,16.219,16ZM11.75,5.7a.724.724,0,0,0-.725.7v3.758a.725.725,0,0,0,.725.7.716.716,0,0,0,.725-.7V6.407A.716.716,0,0,0,11.75,5.7Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.75,5.7V3.683a.72.72,0,0,1-.725-.7V.573A.577.577,0,0,0,10.435,0H3.791A3.744,3.744,0,0,0,0,3.683V6.115a.694.694,0,0,0,.213.5.739.739,0,0,0,.513.206,1.216,1.216,0,0,1,1.3,1.174A1.274,1.274,0,0,1,.735,9.253.692.692,0,0,0,0,9.92v2.406A3.734,3.734,0,0,0,3.781,16h6.654a.579.579,0,0,0,.59-.573V13.4a.715.715,0,0,1,.725-.7V10.87a.721.721,0,0,1-.725-.7V6.407a.72.72,0,0,1,.725-.7\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.228,7.995A1.282,1.282,0,0,0,7.515,9.254a.691.691,0,0,1,.735.658v2.414A3.728,3.728,0,0,1,4.468,16H1.315a.585.585,0,0,1-.59-.574V13.4a.708.708,0,0,0-.725-.7V10.871a.715.715,0,0,0,.725-.7V6.408A.714.714,0,0,0,0,5.7V3.683a.714.714,0,0,0,.725-.7V.574A.584.584,0,0,1,1.315,0H4.468A3.728,3.728,0,0,1,8.25,3.673V6.041a.692.692,0,0,1-.213.5.736.736,0,0,1-.513.207,1.277,1.277,0,0,0-1.3,1.249\",transform:\"translate(11.75)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(11.35 0.25)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.42\",transform:\"translate(0 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.024\",transform:\"translate(0 13.51)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.821V0\",transform:\"translate(0 5.253)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e})),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.7,16A3.277,3.277,0,0,0,20,12.743V10.151a2.15,2.15,0,1,1,0-4.3V3.257A3.277,3.277,0,0,0,16.7,0H3.3A3.277,3.277,0,0,0,0,3.257V5.935A2.09,2.09,0,0,1,2.177,8,2.159,2.159,0,0,1,0,10.151v2.593A3.277,3.277,0,0,0,3.3,16Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.786,16A3.734,3.734,0,0,1,0,12.326L0,9.884a.7.7,0,0,1,.212-.5.741.741,0,0,1,.513-.206A1.213,1.213,0,0,0,2.019,8,1.277,1.277,0,0,0,.725,6.743.716.716,0,0,1,0,6.038V3.675A3.735,3.735,0,0,1,3.785,0H5.009a.716.716,0,0,1,.725.7.715.715,0,0,1-.725.7H3.785A2.3,2.3,0,0,0,1.451,3.675V5.429A2.682,2.682,0,0,1,3.47,8a2.584,2.584,0,0,1-2.018,2.5v1.826a2.3,2.3,0,0,0,2.334,2.265h7.241v-1.2a.726.726,0,0,1,1.451,0v1.2h3.736a2.3,2.3,0,0,0,2.334-2.265V10.57a2.646,2.646,0,0,1,0-5.141V3.675a2.3,2.3,0,0,0-2.333-2.266H12.479v1.57a.726.726,0,0,1-1.451,0V1.409H9.064A.715.715,0,0,1,8.339.7.716.716,0,0,1,9.064,0h7.152A3.735,3.735,0,0,1,20,3.675V6.038a.716.716,0,0,1-.725.7,1.257,1.257,0,1,0,0,2.513.735.735,0,0,1,.513.206.7.7,0,0,1,.212.5v2.366A3.734,3.734,0,0,1,16.214,16Zm7.241-5.832V6.411a.726.726,0,0,1,1.451,0v3.758a.726.726,0,0,1-1.451,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(11.35 0.25)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.42\",transform:\"translate(0 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.024\",transform:\"translate(0 13.51)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,4.821V0\",transform:\"translate(0 5.253)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a})),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.7,16A3.277,3.277,0,0,0,20,12.743V10.151a2.15,2.15,0,1,1,0-4.3V3.257A3.277,3.277,0,0,0,16.7,0H3.3A3.277,3.277,0,0,0,0,3.257V5.935A2.09,2.09,0,0,1,2.177,8,2.159,2.159,0,0,1,0,10.151v2.593A3.277,3.277,0,0,0,3.3,16Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.475,0V2.655\",transform:\"translate(10.384 0.6)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.475,0V2.22\",transform:\"translate(10.384 14.544)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.475,5.289V0\",transform:\"translate(10.384 6.255)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19,10.55a2.051,2.051,0,0,1,0-4.1C19,1.7,19,0,9.5,0S0,1.7,0,6.449a2.051,2.051,0,0,1,0,4.1C0,15.3,0,17,9.5,17S19,15.3,19,10.55Z\",transform:\"translate(0 0.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};rn.displayName=\"IconlyTicket\",rn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var nn=st(rn),en=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.64,18H4.36A4.362,4.362,0,0,1,0,13.645V7.711A4.362,4.362,0,0,1,4.36,3.356a.2.2,0,0,0,.191-.12l.059-.12.083-.175c.261-.55.557-1.173.737-1.533A2.433,2.433,0,0,1,7.64,0h4.71a2.44,2.44,0,0,1,2.22,1.408c.157.315.4.82.627,1.308l.142.3.1.22a.225.225,0,0,0,.2.12A4.362,4.362,0,0,1,20,7.711v5.934A4.362,4.362,0,0,1,15.64,18ZM10,6.4A3.922,3.922,0,0,0,7.21,7.562a3.867,3.867,0,0,0-1.14,2.767A3.924,3.924,0,0,0,10,14.254a3.9,3.9,0,0,0,2.77-1.148,3.915,3.915,0,0,0,.01-5.554A3.9,3.9,0,0,0,10,6.4Zm5.61-.239a.9.9,0,1,0,.911.909A.906.906,0,0,0,15.61,6.163ZM10,12.756a2.423,2.423,0,0,1-2.43-2.427v-.01a2.337,2.337,0,0,1,.7-1.7A2.43,2.43,0,1,1,10,12.756Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.15,6.942A3.931,3.931,0,0,1,0,4.165,3.871,3.871,0,0,1,1.14,1.4a3.926,3.926,0,1,1,.01,5.544ZM2.2,2.457a2.334,2.334,0,0,0-.7,1.7v.01A2.423,2.423,0,0,0,3.93,6.593,2.444,2.444,0,0,0,6.36,4.165,2.433,2.433,0,0,0,2.2,2.457ZM8.64.909a.9.9,0,1,1,.9.9A.9.9,0,0,1,8.64.909Z\",transform:\"translate(6.07 6.163)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.44,3.236l-.1-.22c-.27-.569-.58-1.229-.77-1.608A2.442,2.442,0,0,0,12.35,0H7.64A2.428,2.428,0,0,0,5.43,1.408c-.2.4-.54,1.119-.82,1.708l-.06.12a.2.2,0,0,1-.19.12A4.361,4.361,0,0,0,0,7.711v5.933A4.361,4.361,0,0,0,4.36,18H15.64A4.368,4.368,0,0,0,20,13.645V7.711a4.368,4.368,0,0,0-4.36-4.355A.227.227,0,0,1,15.44,3.236Z\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.888,3.36h0a.962.962,0,0,1-.87-.551C13.731,2.2,13.366,1.424,13.15,1A1.675,1.675,0,0,0,11.6,0c-.012,0-4.684,0-4.7,0A1.676,1.676,0,0,0,5.35,1c-.215.423-.58,1.2-.867,1.808a.963.963,0,0,1-.87.551h0A3.612,3.612,0,0,0,0,6.972v5.936A3.613,3.613,0,0,0,3.613,16.52H14.888A3.612,3.612,0,0,0,18.5,12.908V6.972A3.612,3.612,0,0,0,14.888,3.36Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.182A3.179,3.179,0,1,0,3.182,0,3.19,3.19,0,0,0,0,3.182Z\",transform:\"translate(6.821 7.152)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.9,2a1.085,1.085,0,0,1-.3-.078A1.008,1.008,0,0,1,.282,1.7,1.021,1.021,0,0,1,0,1,.971.971,0,0,1,.082.607,1.018,1.018,0,0,1,.318.265,1.144,1.144,0,0,1,.622.07,1.023,1.023,0,0,1,1.7.285a.962.962,0,0,1,.19.261L1.917.6A.974.974,0,0,1,2,1a1.016,1.016,0,0,1-.292.705A1,1,0,0,1,1.1,2L1,2Z\",transform:\"translate(14 6)\",fill:r}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.58,18a.749.749,0,1,1,0-1.5h7.059A2.864,2.864,0,0,0,18.5,13.642V7.713a2.864,2.864,0,0,0-2.862-2.859,1.718,1.718,0,0,1-1.548-.979c-.314-.665-.655-1.385-.859-1.788a.93.93,0,0,0-.889-.588H7.653a.928.928,0,0,0-.884.589c-.2.391-.526,1.084-.8,1.663l-.059.124a1.719,1.719,0,0,1-1.548.979A2.864,2.864,0,0,0,1.5,7.713v5.929A2.864,2.864,0,0,0,4.363,16.5h.745a.749.749,0,1,1,0,1.5H4.363A4.365,4.365,0,0,1,0,13.642V7.713A4.365,4.365,0,0,1,4.363,3.355a.211.211,0,0,0,.192-.121l.059-.124c.279-.592.614-1.3.816-1.7A2.425,2.425,0,0,1,7.646,0h4.7a2.426,2.426,0,0,1,2.221,1.409c.209.411.557,1.147.841,1.751.071.148.146.2.229.2A4.365,4.365,0,0,1,20,7.713v5.929A4.365,4.365,0,0,1,15.638,18ZM10,14.254a3.928,3.928,0,0,1-3.74-5.121.75.75,0,0,1,1.43.454,2.383,2.383,0,0,0-.115.733A2.435,2.435,0,0,0,10,12.756h0a2.419,2.419,0,0,0,1.724-.723,2.376,2.376,0,0,0,.7-1.7A2.438,2.438,0,0,0,10,7.895h0a2.475,2.475,0,0,0-.529.057.748.748,0,1,1-.327-1.461A3.836,3.836,0,0,1,10,6.4h0a3.936,3.936,0,0,1,3.928,3.931,3.857,3.857,0,0,1-1.139,2.762A3.91,3.91,0,0,1,10,14.254Zm4.923-6.5a.745.745,0,0,1-.22-.528.7.7,0,0,1,.06-.279,1.081,1.081,0,0,1,.16-.25,1.055,1.055,0,0,1,.25-.161.807.807,0,0,1,.57,0,.832.832,0,0,1,.24.161.88.88,0,0,1,.17.25.7.7,0,0,1,.059.279.718.718,0,0,1-.229.528.8.8,0,0,1-.24.17.7.7,0,0,1-.29.051A.743.743,0,0,1,14.92,7.752Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.888,3.36h0a.962.962,0,0,1-.87-.551C13.731,2.2,13.366,1.424,13.15,1A1.675,1.675,0,0,0,11.6,0c-.012,0-4.684,0-4.7,0A1.676,1.676,0,0,0,5.35,1c-.215.423-.58,1.2-.867,1.808a.963.963,0,0,1-.87.551h0A3.612,3.612,0,0,0,0,6.972v5.936A3.613,3.613,0,0,0,3.613,16.52H14.888A3.612,3.612,0,0,0,18.5,12.908V6.972A3.612,3.612,0,0,0,14.888,3.36Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.182A3.179,3.179,0,1,0,3.182,0,3.19,3.19,0,0,0,0,3.182Z\",transform:\"translate(6.821 7.152)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.9,2a1.085,1.085,0,0,1-.3-.078A1.008,1.008,0,0,1,.282,1.7,1.021,1.021,0,0,1,0,1,.971.971,0,0,1,.082.607,1.018,1.018,0,0,1,.318.265,1.144,1.144,0,0,1,.622.07,1.023,1.023,0,0,1,1.7.285a.962.962,0,0,1,.19.261L1.917.6A.974.974,0,0,1,2,1a1.016,1.016,0,0,1-.292.705A1,1,0,0,1,1.1,2L1,2Z\",transform:\"translate(14 6)\",fill:n,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 3.042)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.291,3.145A3.145,3.145,0,1,0,3.145,6.291,3.146,3.146,0,0,0,6.291,3.145Z\",transform:\"translate(6.648 6.311)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9,17.158c8.045,0,9-2.411,9-7.634,0-3.661-.484-5.62-3.534-6.462a1.927,1.927,0,0,1-.842-.534c-.406-.445-.7-1.813-1.684-2.226A14.475,14.475,0,0,0,6.06.3C5.1.7,4.782,2.083,4.376,2.529a1.921,1.921,0,0,1-.842.534C.484,3.9,0,5.863,0,9.525,0,14.748.958,17.158,9,17.158Z\",transform:\"translate(0.789 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5.5H.5\",transform:\"translate(14.209 5.458)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};en.displayName=\"IconlyCamera\",en.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var on=st(en),an=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,16.575c0-2.722,3.686-3.4,8-3.4,4.339,0,8,.7,8,3.424S12.315,20,8,20C3.662,20,0,19.3,0,16.575ZM2.706,5.291A5.294,5.294,0,1,1,8,10.583,5.274,5.274,0,0,1,2.706,5.291Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8,0C3.684,0,0,.68,0,3.4S3.661,6.825,8,6.825c4.313,0,8-.679,8-3.4S12.334,0,8,0\",transform:\"translate(0 13.175)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.292,10.584A5.292,5.292,0,1,0,0,5.292a5.273,5.273,0,0,0,5.292,5.292\",transform:\"translate(2.705 0)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"4.778\",cy:\"4.778\",r:\"4.778\",transform:\"translate(2.801 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.016a2.215,2.215,0,0,1,.22-.97A4.042,4.042,0,0,1,3.039.426,16.787,16.787,0,0,1,5.382.1,25.053,25.053,0,0,1,9.767.1a16.979,16.979,0,0,1,2.343.33c1.071.22,2.362.659,2.819,1.62a2.27,2.27,0,0,1,0,1.95c-.458.961-1.748,1.4-2.819,1.611a15.716,15.716,0,0,1-2.343.339A25.822,25.822,0,0,1,6.2,6a4.066,4.066,0,0,1-.815-.055,15.423,15.423,0,0,1-2.334-.339C1.968,5.4.687,4.957.22,4A2.279,2.279,0,0,1,0,3.016Z\",transform:\"translate(0 13.185)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.978,19.985a.717.717,0,0,1-.7-.738.737.737,0,0,1,.742-.7q.483.014.981.014c4.349,0,6.555-.751,6.555-2.233,0-1.5-2.206-2.255-6.555-2.255s-6.555.752-6.555,2.235c0,.485.173,1.188,1.675,1.694a.718.718,0,1,1-.464,1.359C.461,18.624,0,17.3,0,16.31c0-3.29,4.566-3.67,8-3.67,1.978,0,8,0,8,3.691C16,19.619,11.435,20,8,20Q7.48,20,6.978,19.985ZM2.613,5.354A5.387,5.387,0,1,1,8,10.706,5.377,5.377,0,0,1,2.613,5.354Zm1.446,0A3.942,3.942,0,1,0,8,1.437,3.933,3.933,0,0,0,4.059,5.354Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"circle\",{cx:\"4.778\",cy:\"4.778\",r:\"4.778\",transform:\"translate(2.801 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.016a2.215,2.215,0,0,1,.22-.97A4.042,4.042,0,0,1,3.039.426,16.787,16.787,0,0,1,5.382.1,25.053,25.053,0,0,1,9.767.1a16.979,16.979,0,0,1,2.343.33c1.071.22,2.362.659,2.819,1.62a2.27,2.27,0,0,1,0,1.95c-.458.961-1.748,1.4-2.819,1.611a15.716,15.716,0,0,1-2.343.339A25.822,25.822,0,0,1,6.2,6a4.066,4.066,0,0,1-.815-.055,15.423,15.423,0,0,1-2.334-.339C1.968,5.4.687,4.957.22,4A2.279,2.279,0,0,1,0,3.016Z\",transform:\"translate(0 13.185)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5 2.4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.845,7.3C3.153,7.3,0,6.726,0,4.425S3.133,0,6.845,0c3.692,0,6.845,2.1,6.845,4.4S10.556,7.3,6.845,7.3Z\",transform:\"translate(0 11.962)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.387,8.774a4.372,4.372,0,1,0-.031,0Z\",transform:\"translate(2.45 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};an.displayName=\"IconlyUser\",an.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var sn=st(an),ln=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,15.746c0-2.585,3.454-3.231,7.5-3.231,4.067,0,7.5.669,7.5,3.253S11.545,19,7.5,19C3.434,19,0,18.329,0,15.746Zm16.1-5.658V8.911H14.9a.912.912,0,0,1,0-1.823h1.2V5.911a.9.9,0,1,1,1.8,0V7.088h1.2a.912.912,0,0,1,0,1.823H17.9v1.177a.9.9,0,1,1-1.8,0ZM2.537,5.027a4.963,4.963,0,1,1,9.925,0,4.963,4.963,0,1,1-9.925,0Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.1,2.088H3.9V.912a.9.9,0,1,0-1.8,0V2.088H.9a.912.912,0,0,0,0,1.823H2.1V5.088a.9.9,0,1,0,1.8,0V3.911H5.1a.912.912,0,0,0,0-1.823\",transform:\"translate(14 5)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0C3.454,0,0,.647,0,3.231S3.433,6.484,7.5,6.484c4.045,0,7.5-.647,7.5-3.231S11.567,0,7.5,0\",transform:\"translate(0 12.516)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.963,10.054A4.977,4.977,0,0,0,9.925,5.028,4.963,4.963,0,1,0,0,5.028a4.977,4.977,0,0,0,4.963,5.027\",transform:\"translate(2.537 0)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.127,0C3.283,0,0,.581,0,2.909s3.262,2.93,7.127,2.93c3.844,0,7.127-.582,7.127-2.909S10.992,0,7.127,0Z\",transform:\"translate(0.75 13.206)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.568,9.136A4.568,4.568,0,1,0,0,4.568,4.552,4.552,0,0,0,4.568,9.136Z\",transform:\"translate(3.309 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V4.01\",transform:\"translate(16.704 6.669)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.09.5H0\",transform:\"translate(15.16 8.174)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.909,19.987a.718.718,0,0,1-.694-.74.734.734,0,0,1,.735-.7q.477.015.971.014c4.306,0,6.49-.751,6.49-2.235s-2.183-2.254-6.49-2.254-6.491.752-6.491,2.234c0,.485.171,1.188,1.659,1.694a.718.718,0,0,1-.459,1.361C.456,18.625,0,17.3,0,16.31c0-3.29,4.521-3.67,7.922-3.67,1.958,0,7.921,0,7.921,3.69,0,3.289-4.521,3.67-7.921,3.67C7.579,20,7.24,20,6.909,19.987Zm9.557-9.193V9.538H15.178a.75.75,0,0,1,0-1.5h1.289V6.784a.747.747,0,1,1,1.495,0V8.039h1.292a.75.75,0,0,1,0,1.5H17.961v1.255a.747.747,0,1,1-1.495,0ZM2.588,5.354a5.334,5.334,0,1,1,5.333,5.354A5.35,5.35,0,0,1,2.588,5.354Zm1.431,0a3.9,3.9,0,1,0,3.9-3.917A3.914,3.914,0,0,0,4.019,5.354Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.127,0C3.283,0,0,.581,0,2.909s3.262,2.93,7.127,2.93c3.844,0,7.127-.582,7.127-2.909S10.992,0,7.127,0Z\",transform:\"translate(0.75 13.206)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.568,9.136A4.568,4.568,0,1,0,0,4.568,4.552,4.552,0,0,0,4.568,9.136Z\",transform:\"translate(3.309 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V4.01\",transform:\"translate(16.704 6.669)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.09.5H0\",transform:\"translate(15.16 8.174)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.85 2.15)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.072,7.3C3.258,7.3,0,6.721,0,4.411S3.237,0,7.072,0c3.814,0,7.072,2.081,7.072,4.39S10.907,7.3,7.072,7.3Z\",transform:\"translate(0 12.36)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.533,9.066a4.517,4.517,0,1,0-.032,0Z\",transform:\"translate(2.539 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V4.01\",transform:\"translate(15.781 5.979)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.09.5H0\",transform:\"translate(14.237 7.484)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ln.displayName=\"IconlyAddUser\",ln.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var un=st(ln),dn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,14.918c0-2.447,3.386-3.06,7.349-3.06,3.985,0,7.349.634,7.349,3.083S11.313,18,7.349,18C3.364,18,0,17.366,0,14.918Zm16.633.475c.341-3.112-2.366-4.588-3.067-4.927a.053.053,0,0,1-.033-.054.041.041,0,0,1,.037-.028,18.394,18.394,0,0,1,3.748.319,3.193,3.193,0,0,1,2.462,1.468,2.106,2.106,0,0,1,0,1.877c-.532,1.123-2.246,1.485-2.912,1.578l-.03,0A.208.208,0,0,1,16.633,15.393ZM2.487,4.763A4.8,4.8,0,0,1,7.349,0a4.8,4.8,0,0,1,4.863,4.763A4.8,4.8,0,0,1,7.349,9.525,4.8,4.8,0,0,1,2.487,4.763ZM13.719,8.822a4.069,4.069,0,0,1-.56-.052.177.177,0,0,1-.122-.274,6.432,6.432,0,0,0-.1-7.439.11.11,0,0,1-.018-.123.148.148,0,0,1,.095-.056A4.2,4.2,0,0,1,13.834.8a4.045,4.045,0,0,1,3.957,5.076A4.04,4.04,0,0,1,13.83,8.823Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.349,0C3.386,0,0,.612,0,3.06S3.364,6.142,7.349,6.142c3.964,0,7.349-.612,7.349-3.06S11.335,0,7.349,0\",transform:\"translate(0 11.858)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.863,9.525A4.8,4.8,0,0,0,9.726,4.762,4.8,4.8,0,0,0,4.863,0,4.8,4.8,0,0,0,0,4.762,4.8,4.8,0,0,0,4.863,9.525\",transform:\"translate(2.486 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.265,4.053A6.368,6.368,0,0,1,.128,7.7a.177.177,0,0,0,.122.275,3.968,3.968,0,0,0,.56.052,4.045,4.045,0,0,0,4.072-2.95A4.045,4.045,0,0,0,.925,0,4.159,4.159,0,0,0,.107.081.148.148,0,0,0,.012.137.111.111,0,0,0,.031.261,6.414,6.414,0,0,1,1.265,4.053\",transform:\"translate(12.909 0.795)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.247,1.789A3.19,3.19,0,0,0,3.785.322,18.354,18.354,0,0,0,.038,0,.043.043,0,0,0,0,.031.054.054,0,0,0,.034.085C.734.424,3.442,1.9,3.1,5.012a.207.207,0,0,0,.234.232C4,5.151,5.716,4.79,6.247,3.667a2.107,2.107,0,0,0,0-1.878\",transform:\"translate(13.532 10.38)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.594A3.3,3.3,0,0,0,3.3,3.3,3.3,3.3,0,0,0,0,0\",transform:\"translate(14.02 1.819)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A10.9,10.9,0,0,1,1.617.233,2.664,2.664,0,0,1,3.562,1.346a1.568,1.568,0,0,1,0,1.345A2.683,2.683,0,0,1,1.617,3.809\",transform:\"translate(15.536 11.996)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.841,0c3.69,0,6.842.559,6.842,2.792S10.551,5.6,6.841,5.6C3.151,5.6,0,5.046,0,2.812S3.131,0,6.841,0Z\",transform:\"translate(0.75 12.706)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.384,8.769A4.385,4.385,0,1,1,8.769,4.384,4.369,4.369,0,0,1,4.384,8.769Z\",transform:\"translate(3.207 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.842,18.252a.749.749,0,0,1,.75-.747c2.779,0,6.09-.356,6.09-2.056,0-1.351-2.048-2.037-6.09-2.037-2.779,0-6.091.356-6.091,2.056,0,.381.112.872.984,1.3a5.764,5.764,0,0,0,1.328.43A.747.747,0,1,1,3.5,18.66a7.279,7.279,0,0,1-1.676-.548A2.855,2.855,0,0,1,0,15.469c0-3.551,5.713-3.551,7.592-3.551,3.259,0,7.591.366,7.591,3.532C15.182,19,9.468,19,7.592,19A.748.748,0,0,1,6.842,18.252Zm9.576-2.346A.746.746,0,0,1,17,15.024c.762-.156,1.28-.412,1.418-.7a.812.812,0,0,0,0-.7c-.141-.293-.656-.547-1.414-.7a10.216,10.216,0,0,0-1.523-.22.746.746,0,0,1-.7-.8.758.758,0,0,1,.8-.7,11.913,11.913,0,0,1,1.728.249,3.19,3.19,0,0,1,2.46,1.517,2.288,2.288,0,0,1,0,1.984A3.236,3.236,0,0,1,17.3,16.488a.791.791,0,0,1-.152.014A.747.747,0,0,1,16.418,15.906ZM4.432,9.161a.749.749,0,1,1,.922-1.18,3.626,3.626,0,1,0-1.4-2.863.75.75,0,0,1-1.5,0A5.112,5.112,0,1,1,4.432,9.161Zm8.837-.774a.749.749,0,0,1,.75-.747,2.539,2.539,0,1,0,0-5.078.748.748,0,1,1,0-1.5,4.034,4.034,0,1,1,0,8.069A.749.749,0,0,1,13.27,8.387Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,6.594A3.3,3.3,0,0,0,3.3,3.3,3.3,3.3,0,0,0,0,0\",transform:\"translate(14.02 1.819)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A10.9,10.9,0,0,1,1.617.233,2.664,2.664,0,0,1,3.562,1.346a1.568,1.568,0,0,1,0,1.345A2.683,2.683,0,0,1,1.617,3.809\",transform:\"translate(15.536 11.996)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.841,0c3.69,0,6.842.559,6.842,2.792S10.551,5.6,6.841,5.6C3.151,5.6,0,5.046,0,2.812S3.131,0,6.841,0Z\",transform:\"translate(0.75 12.706)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.384,8.769A4.385,4.385,0,1,1,8.769,4.384,4.369,4.369,0,0,1,4.384,8.769Z\",transform:\"translate(3.207 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.75 2.549)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.809,7.007C3.137,7.007,0,6.452,0,4.228S3.117,0,6.809,0c3.672,0,6.808,1.985,6.808,4.208S10.5,7.007,6.809,7.007Z\",transform:\"translate(0 11.9)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.364,8.728a4.349,4.349,0,1,0-.031,0Z\",transform:\"translate(2.445 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.187,6.4A3.289,3.289,0,0,0,2.624,3.221,3.288,3.288,0,0,0,0,0\",transform:\"translate(13.865 1.132)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0C1.988,0,3.686,1.348,3.686,2.551A1.814,1.814,0,0,1,2.211,4.2\",transform:\"translate(14.711 11.104)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};dn.displayName=\"IconlyTwoUsers\",dn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var kn=st(dn),cn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.588,13.28c0-2.177,2.911-2.741,6.361-2.741,3.431,0,6.36.544,6.36,2.721S14.4,16,10.949,16C7.518,16,4.588,15.456,4.588,13.28Zm14.5.4A4.453,4.453,0,0,0,16.431,9.3a.045.045,0,0,1-.029-.047.038.038,0,0,1,.032-.026,15.49,15.49,0,0,1,3.244.284,2.76,2.76,0,0,1,2.131,1.3,1.927,1.927,0,0,1,0,1.67c-.461,1-1.944,1.319-2.521,1.4l-.027,0A.183.183,0,0,1,19.086,13.684Zm-16.375.205c-.576-.083-2.06-.4-2.52-1.4a1.913,1.913,0,0,1,0-1.669,2.756,2.756,0,0,1,2.13-1.305,15.644,15.644,0,0,1,3.244-.283.037.037,0,0,1,.032.025.046.046,0,0,1-.028.048,4.449,4.449,0,0,0-2.656,4.38.182.182,0,0,1-.176.208ZM6.74,4.233a4.209,4.209,0,1,1,8.419,0,4.209,4.209,0,1,1-8.419,0Zm9.823,3.609a3.4,3.4,0,0,1-.483-.047.159.159,0,0,1-.106-.245A5.841,5.841,0,0,0,15.889.939a.106.106,0,0,1-.016-.111.13.13,0,0,1,.083-.049,3.507,3.507,0,0,1,.708-.073A3.576,3.576,0,0,1,20.088,5.22a3.51,3.51,0,0,1-3.429,2.623ZM1.912,5.22A3.576,3.576,0,0,1,5.336.706a3.53,3.53,0,0,1,.709.073.135.135,0,0,1,.082.049.1.1,0,0,1-.016.11A5.84,5.84,0,0,0,6.027,7.55a.159.159,0,0,1-.107.245,3.281,3.281,0,0,1-.483.047h-.1A3.512,3.512,0,0,1,1.912,5.22Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.361,0C2.911,0,0,.564,0,2.739S2.93,5.46,6.361,5.46c3.45,0,6.361-.564,6.361-2.739S9.792,0,6.361,0\",transform:\"translate(4.588 10.54)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.209,8.467A4.207,4.207,0,0,0,8.419,4.234,4.209,4.209,0,1,0,0,4.234,4.207,4.207,0,0,0,4.209,8.467\",transform:\"translate(6.74 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.225,4.513A3.574,3.574,0,0,0,.8,0,3.587,3.587,0,0,0,.092.073.136.136,0,0,0,.01.122a.1.1,0,0,0,.017.11A5.807,5.807,0,0,1,1.094,3.6,5.762,5.762,0,0,1,.11,6.844a.158.158,0,0,0,.107.244A3.282,3.282,0,0,0,.7,7.135,3.513,3.513,0,0,0,4.225,4.513\",transform:\"translate(15.863 0.707)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.407,1.59A2.755,2.755,0,0,0,3.276.286,15.555,15.555,0,0,0,.033,0,.037.037,0,0,0,0,.027.046.046,0,0,0,.029.075,4.451,4.451,0,0,1,2.684,4.456a.181.181,0,0,0,.2.205c.577-.083,2.06-.4,2.521-1.4a1.922,1.922,0,0,0,0-1.67\",transform:\"translate(16.402 9.227)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.252.073A3.514,3.514,0,0,0,3.543,0,3.573,3.573,0,0,0,.12,4.513,3.511,3.511,0,0,0,3.644,7.135a3.4,3.4,0,0,0,.484-.047.158.158,0,0,0,.107-.244A5.841,5.841,0,0,1,4.318.232a.1.1,0,0,0,.016-.11.129.129,0,0,0-.082-.05\",transform:\"translate(1.793 0.707)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.322.285a2.753,2.753,0,0,0-2.13,1.3,1.918,1.918,0,0,0,0,1.671c.46,1,1.944,1.319,2.521,1.4a.18.18,0,0,0,.2-.205A4.45,4.45,0,0,1,5.569.075.047.047,0,0,0,5.6.027.034.034,0,0,0,5.566,0,15.517,15.517,0,0,0,2.322.285\",transform:\"translate(0 9.228)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.8A2.9,2.9,0,1,0,0,0\",transform:\"translate(16.595 1.629)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A9.435,9.435,0,0,1,1.423.206a2.337,2.337,0,0,1,1.712.978,1.381,1.381,0,0,1,0,1.184,2.361,2.361,0,0,1-1.712.984\",transform:\"translate(17.929 10.585)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.9,5.8A2.9,2.9,0,1,1,2.9,0\",transform:\"translate(2.388 1.629)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.268,0A9.435,9.435,0,0,0,1.845.206a2.334,2.334,0,0,0-1.711.978,1.375,1.375,0,0,0,0,1.184,2.358,2.358,0,0,0,1.711.984\",transform:\"translate(0.688 10.585)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.021,0c3.247,0,6.021.491,6.021,2.458S9.286,4.933,6.021,4.933C2.773,4.933,0,4.441,0,2.475S2.756,0,6.021,0Z\",transform:\"translate(4.917 11.21)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.858,7.717A3.859,3.859,0,1,1,7.716,3.858,3.845,3.845,0,0,1,3.858,7.717Z\",transform:\"translate(7.08 0.688)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.308,16.3a.694.694,0,0,1,.692-.7c2.443,0,5.356-.313,5.356-1.8,0-1.186-1.8-1.786-5.356-1.786-2.443,0-5.355.312-5.355,1.8,0,.332.1.76.853,1.132a5.118,5.118,0,0,0,1.167.381A.7.7,0,0,1,7.377,16.7a6.575,6.575,0,0,1-1.489-.491,2.574,2.574,0,0,1-1.628-2.383c0-3.2,5.072-3.2,6.739-3.2,1.844,0,6.74,0,6.74,3.179C17.74,17,12.668,17,11,17A.7.7,0,0,1,10.308,16.3Zm8.467-2.085a.7.7,0,0,1,.539-.823c.944-.2,1.177-.492,1.233-.611a.693.693,0,0,0,0-.6c-.118-.25-.577-.476-1.229-.606a9.063,9.063,0,0,0-1.341-.2A.7.7,0,0,1,18.069,10a10.223,10.223,0,0,1,1.534.221A2.855,2.855,0,0,1,21.8,11.588a2.085,2.085,0,0,1,0,1.8,2.891,2.891,0,0,1-2.2,1.376.621.621,0,0,1-.14.015A.694.694,0,0,1,18.775,14.218Zm-16.362.535A2.892,2.892,0,0,1,.2,13.374a2.091,2.091,0,0,1,0-1.8A2.865,2.865,0,0,1,2.417,10.2a10.04,10.04,0,0,1,1.52-.219.7.7,0,0,1,.094,1.389,8.737,8.737,0,0,0-1.328.193c-.671.133-1.13.359-1.25.61a.707.707,0,0,0,0,.6c.058.12.29.418,1.238.614a.7.7,0,0,1-.139,1.377A.74.74,0,0,1,2.413,14.754ZM8.191,8.222a.7.7,0,0,1-.122-.977.688.688,0,0,1,.972-.122A3.156,3.156,0,0,0,11,7.793a3.2,3.2,0,1,0-3.184-3.2.692.692,0,1,1-1.384,0A4.568,4.568,0,1,1,11,9.185,4.517,4.517,0,0,1,8.191,8.222Zm7.8-.714a.694.694,0,0,1,.692-.7,2.234,2.234,0,0,0,0-4.468.7.7,0,0,1,0-1.392,3.627,3.627,0,0,1,0,7.253A.694.694,0,0,1,15.991,7.508ZM1.714,4.548A3.629,3.629,0,0,1,5.328.913a.7.7,0,0,1,0,1.392,2.242,2.242,0,0,0,0,4.484.7.7,0,0,1,0,1.392A3.628,3.628,0,0,1,1.714,4.548Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.8A2.9,2.9,0,1,0,0,0\",transform:\"translate(16.595 1.629)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A9.435,9.435,0,0,1,1.423.206a2.337,2.337,0,0,1,1.712.978,1.381,1.381,0,0,1,0,1.184,2.361,2.361,0,0,1-1.712.984\",transform:\"translate(17.929 10.585)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.9,5.8A2.9,2.9,0,1,1,2.9,0\",transform:\"translate(2.388 1.629)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.268,0A9.435,9.435,0,0,0,1.845.206a2.334,2.334,0,0,0-1.711.978,1.375,1.375,0,0,0,0,1.184,2.358,2.358,0,0,0,1.711.984\",transform:\"translate(0.688 10.585)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.021,0c3.247,0,6.021.491,6.021,2.458S9.286,4.933,6.021,4.933C2.773,4.933,0,4.441,0,2.475S2.756,0,6.021,0Z\",transform:\"translate(4.917 11.21)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.858,7.717A3.859,3.859,0,1,1,7.716,3.858,3.845,3.845,0,0,1,3.858,7.717Z\",transform:\"translate(7.08 0.688)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.006,6.122C2.767,6.122,0,5.632,0,3.67S2.749,0,6.006,0c3.239,0,6.006,1.692,6.006,3.653S9.263,6.122,6.006,6.122Z\",transform:\"translate(4.966 11.246)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.85,7.7a3.837,3.837,0,1,0-.027,0Z\",transform:\"translate(7.122 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.166,5.643a2.9,2.9,0,0,0,2.149-2.8A2.9,2.9,0,0,0,0,0\",transform:\"translate(17.196 1.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0C1.754,0,3.252,1.189,3.252,2.251a1.64,1.64,0,0,1-1.3,1.49\",transform:\"translate(17.943 10.544)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.15,5.643A2.9,2.9,0,0,1,2.315,0\",transform:\"translate(2.434 1.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.252,0C1.5,0,0,1.189,0,2.251a1.64,1.64,0,0,0,1.3,1.49\",transform:\"translate(0.75 10.544)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};cn.displayName=\"IconlyPeople\",cn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var fn=st(cn),pn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.376,20a4.522,4.522,0,0,1-4.586-4.43v-4.8H.781a.77.77,0,1,1,0-1.541H4.791V4.45A4.534,4.534,0,0,1,9.386,0h5.039A4.521,4.521,0,0,1,19,4.44V15.56A4.519,4.519,0,0,1,14.4,20Zm1.817-9.229-1.652,1.6a.757.757,0,0,0,0,1.091.831.831,0,0,0,1.126,0l3.015-2.911a.744.744,0,0,0,0-1.09L10.667,6.55a.816.816,0,0,0-1.126,0,.756.756,0,0,0,0,1.09l1.652,1.59h-6.4v1.54Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.446A4.526,4.526,0,0,1,4.591,0H9.624A4.515,4.515,0,0,1,14.2,4.436V15.552A4.526,4.526,0,0,1,9.613,20H4.581A4.517,4.517,0,0,1,0,15.562V4.446Z\",transform:\"translate(4.796)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.537,3.134,10.569.225a.79.79,0,0,0-1.106,0,.762.762,0,0,0,0,1.089l1.625,1.593H.782a.77.77,0,1,0,0,1.54H11.091L9.465,6.043a.762.762,0,0,0,0,1.089.79.79,0,0,0,1.106,0l2.968-2.909a.761.761,0,0,0,0-1.091\",transform:\"translate(0 6.32)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(0.771 9.522)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(9.885 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942\",transform:\"translate(5.504 0.772)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.31,20A4.532,4.532,0,0,1,4.7,15.563v-.941a.8.8,0,0,1,1.6,0v.941a2.96,2.96,0,0,0,3.01,2.9h5.067A2.969,2.969,0,0,0,17.4,15.553a.8.8,0,0,1,1.6,0A4.543,4.543,0,0,1,14.377,20Zm-.039-6.547a.774.774,0,0,1,0-1.089l1.592-1.593H.766a.77.77,0,0,1,0-1.541H12.722a.766.766,0,0,1,.708.477.774.774,0,0,1-.167.84l-2.908,2.908a.765.765,0,0,1-1.084,0Zm8.127-1.4V4.437a2.959,2.959,0,0,0-3.01-2.9H9.32A2.969,2.969,0,0,0,6.3,4.447v.931a.8.8,0,0,1-1.6,0V4.447A4.543,4.543,0,0,1,9.32,0h5.067A4.533,4.533,0,0,1,19,4.437v7.614a.8.8,0,0,1-1.6,0ZM10.007,8.366l-.732-.726A.773.773,0,0,1,9.269,6.55a.763.763,0,0,1,1.084-.006l.734.728a.771.771,0,0,1,0,1.088.753.753,0,0,1-.544.229A.763.763,0,0,1,10.007,8.366Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(0.771 9.522)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(9.885 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942\",transform:\"translate(5.504 0.772)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(0.75 9.621)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(9.864 7.205)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.88C.33,1.3,1.67,0,7,0c7.1,0,7.1,2.31,7.1,9.25s0,9.25-7.1,9.25c-5.33,0-6.67-1.3-7-4.88\",transform:\"translate(5.259 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};pn.displayName=\"IconlyLogin\",pn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var mn=st(pn),hn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.517,20A4.482,4.482,0,0,1,0,15.56V4.45A4.493,4.493,0,0,1,4.528,0H9.492A4.48,4.48,0,0,1,14,4.44V9.23H7.9a.77.77,0,1,0,0,1.54H14v4.78A4.493,4.493,0,0,1,9.472,20ZM16.54,13.451a.773.773,0,0,1,0-1.09l1.6-1.59H14V9.23h4.14l-1.6-1.59a.773.773,0,0,1,0-1.09.764.764,0,0,1,1.09-.01l2.92,2.91a.766.766,0,0,1,.229.55.741.741,0,0,1-.229.54l-2.92,2.911a.762.762,0,0,1-1.09,0Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.447A4.492,4.492,0,0,1,4.525,0H9.486A4.481,4.481,0,0,1,14,4.437V15.553A4.492,4.492,0,0,1,9.474,20H4.515A4.481,4.481,0,0,1,0,15.563V4.447Z\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.98,3.134,10.135.225a.736.736,0,0,0-1.061,0,.785.785,0,0,0,0,1.089l1.559,1.593H.75a.77.77,0,0,0,0,1.54h9.885L9.076,6.042a.785.785,0,0,0,0,1.089.735.735,0,0,0,1.061,0L12.98,4.225a.784.784,0,0,0,0-1.091\",transform:\"translate(6.799 6.321)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943\",transform:\"translate(0.772 0.771)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.768 9.521)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.915,0,5.831\",transform:\"translate(16.881 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.33,19A4.284,4.284,0,0,1,0,14.775a.74.74,0,0,1,.75-.731.74.74,0,0,1,.75.731A2.8,2.8,0,0,0,4.33,17.537H9.077A2.79,2.79,0,0,0,11.9,14.785v-.894a.75.75,0,0,1,1.5,0v.894A4.273,4.273,0,0,1,9.077,19Zm11.543-6.219a.719.719,0,0,1,0-1.035l1.56-1.514H7.549a.732.732,0,1,1,0-1.464h11.7a.75.75,0,0,1,.693.453.721.721,0,0,1-.164.8l-2.846,2.764a.763.763,0,0,1-1.06,0ZM0,11.449V4.215A4.274,4.274,0,0,1,4.322,0H9.068A4.284,4.284,0,0,1,13.4,4.225v.885a.75.75,0,0,1-1.5,0V4.225A2.8,2.8,0,0,0,9.068,1.463H4.322A2.79,2.79,0,0,0,1.5,4.215v7.234a.742.742,0,0,1-.751.732A.741.741,0,0,1,0,11.449Zm16.594-3.5-.718-.692a.718.718,0,0,1,0-1.034.76.76,0,0,1,1.06-.005l.717.691a.719.719,0,0,1,.005,1.035.763.763,0,0,1-1.06.005Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943\",transform:\"translate(0.772 0.771)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.768 9.521)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.915,0,5.831\",transform:\"translate(16.881 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.75 9.621)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(16.864 7.205)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.88C-.33,1.3-1.67,0-7,0c-7.1,0-7.1,2.31-7.1,9.25s0,9.25,7.1,9.25c5.33,0,6.67-1.3,7-4.88\",transform:\"translate(14.36 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};hn.displayName=\"IconlyLogout\",hn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Mn=st(hn),Ln=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.23,4.791V.782a.769.769,0,0,1,1.533-.1l.007.1V4.791h4.78A4.527,4.527,0,0,1,20,9.17l0,.216v5.039A4.53,4.53,0,0,1,15.768,19l-.208,0H4.44A4.511,4.511,0,0,1,0,14.621L0,14.4V9.376A4.532,4.532,0,0,1,4.222,4.8l.208-.005h4.8v6.4L7.63,9.541a.755.755,0,0,0-1.09,0,.835.835,0,0,0-.08,1.027l.08.1,2.91,3.015a.746.746,0,0,0,1.015.071l.075-.071,2.91-3.015a.816.816,0,0,0,0-1.126.755.755,0,0,0-1-.077l-.086.077-1.59,1.652v-6.4Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.446A4.526,4.526,0,0,1,4.591,0H9.624A4.515,4.515,0,0,1,14.2,4.436V15.552A4.526,4.526,0,0,1,9.613,20H4.581A4.517,4.517,0,0,1,0,15.562V4.446Z\",transform:\"translate(20 4.796) rotate(90)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.537,3.134,10.569.225a.79.79,0,0,0-1.106,0,.762.762,0,0,0,0,1.089l1.625,1.593H.782a.77.77,0,1,0,0,1.54H11.091L9.465,6.043a.762.762,0,0,0,0,1.089.79.79,0,0,0,1.106,0l2.968-2.909a.761.761,0,0,0,0-1.091\",transform:\"translate(13.68 0) rotate(90)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(10.622 0.395) rotate(90)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(13.038 9.508) rotate(90)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942\",transform:\"translate(19.372 5.128) rotate(90)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.949,19a.8.8,0,0,1,0-1.6h7.614a2.958,2.958,0,0,0,2.9-3.01V9.32A2.969,2.969,0,0,0,15.553,6.3h-.931a.8.8,0,0,1,0-1.6h.931A4.542,4.542,0,0,1,20,9.32v5.067A4.533,4.533,0,0,1,15.563,19ZM0,14.377V9.31A4.532,4.532,0,0,1,4.437,4.7h.94a.8.8,0,0,1,0,1.6h-.94a2.96,2.96,0,0,0-2.9,3.01v5.067A2.969,2.969,0,0,0,4.447,17.4a.8.8,0,0,1,0,1.6A4.543,4.543,0,0,1,0,14.377Zm9.454-1.114L6.546,10.354a.765.765,0,0,1,0-1.084.774.774,0,0,1,1.089,0l1.593,1.592V.766a.771.771,0,0,1,1.542,0V12.722a.77.77,0,0,1-.77.766A.778.778,0,0,1,9.454,13.262Zm2.187-2.172a.754.754,0,0,1-.229-.544.763.763,0,0,1,.223-.54l.727-.732a.773.773,0,0,1,1.089-.006.763.763,0,0,1,.005,1.084l-.728.734a.77.77,0,0,1-1.087,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(10.622 0.395) rotate(90)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(13.038 9.508) rotate(90)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.617V3.684A3.684,3.684,0,0,1,3.685,0H8.569a3.675,3.675,0,0,1,3.675,3.675v11.14A3.685,3.685,0,0,1,8.559,18.5H3.674A3.675,3.675,0,0,1,0,14.825v-.942\",transform:\"translate(19.372 5.128) rotate(90)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,12.041V0\",transform:\"translate(9.379 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.832,0,2.916,2.928,0,0\",transform:\"translate(6.963 9.864)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.62,0C17.2.33,18.5,1.67,18.5,7c0,7.1-2.311,7.1-9.25,7.1S0,14.1,0,7C0,1.67,1.3.33,4.88,0\",transform:\"translate(0.75 5.259)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ln.displayName=\"IconlyDownload\",Ln.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var An=st(Ln),yn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.45,20.78A4.489,4.489,0,0,1,0,16.465l0-.213V11.288a4.485,4.485,0,0,1,4.231-4.5l.209,0H9.23v6.1a.769.769,0,0,0,1.533.107l.007-.107v-6.1h4.78A4.489,4.489,0,0,1,20,11.094l0,.213v4.955a4.487,4.487,0,0,1-4.231,4.513l-.209,0Zm4.781-14V2.64L7.64,4.24a.773.773,0,0,1-1.09,0,.763.763,0,0,1-.085-1L6.54,3.15,9.45.23A.764.764,0,0,1,10,0a.754.754,0,0,1,.45.149l.09.082,2.911,2.92a.771.771,0,0,1-1,1.165l-.085-.075-1.59-1.6V6.78Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.447A4.492,4.492,0,0,1,4.525,0H9.486A4.481,4.481,0,0,1,14,4.437V15.553A4.492,4.492,0,0,1,9.474,20H4.515A4.481,4.481,0,0,1,0,15.563V4.447Z\",transform:\"translate(0 20) rotate(-90)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.98,3.134,10.135.225a.736.736,0,0,0-1.061,0,.785.785,0,0,0,0,1.089l1.559,1.593H.75a.77.77,0,0,0,0,1.54h9.885L9.076,6.042a.785.785,0,0,0,0,1.089.735.735,0,0,0,1.061,0L12.98,4.225a.784.784,0,0,0,0-1.091\",transform:\"translate(6.321 13.201) rotate(-90)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943\",transform:\"translate(0.772 0.771)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.768 9.521)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.915,0,5.831\",transform:\"translate(16.881 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.045,19.25a.74.74,0,0,1,.731-.75,2.8,2.8,0,0,0,2.761-2.831V10.923A2.789,2.789,0,0,0,14.785,8.1h-.894a.75.75,0,0,1,0-1.5h.894A4.274,4.274,0,0,1,19,10.923V15.67A4.284,4.284,0,0,1,14.775,20,.74.74,0,0,1,14.045,19.25ZM4.215,20A4.273,4.273,0,0,1,0,15.679V10.932A4.284,4.284,0,0,1,4.225,6.6h.885a.75.75,0,0,1,0,1.5H4.225a2.8,2.8,0,0,0-2.761,2.831v4.747A2.79,2.79,0,0,0,4.215,18.5h7.234a.75.75,0,0,1,0,1.5Zm4.553-7.549V.75A.75.75,0,0,1,9.22.057a.721.721,0,0,1,.8.164l2.764,2.846a.763.763,0,0,1,0,1.06.719.719,0,0,1-1.035,0L10.232,2.566v9.885a.732.732,0,1,1-1.464,0ZM6.223,4.128a.76.76,0,0,1-.005-1.06l.691-.716a.719.719,0,0,1,1.035-.006.763.763,0,0,1,.005,1.06l-.692.718a.718.718,0,0,1-1.034,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.244,4.618V3.685A3.685,3.685,0,0,0,8.559,0H3.684A3.685,3.685,0,0,0,0,3.685v11.13A3.685,3.685,0,0,0,3.684,18.5H8.569a3.675,3.675,0,0,0,3.675-3.674v-.943\",transform:\"translate(0.772 0.771)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.768 9.521)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.915,0,5.831\",transform:\"translate(16.881 7.106)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.041.5H0\",transform:\"translate(7.75 9.621)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.928,2.916,0,5.832\",transform:\"translate(16.864 7.205)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.88C-.33,1.3-1.67,0-7,0c-7.1,0-7.1,2.31-7.1,9.25s0,9.25,7.1,9.25c5.33,0,6.67-1.3,7-4.88\",transform:\"translate(14.36 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};yn.displayName=\"IconlyUpload\",yn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var gn=st(yn),Wn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.532,19.043V17.118A8.443,8.443,0,0,1,0,8.783a.962.962,0,0,1,.968-.957.963.963,0,0,1,.969.957,6.563,6.563,0,0,0,13.125,0,.969.969,0,0,1,1.938,0,8.443,8.443,0,0,1-7.531,8.335v1.925a.968.968,0,0,1-1.937,0Zm.793-5.826a4.326,4.326,0,0,1-4.351-4.3V4.3A4.324,4.324,0,0,1,8.325,0h.35a4.325,4.325,0,0,1,4.352,4.3V8.92a4.326,4.326,0,0,1-4.352,4.3Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.031,0a.962.962,0,0,0-.969.957,6.563,6.563,0,0,1-13.125,0A.962.962,0,0,0,.969,0,.962.962,0,0,0,0,.957,8.443,8.443,0,0,0,7.532,9.293v1.925a.969.969,0,0,0,1.937,0V9.293A8.443,8.443,0,0,0,17,.957.962.962,0,0,0,16.031,0\",transform:\"translate(0 7.826)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.351,13.217H4.7a4.325,4.325,0,0,0,4.351-4.3V4.3A4.324,4.324,0,0,0,4.7,0H4.351A4.324,4.324,0,0,0,0,4.3V8.921a4.325,4.325,0,0,0,4.351,4.3\",transform:\"translate(3.973 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.4,7.4,0,1,0,14.808,0\",transform:\"translate(0.714 8.932)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,2.81V0\",transform:\"translate(7.642 16.336)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.661,3.661,0,0,1,3.66,3.66V8.21A3.66,3.66,0,0,1,3.912,11.87Z\",transform:\"translate(4.332 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.3,19.28V16.45a.712.712,0,0,1,.7-.72,6.673,6.673,0,0,0,6.593-6.737.7.7,0,1,1,1.408,0,8.118,8.118,0,0,1-7.3,8.14V19.28a.7.7,0,1,1-1.408,0ZM4.455,16.324A8.15,8.15,0,0,1,0,8.994a.712.712,0,0,1,.7-.72.713.713,0,0,1,.7.72A6.72,6.72,0,0,0,5.08,15.036.726.726,0,0,1,5.4,16a.7.7,0,0,1-.631.4A.675.675,0,0,1,4.455,16.324Zm3.42-2.932a4.362,4.362,0,0,1-4.309-4.4V4.4A4.362,4.362,0,0,1,7.875,0h.248a4.363,4.363,0,0,1,4.311,4.4V8.987a4.363,4.363,0,0,1-4.311,4.4ZM4.973,4.4V8.987a2.938,2.938,0,0,0,2.9,2.965h.248a2.938,2.938,0,0,0,2.9-2.965V4.4a2.938,2.938,0,0,0-2.9-2.965H7.875A2.938,2.938,0,0,0,4.973,4.4Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.4,7.4,0,1,0,14.808,0\",transform:\"translate(0.714 8.932)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,2.81V0\",transform:\"translate(7.642 16.336)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.661,3.661,0,0,1,3.66,3.66V8.21A3.66,3.66,0,0,1,3.912,11.87Z\",transform:\"translate(4.332 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.9 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A5.669,5.669,0,0,0,5.669,5.669,5.669,5.669,0,0,0,11.339,0\",transform:\"translate(1.465 11.178)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.339,7.923V5.669A5.669,5.669,0,0,0,0,5.669V7.923\",transform:\"translate(1.465 0)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,2.152V0\",transform:\"translate(6.634 16.848)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H14.268\",transform:\"translate(0 10.678)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Wn.displayName=\"IconlyVoice\",Wn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Vn=st(Wn),Zn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.532,19.043V17.118A8.443,8.443,0,0,1,0,8.783a.962.962,0,0,1,.968-.957.963.963,0,0,1,.969.957,6.563,6.563,0,0,0,13.125,0,.969.969,0,0,1,1.938,0,8.443,8.443,0,0,1-7.531,8.335v1.925a.968.968,0,0,1-1.937,0Zm.793-5.827a4.324,4.324,0,0,1-4.351-4.3V4.3A4.324,4.324,0,0,1,8.325,0h.35a4.345,4.345,0,0,1,4.189,3.131.388.388,0,0,1-.376.493H11.356a.616.616,0,0,0-.62.612h0a.616.616,0,0,0,.62.612H12.4a.618.618,0,1,1,0,1.236H11.356a.613.613,0,1,0,0,1.226H12.4a.618.618,0,1,1,0,1.236H11.356a.612.612,0,1,0,0,1.224h1.077a.387.387,0,0,1,.372.506,4.347,4.347,0,0,1-4.13,2.94Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.351,13.217H4.7a4.348,4.348,0,0,0,4.131-2.941.387.387,0,0,0-.372-.505H7.383a.612.612,0,1,1,0-1.225H8.427a.618.618,0,1,0,0-1.236H7.383a.613.613,0,1,1,0-1.225H8.427a.618.618,0,1,0,0-1.236H7.383a.613.613,0,1,1,0-1.225H8.515a.388.388,0,0,0,.376-.493A4.345,4.345,0,0,0,4.7,0h-.35A4.324,4.324,0,0,0,0,4.3V8.92a4.324,4.324,0,0,0,4.351,4.3\",transform:\"translate(3.974 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.031,0a.962.962,0,0,0-.969.957,6.563,6.563,0,0,1-13.125,0A.962.962,0,0,0,.969,0,.962.962,0,0,0,0,.957,8.443,8.443,0,0,0,7.532,9.293v1.925a.969.969,0,0,0,1.937,0V9.293A8.443,8.443,0,0,0,17,.957.962.962,0,0,0,16.031,0\",transform:\"translate(0 7.826)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.4,7.4,0,0,0,7.4,7.4a7.4,7.4,0,0,0,7.4-7.4\",transform:\"translate(0.714 8.932)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,2.81V0\",transform:\"translate(7.642 16.336)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.912,11.87H3.66A3.66,3.66,0,0,1,0,8.21V3.66A3.661,3.661,0,0,1,3.66,0h.252a3.66,3.66,0,0,1,3.66,3.66V8.21A3.659,3.659,0,0,1,3.912,11.87Z\",transform:\"translate(4.332 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H1.9\",transform:\"translate(10.002 4.401)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H2.855\",transform:\"translate(9.049 7.572)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.3,19.28V16.45a.711.711,0,0,1,.7-.72,6.674,6.674,0,0,0,6.593-6.736.7.7,0,1,1,1.408,0,8.116,8.116,0,0,1-7.3,8.138V19.28a.7.7,0,1,1-1.408,0ZM4.455,16.324A8.15,8.15,0,0,1,0,8.994a.712.712,0,0,1,.7-.719.713.713,0,0,1,.7.719A6.718,6.718,0,0,0,5.08,15.036.728.728,0,0,1,5.4,16a.7.7,0,0,1-.633.4A.68.68,0,0,1,4.455,16.324Zm3.42-2.933a4.362,4.362,0,0,1-4.31-4.4V4.4A4.362,4.362,0,0,1,7.875,0h.249a4.362,4.362,0,0,1,4.31,4.4v.509a.711.711,0,0,1-.7.718H9.855a.719.719,0,0,1,0-1.437H11.02a2.933,2.933,0,0,0-2.9-2.754H7.875A2.937,2.937,0,0,0,4.973,4.4V8.987a2.937,2.937,0,0,0,2.9,2.965h.249a2.938,2.938,0,0,0,2.9-2.965V8.824H8.916a.72.72,0,0,1,0-1.439h2.814a.712.712,0,0,1,.7.72v.883a4.362,4.362,0,0,1-4.31,4.4Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(0.75 0.75)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(-0.714 -0.714)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.4,7.4,0,0,0,7.4,7.4a7.4,7.4,0,0,0,7.4-7.4\",transform:\"translate(0.714 8.932)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.476,2.81V0\",transform:\"translate(7.642 16.336)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.66,11.87A3.66,3.66,0,0,1,0,8.211V3.66A3.66,3.66,0,0,1,3.66,0h.252a3.66,3.66,0,0,1,3.66,3.66v4.55a3.659,3.659,0,0,1-3.66,3.659Z\",transform:\"translate(4.332 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H1.9\",transform:\"translate(10.001 4.401)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.476H2.855\",transform:\"translate(9.049 7.572)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a})))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A5.386,5.386,0,0,0,5.386,5.386,5.385,5.385,0,0,0,10.772,0\",transform:\"translate(2.104 11.332)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.772,7.527V5.386A5.386,5.386,0,0,0,0,5.386V7.527\",transform:\"translate(2.104 0.713)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.475,2.044V0\",transform:\"translate(7.015 16.718)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.475H13.556\",transform:\"translate(0.712 10.857)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.475H2.985\",transform:\"translate(5.997 7.477)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1,.475H0\",transform:\"translate(6.988 4.707)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Zn.displayName=\"IconlyVoice2\",Zn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var jn=st(Zn),Cn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.132,19.961A2.916,2.916,0,0,1,2.2,17.134c-.313-2.847-.836-9.577-.846-9.645a.791.791,0,0,1,.191-.558A.708.708,0,0,1,2.068,6.7H15.939a.724.724,0,0,1,.523.234.745.745,0,0,1,.181.558c0,.068-.533,6.809-.837,9.645a2.918,2.918,0,0,1-3,2.827C11.515,19.99,10.249,20,9,20,7.681,20,6.387,19.99,5.132,19.961ZM.714,5.091A.73.73,0,0,1,0,4.357v-.38a.724.724,0,0,1,.714-.734H3.63A1.282,1.282,0,0,0,4.871,2.228l.152-.682A1.989,1.989,0,0,1,6.935,0h4.129a1.987,1.987,0,0,1,1.9,1.5l.163.73a1.28,1.28,0,0,0,1.241,1.016h2.916A.723.723,0,0,1,18,3.977v.38a.73.73,0,0,1-.713.734Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.289.792c0,.068-.533,6.809-.837,9.646a2.918,2.918,0,0,1-3,2.827c-1.293.029-2.56.039-3.806.039-1.323,0-2.616-.01-3.872-.039A2.917,2.917,0,0,1,.847,10.438C.534,7.591.011.86,0,.792A.794.794,0,0,1,.192.234.71.71,0,0,1,.715,0H14.585a.73.73,0,0,1,.523.234.748.748,0,0,1,.181.558\",transform:\"translate(1.354 6.696)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18,3.977a.722.722,0,0,0-.713-.733H14.371A1.281,1.281,0,0,1,13.13,2.227L12.967,1.5a1.985,1.985,0,0,0-1.9-1.5H6.936A1.988,1.988,0,0,0,5.023,1.546l-.153.682A1.283,1.283,0,0,1,3.63,3.244H.714A.722.722,0,0,0,0,3.977v.38a.729.729,0,0,0,.714.733H17.287A.729.729,0,0,0,18,4.357Z\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.191,0s-.543,6.735-.858,9.572a2.238,2.238,0,0,1-2.358,2.174c-2.609.047-5.221.05-7.829-.005A2.214,2.214,0,0,1,.857,9.579C.54,6.717,0,0,0,0\",transform:\"translate(2.134 7.468)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.958.5H0\",transform:\"translate(0.75 3.74)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.423,3.489A1.648,1.648,0,0,1,8.808,2.165L8.565.949A1.28,1.28,0,0,0,7.328,0H3.1A1.28,1.28,0,0,0,1.858.949L1.615,2.165A1.648,1.648,0,0,1,0,3.489\",transform:\"translate(4.018 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.191,20a.732.732,0,0,1,0-1.463h0c1.518,0,2.064-.008,3.583-.035a1.494,1.494,0,0,0,1.608-1.526c.3-2.8.832-9.5.836-9.571a.714.714,0,1,1,1.422.118c0,.067-.534,6.792-.84,9.613a2.917,2.917,0,0,1-3,2.828c-1.286.024-1.6.037-2.884.037Zm-4.065-.04a2.915,2.915,0,0,1-2.932-2.817C1.886,14.3,1.36,7.589,1.355,7.521a.727.727,0,0,1,.653-.788.73.73,0,0,1,.769.672c.005.067.53,6.752.836,9.574A1.475,1.475,0,0,0,5.154,18.5a.732.732,0,0,1-.014,1.462ZM.713,4.96a.732.732,0,0,1,0-1.463H3.907a.9.9,0,0,0,.878-.736l.238-1.22A1.99,1.99,0,0,1,6.932,0h4.136a1.977,1.977,0,0,1,1.9,1.494.735.735,0,0,1-.5.9.712.712,0,0,1-.874-.518.542.542,0,0,0-.52-.409H6.932a.542.542,0,0,0-.52.409L6.185,3.046a2.5,2.5,0,0,1-.139.451h11.24a.732.732,0,0,1,0,1.463Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.191,0s-.543,6.735-.858,9.572a2.238,2.238,0,0,1-2.358,2.174c-2.609.047-5.221.05-7.829-.005A2.214,2.214,0,0,1,.857,9.579C.54,6.717,0,0,0,0\",transform:\"translate(2.134 7.468)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.958.5H0\",transform:\"translate(0.75 3.74)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.423,3.489A1.648,1.648,0,0,1,8.808,2.165L8.565.949A1.28,1.28,0,0,0,7.328,0H3.1A1.28,1.28,0,0,0,1.858.949L1.615,2.165A1.648,1.648,0,0,1,0,3.489\",transform:\"translate(4.018 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.26,0c0,8.019,1.154,11.644-6.61,11.644S.064,8.019.064,0\",transform:\"translate(2.129 7.554)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.15.476H0\",transform:\"translate(0.715 4.004)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.874,3.766A3.207,3.207,0,0,0,3.448,0,3.207,3.207,0,0,0,.024,3.766\",transform:\"translate(5.341 0.714)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Cn.displayName=\"IconlyVoice\",Cn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var vn=st(Cn),Hn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.28,18a1.023,1.023,0,0,1,0-2.047h5.71a1.023,1.023,0,0,1,0,2.047ZM.848,17.576l-.8-3.451a2.132,2.132,0,0,1,.4-1.8L6.684,4.268a.313.313,0,0,1,.424-.054L9.73,6.3a.846.846,0,0,0,.647.183.945.945,0,0,0,.817-1.043,1.053,1.053,0,0,0-.329-.635L8.319,2.763a.378.378,0,0,1-.064-.526L9.241.957A2.584,2.584,0,0,1,13.03.7l1.475,1.172a3.062,3.062,0,0,1,1.146,1.752,2.4,2.4,0,0,1-.488,2.042L6.377,17.028a2.105,2.105,0,0,1-1.634.817l-3.5.042A.4.4,0,0,1,.848,17.576Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.7,0H1.007A1.017,1.017,0,0,0,0,1.023,1.016,1.016,0,0,0,1.007,2.047H6.7A1.016,1.016,0,0,0,7.709,1.023,1.017,1.017,0,0,0,6.7,0\",transform:\"translate(10.291 15.953)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.309.067l5.4,4.36a.31.31,0,0,1,.051.429l-6.4,8.335a2.1,2.1,0,0,1-1.63.817l-3.492.043a.4.4,0,0,1-.392-.312L.052,10.289a2.137,2.137,0,0,1,.4-1.8L6.883.118A.3.3,0,0,1,7.309.067\",transform:\"translate(0 3.837)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.977,5.665l-1.04,1.3a.3.3,0,0,1-.423.048c-1.265-1.023-4.5-3.65-5.4-4.377A.308.308,0,0,1,.069,2.2l1-1.246A2.572,2.572,0,0,1,4.85.7L6.321,1.871A3.066,3.066,0,0,1,7.464,3.623a2.406,2.406,0,0,1-.487,2.042\",transform:\"translate(8.144 0)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H6.377\",transform:\"translate(10.2 15.898)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.6.706A1.947,1.947,0,0,1,11.473.553l1.39,1.09A1.946,1.946,0,0,1,13.4,4.464L5.11,15.039a1.481,1.481,0,0,1-1.15.568l-3.2.041L.039,12.533a1.486,1.486,0,0,1,.277-1.252Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,4.794,3.758\",transform:\"translate(7.803 3.436)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.6,18a.788.788,0,0,1,0-1.575h6.624a.788.788,0,0,1,0,1.575ZM1.572,18a.782.782,0,0,1-.76-.609l-.752-3.27A2.355,2.355,0,0,1,.5,12.142l1.13-1.458a.772.772,0,0,1,1.094-.133.792.792,0,0,1,.131,1.105l-1.13,1.458a.773.773,0,0,0-.142.651l.61,2.652,2.7-.034a.755.755,0,0,0,.59-.3l8.61-11.1a1.063,1.063,0,0,0,.228-.907,1.732,1.732,0,0,0-.652-.949L12.218,1.983a1.256,1.256,0,0,0-1.886.028L9.194,3.477,11,4.94a.792.792,0,0,1,.121,1.106.771.771,0,0,1-1.1.122L8.233,4.717l-2.946,3.8a.773.773,0,0,1-1.1.133.8.8,0,0,1-.131-1.106L9.105,1.039a2.779,2.779,0,0,1,4.073-.3l1.444,1.145A3.3,3.3,0,0,1,15.835,3.74a2.65,2.65,0,0,1-.523,2.214L6.7,17.059a2.3,2.3,0,0,1-1.8.9L1.582,18Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H6.377\",transform:\"translate(10.2 15.898)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.6.706A1.947,1.947,0,0,1,11.473.553l1.39,1.09A1.946,1.946,0,0,1,13.4,4.464L5.11,15.039a1.481,1.481,0,0,1-1.15.568l-3.2.041L.039,12.533a1.486,1.486,0,0,1,.277-1.252Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,4.794,3.758\",transform:\"translate(7.803 3.436)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.5H6.377\",transform:\"translate(9.835 15.508)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.808.609h0a3.042,3.042,0,0,0-4.258.607l-6.752,9C-.941,12.529.7,15.4.7,15.4s3.244.746,4.958-1.539l6.752-8.995A3.042,3.042,0,0,0,11.808.609Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,4.864,3.651\",transform:\"translate(7.004 3.711)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Hn.displayName=\"IconlyEdit\",Hn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var bn=st(Hn),wn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15,20c-.11,0-.222,0-.332-.01H5.335C5.225,20,5.112,20,5,20a5.321,5.321,0,0,1-3.6-1.4A5.371,5.371,0,0,1,.01,14.665V5.335A5.372,5.372,0,0,1,1.4,1.4,5.328,5.328,0,0,1,5,0c.11,0,.221,0,.331.01h9.33c.109-.007.219-.01.328-.01a5.317,5.317,0,0,1,3.6,1.4,5.416,5.416,0,0,1,1.4,3.937v9.33A5.4,5.4,0,0,1,18.6,18.6,5.323,5.323,0,0,1,15,20ZM10.38,6.464a.214.214,0,0,0-.15.059L5.465,11.289a1.8,1.8,0,0,0-.529,1.238L4.875,14.9a.467.467,0,0,0,.13.339.478.478,0,0,0,.34.14H7.692a1.84,1.84,0,0,0,1.289-.53L15.7,8.1a1.586,1.586,0,0,0,0-2.227l-1.3-1.3a1.58,1.58,0,0,0-2.237,0l-.67.68a.265.265,0,0,0,0,.369c.016.016,1.589,1.579,1.618,1.619a.678.678,0,0,1,.18.459.66.66,0,0,1-.659.66.626.626,0,0,1-.44-.18L10.529,6.523A.212.212,0,0,0,10.38,6.464Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.664,19.99H5.335A5.343,5.343,0,0,1,1.4,18.6,5.346,5.346,0,0,1,.01,14.665V5.335A5.345,5.345,0,0,1,1.4,1.4,5.347,5.347,0,0,1,5.335.01h9.329A5.338,5.338,0,0,1,18.6,1.4,5.372,5.372,0,0,1,19.99,5.335v9.33A5.35,5.35,0,0,1,18.6,18.6a5.347,5.347,0,0,1-3.937,1.389\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.555,3.9,4,10.483A1.8,1.8,0,0,1,2.746,11H.458a.463.463,0,0,1-.331-.137A.457.457,0,0,1,0,10.532L.058,8.22A1.759,1.759,0,0,1,.574,7.01L5.219,2.356a.211.211,0,0,1,.292,0L7.14,3.979a.615.615,0,0,0,.428.176.643.643,0,0,0,.643-.644.661.661,0,0,0-.175-.449c-.029-.039-1.58-1.583-1.58-1.583a.26.26,0,0,1,0-.361L7.108.454a1.538,1.538,0,0,1,2.181,0l1.266,1.268a1.551,1.551,0,0,1,0,2.176\",transform:\"translate(4.5 4.5)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.742,0H5C1.928,0,0,2.177,0,5.259v8.314c0,3.082,1.919,5.259,5,5.259h8.824c3.085,0,5-2.177,5-5.259V9.545\",transform:\"translate(0.75 0.789)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.729,8.17,8.2.7a2.385,2.385,0,0,1,3.371,0L12.79,1.914a2.383,2.383,0,0,1,0,3.371L5.281,12.795a2.171,2.171,0,0,1-1.535.636H0l.094-3.78A2.17,2.17,0,0,1,.729,8.17Z\",transform:\"translate(6.099 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,4.566,4.566\",transform:\"translate(13.165 2.602)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.658,20C2.273,20,0,17.629,0,14.1a.738.738,0,0,1,1.476,0c0,2.69,1.641,4.427,4.182,4.427h8.678c2.543,0,4.185-1.737,4.185-4.427V10.146a.737.737,0,0,1,1.474,0V14.1c0,3.529-2.273,5.9-5.659,5.9ZM6,14.658A.739.739,0,0,1,5.26,13.9l.094-3.71a2.859,2.859,0,0,1,.84-1.957L13.543.9A3.086,3.086,0,0,1,17.9.9l1.2,1.2a3.072,3.072,0,0,1,0,4.351l-7.384,7.373a2.853,2.853,0,0,1-2.03.84Zm1.24-5.379a1.389,1.389,0,0,0-.41.952l-.073,2.954H9.683a1.39,1.39,0,0,0,.987-.408l7.385-7.372a1.606,1.606,0,0,0,0-2.268l-1.2-1.2a1.61,1.61,0,0,0-2.272,0l-.606.6,1.875,1.871a.738.738,0,0,1-1.044,1.042L12.938,3.587ZM0,9.707V5.938C0,2.409,2.274.038,5.658.038H9.336a.736.736,0,1,1,0,1.472H5.658c-2.541,0-4.182,1.738-4.182,4.428V9.707A.738.738,0,0,1,0,9.707Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.742,0H5C1.928,0,0,2.177,0,5.259v8.314c0,3.082,1.919,5.259,5,5.259h8.824c3.085,0,5-2.177,5-5.259V9.545\",transform:\"translate(0.75 0.789)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.729,8.17,8.2.7a2.385,2.385,0,0,1,3.371,0L12.79,1.914a2.383,2.383,0,0,1,0,3.371L5.281,12.795a2.171,2.171,0,0,1-1.535.636H0l.094-3.78A2.17,2.17,0,0,1,.729,8.17Z\",transform:\"translate(6.099 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,4.566,4.566\",transform:\"translate(13.165 2.602)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.25,0C2.313,0,0,2.313,0,9.25S2.313,18.5,9.25,18.5s9.25-2.313,9.25-9.25\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.071.6h0A2.4,2.4,0,0,0,6.682.809S2.313,5.744.8,7.457s-.4,4.077-.4,4.077,2.5.793,4-.9l5.886-6.647A2.4,2.4,0,0,0,10.071.6Z\",transform:\"translate(7.457 1.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.6,3.183\",transform:\"translate(13.009 3.801)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};wn.displayName=\"IconlyEditSquare\",wn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Sn=st(wn),Tn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20a10,10,0,1,1,10-9.994A10.008,10.008,0,0,1,10,20ZM8.861,6.03a1.338,1.338,0,0,0-.608.145,1.252,1.252,0,0,0-.541.6,6.314,6.314,0,0,0-.174.7A15.391,15.391,0,0,0,7.375,10a17.717,17.717,0,0,0,.145,2.441,1.1,1.1,0,0,1,.024.11,3.911,3.911,0,0,0,.207.768,1.21,1.21,0,0,0,1.072.656h.039a3.188,3.188,0,0,0,.9-.27,14.727,14.727,0,0,0,3.851-2.624l.058-.058a3.94,3.94,0,0,0,.27-.309,1.161,1.161,0,0,0,.231-.7,1.217,1.217,0,0,0-.251-.754l-.063-.068c-.064-.07-.162-.176-.254-.269A14.777,14.777,0,0,0,9.662,6.251,3.356,3.356,0,0,0,8.861,6.03Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10.012,10.012,0,0,1,20,10\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7,4a1.153,1.153,0,0,1-.239.71,3.861,3.861,0,0,1-.278.311l-.06.058A15.152,15.152,0,0,1,2.456,7.728,3.475,3.475,0,0,1,1.531,8h-.04a1.254,1.254,0,0,1-1.1-.66,5.462,5.462,0,0,1-.239-.885A17.629,17.629,0,0,1,0,4,15.213,15.213,0,0,1,.169,1.458,6.381,6.381,0,0,1,.348.748,1.275,1.275,0,0,1,.9.146,1.422,1.422,0,0,1,1.531,0a3.443,3.443,0,0,1,.825.224A15.224,15.224,0,0,1,6.413,2.906c.139.136.288.3.328.34A1.21,1.21,0,0,1,7,4\",transform:\"translate(7 6)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,0A10,10,0,1,1,0,10,10,10,0,0,1,10,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.16,3.969A14.915,14.915,0,0,1,1.432,6.512a3.983,3.983,0,0,1-.664.214.5.5,0,0,1-.459-.27,5.24,5.24,0,0,1-.166-.689A16.6,16.6,0,0,1,0,3.364,15.624,15.624,0,0,1,.158.879C.186.723.268.364.292.306A.5.5,0,0,1,.518.06.494.494,0,0,1,.768,0a3.49,3.49,0,0,1,.575.178A14.782,14.782,0,0,1,5.15,2.746c.068.073.255.269.286.309a.5.5,0,0,1,.011.6C5.414,3.7,5.223,3.9,5.16,3.969Z\",transform:\"translate(7.89 6.498)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.987,19.162a.724.724,0,1,1,.582-1.325,8.558,8.558,0,1,0-3.447-2.753.724.724,0,0,1-1.164.861,9.982,9.982,0,1,1,4.028,3.217ZM8.82,13.969a1.213,1.213,0,0,1-1.067-.651,4.442,4.442,0,0,1-.229-.868l0-.014A16.433,16.433,0,0,1,7.375,10a15.607,15.607,0,0,1,.163-2.526,5.615,5.615,0,0,1,.176-.707,1.2,1.2,0,0,1,.536-.591,1.273,1.273,0,0,1,.6-.145h.018a3.176,3.176,0,0,1,.8.223A14.714,14.714,0,0,1,13.6,8.909l.079.085c.09.095.21.224.238.259a1.218,1.218,0,0,1,.257.747,1.2,1.2,0,0,1-.23.708c-.036.049-.191.219-.284.318l-.049.052A15.033,15.033,0,0,1,9.76,13.707a3.712,3.712,0,0,1-.9.262Zm.141-6.236A14.873,14.873,0,0,0,8.822,10a15.235,15.235,0,0,0,.129,2.2c.011.066.03.161.05.248l.117-.045.006,0,.076-.03a13.772,13.772,0,0,0,3.347-2.281.449.449,0,0,0,.058-.059l.005-.005A.226.226,0,0,1,12.635,10l-.007-.007-.007-.007L12.537,9.9A13.736,13.736,0,0,0,9.131,7.6L9,7.55C8.98,7.636,8.969,7.694,8.961,7.733Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,0A10,10,0,1,1,0,10,10,10,0,0,1,10,0Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.16,3.969A14.915,14.915,0,0,1,1.432,6.512a3.983,3.983,0,0,1-.664.214.5.5,0,0,1-.459-.27,5.24,5.24,0,0,1-.166-.689A16.6,16.6,0,0,1,0,3.364,15.624,15.624,0,0,1,.158.879C.186.723.268.364.292.306A.5.5,0,0,1,.518.06.494.494,0,0,1,.768,0a3.49,3.49,0,0,1,.575.178A14.782,14.782,0,0,1,5.15,2.746c.068.073.255.269.286.309a.5.5,0,0,1,.011.6C5.414,3.7,5.223,3.9,5.16,3.969Z\",transform:\"translate(7.89 6.498)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.513,3.338c0-.9-4.584-3.8-5.1-3.276s-.57,5.983,0,6.552S5.513,4.242,5.513,3.338Z\",transform:\"translate(7.903 6.517)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Tn.displayName=\"IconlyPlay\",Tn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var On=st(Tn),In=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.581,20a.759.759,0,0,1-.353-.086l-3.6-1.863a8.458,8.458,0,0,1-2.446-1.817A8.25,8.25,0,0,1,.042,10.759L0,4.124A1.813,1.813,0,0,1,1.229,2.413L7.841.106A1.889,1.889,0,0,1,9.071.1l6.637,2.227a1.81,1.81,0,0,1,1.249,1.7L17,10.662a8.241,8.241,0,0,1-2.065,5.5A8.448,8.448,0,0,1,12.513,18L8.945,19.91a.787.787,0,0,1-.358.09ZM5.9,9.007a.764.764,0,0,0-.539.219.722.722,0,0,0,.007,1.039l1.916,1.843a.758.758,0,0,0,.528.212h.007a.761.761,0,0,0,.533-.219l3.9-3.844a.722.722,0,0,0-.006-1.039.769.769,0,0,0-1.067.005L7.808,10.545,6.429,9.219A.76.76,0,0,0,5.9,9.007Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.586,20a.782.782,0,0,1-.359-.086l-3.6-1.864a8.453,8.453,0,0,1-2.445-1.816A8.243,8.243,0,0,1,.042,10.76L0,4.124A1.813,1.813,0,0,1,1.228,2.412L7.841.107A1.882,1.882,0,0,1,9.071.1l6.637,2.227a1.809,1.809,0,0,1,1.249,1.7L17,10.663a8.243,8.243,0,0,1-2.066,5.5A8.423,8.423,0,0,1,12.513,18L8.944,19.909A.764.764,0,0,1,8.586,20\",transform:\"translate(0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.676,5.315A.764.764,0,0,1,2.141,5.1L.224,3.26A.722.722,0,0,1,.218,2.22a.77.77,0,0,1,1.068-.007L2.665,3.539,6.033.219A.77.77,0,0,1,7.1.212a.721.721,0,0,1,.007,1.039L3.209,5.1a.76.76,0,0,1-.533.219\",transform:\"translate(5.143 7.006)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.781,7.781,0,0,1-1.9,5.1,7.771,7.771,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.767,7.767,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z\",transform:\"translate(0.75 0.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.005,1.892,3.9,5.79,0\",transform:\"translate(5.823 7.913)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.147,19.912l-3.6-1.885A8.523,8.523,0,0,1,2.11,16.2,8.247,8.247,0,0,1,0,10.708a.748.748,0,0,1,.758-.736.747.747,0,0,1,.757.736,6.8,6.8,0,0,0,1.738,4.524,7.024,7.024,0,0,0,2.016,1.5l3.237,1.7,3.23-1.7a7,7,0,0,0,2.015-1.5,6.792,6.792,0,0,0,1.735-4.521V4.072a.335.335,0,0,0-.229-.315L8.614,1.49a.352.352,0,0,0-.228,0L1.744,3.757a.335.335,0,0,0-.229.315v1.9a.748.748,0,0,1-.757.737A.748.748,0,0,1,0,5.971v-1.9a1.815,1.815,0,0,1,1.243-1.7L7.885.1a1.932,1.932,0,0,1,1.23,0l6.643,2.266A1.814,1.814,0,0,1,17,4.072v6.64A8.238,8.238,0,0,1,14.9,16.2a8.486,8.486,0,0,1-2.438,1.831L8.866,19.912a.777.777,0,0,1-.719,0Zm-.9-7.81-1.91-1.856a.722.722,0,0,1,0-1.04.771.771,0,0,1,1.07,0l1.374,1.336,3.4-3.3a.772.772,0,0,1,1.07,0,.722.722,0,0,1,0,1.04L8.321,12.1a.771.771,0,0,1-1.07,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.781,7.781,0,0,1-1.9,5.1,7.771,7.771,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.767,7.767,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z\",transform:\"translate(0.75 0.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.005,1.892,3.9,5.79,0\",transform:\"translate(5.823 7.913)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.735,18.855a8.4,8.4,0,0,0,7.672-8.727c0-6.4.278-6.905-.337-7.521A12.6,12.6,0,0,0,7.735,0,12.589,12.589,0,0,0,.4,2.607c-.616.616-.338,1.117-.338,7.521A8.4,8.4,0,0,0,7.735,18.855Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.005,1.892,3.9,5.79,0\",transform:\"translate(5.886 7.87)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};In.displayName=\"IconlyShieldDone\",In.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Nn=st(In),xn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.586,20a.78.78,0,0,1-.363-.088l-3.6-1.863a8.4,8.4,0,0,1-2.435-1.814A8.2,8.2,0,0,1,.04,10.763L0,4.123A1.8,1.8,0,0,1,1.228,2.416L7.841.1a1.838,1.838,0,0,1,.61-.1,1.9,1.9,0,0,1,.618.1L15.7,2.328a1.8,1.8,0,0,1,1.248,1.7L17,10.664a8.248,8.248,0,0,1-2.074,5.492A8.366,8.366,0,0,1,12.511,18L8.938,19.912A.747.747,0,0,1,8.586,20ZM8.5,10.763h0l1.358,1.323a.757.757,0,0,0,.533.214.74.74,0,0,0,.534-.214.727.727,0,0,0,0-1.04L9.562,9.723,10.921,8.4a.717.717,0,0,0,.219-.509.742.742,0,0,0-.219-.531.773.773,0,0,0-1.067,0L8.5,8.684,7.136,7.359a.753.753,0,0,0-.53-.213.78.78,0,0,0-.537.213.741.741,0,0,0-.219.531A.715.715,0,0,0,6.07,8.4L7.428,9.723,6.07,11.047a.725.725,0,0,0,0,1.04A.76.76,0,0,0,6.6,12.3a.718.718,0,0,0,.534-.214l1.358-1.323Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.586,20a.778.778,0,0,1-.358-.086l-3.6-1.864a8.426,8.426,0,0,1-2.446-1.816A8.243,8.243,0,0,1,.041,10.76L0,4.124A1.812,1.812,0,0,1,1.227,2.412L7.84.107A1.883,1.883,0,0,1,9.07.1l6.638,2.227a1.809,1.809,0,0,1,1.249,1.7L17,10.663a8.241,8.241,0,0,1-2.065,5.5A8.437,8.437,0,0,1,12.514,18L8.944,19.909A.768.768,0,0,1,8.586,20\",transform:\"translate(0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.715,2.578,5.073,1.255a.721.721,0,0,0,0-1.039A.77.77,0,0,0,4,.215L2.647,1.537,1.289.215a.77.77,0,0,0-1.068,0,.721.721,0,0,0,0,1.039L1.579,2.578.221,3.9a.721.721,0,0,0,0,1.039.769.769,0,0,0,1.068,0L2.647,3.618,4,4.94a.769.769,0,0,0,1.068,0,.721.721,0,0,0,0-1.039Z\",transform:\"translate(5.853 7.147)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.787,7.787,0,0,1-1.9,5.1,7.785,7.785,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.753,7.753,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z\",transform:\"translate(0.75 0.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.758,3.758,0,0\",transform:\"translate(6.543 8.088)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.758,3.758,0\",transform:\"translate(6.543 8.088)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.147,19.912l-3.6-1.885A8.523,8.523,0,0,1,2.11,16.2,8.247,8.247,0,0,1,0,10.708a.748.748,0,0,1,.758-.736.747.747,0,0,1,.757.736,6.8,6.8,0,0,0,1.738,4.524,7.024,7.024,0,0,0,2.016,1.5l3.237,1.7,3.23-1.7a7.009,7.009,0,0,0,2.015-1.5,6.792,6.792,0,0,0,1.735-4.521V4.072a.335.335,0,0,0-.229-.315L8.614,1.49a.352.352,0,0,0-.228,0L1.744,3.757a.334.334,0,0,0-.229.315v1.9a.748.748,0,0,1-.757.737A.748.748,0,0,1,0,5.971v-1.9a1.815,1.815,0,0,1,1.243-1.7L7.885.1A1.929,1.929,0,0,1,9.114.1l6.644,2.266A1.814,1.814,0,0,1,17,4.072v6.64A8.238,8.238,0,0,1,14.9,16.2a8.5,8.5,0,0,1-2.438,1.831L8.866,19.912a.777.777,0,0,1-.719,0Zm1.7-7.748L8.486,10.841,7.125,12.163a.771.771,0,0,1-1.07,0,.72.72,0,0,1,0-1.04L7.416,9.8,6.055,8.477a.719.719,0,0,1,0-1.04.772.772,0,0,1,1.07,0L8.486,8.762,9.848,7.438a.772.772,0,0,1,1.07,0,.721.721,0,0,1,0,1.04L9.556,9.8l1.362,1.322a.722.722,0,0,1,0,1.04.771.771,0,0,1-1.07,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.615,2.375A1.089,1.089,0,0,1,15.344,3.4v6.773a7.787,7.787,0,0,1-1.9,5.1,7.785,7.785,0,0,1-2.2,1.7L7.678,18.9,4.114,16.972a7.753,7.753,0,0,1-2.208-1.7A7.783,7.783,0,0,1,0,10.172V3.4A1.089,1.089,0,0,1,.729,2.375L7.311.062a1.09,1.09,0,0,1,.722,0Z\",transform:\"translate(0.75 0.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.879,1.879,0,3.758,1.879,1.879,0,0,1.879,1.879,3.758,0,1.879,1.879,3.758,3.758Z\",transform:\"translate(6.543 8.088)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.736,18.855a8.4,8.4,0,0,0,7.672-8.727c0-6.4.278-6.905-.338-7.521A12.592,12.592,0,0,0,7.736,0,12.6,12.6,0,0,0,.4,2.607c-.616.616-.338,1.117-.338,7.521A8.4,8.4,0,0,0,7.736,18.855Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.759,3.758,0,0\",transform:\"translate(6.605 8.066)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.758,3.759,0\",transform:\"translate(6.605 8.066)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};xn.displayName=\"IconlyShieldFail\",xn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Pn=st(xn),En=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.99,16C5.861,16,2.148,13.115.059,8.281a.724.724,0,0,1,0-.571C2.146,2.882,5.858,0,9.99,0H10a9.306,9.306,0,0,1,5.737,2.046,14.235,14.235,0,0,1,4.2,5.664.725.725,0,0,1,0,.571C17.851,13.115,14.135,16,10,16ZM6.1,8A3.9,3.9,0,1,0,10,4.121,3.89,3.89,0,0,0,6.1,8ZM7.562,8a2.487,2.487,0,0,1,.049-.475H7.66a2,2,0,0,0,2-1.921A1.989,1.989,0,0,1,10,5.574,2.419,2.419,0,1,1,7.562,8Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,16H9.99C5.861,16,2.148,13.114.058,8.281a.723.723,0,0,1,0-.571C2.145,2.882,5.858,0,9.99,0H10a9.307,9.307,0,0,1,5.737,2.046,14.231,14.231,0,0,1,4.2,5.664.723.723,0,0,1,0,.571C17.851,13.114,14.135,16,10,16ZM10,4.121A3.874,3.874,0,1,0,13.892,8,3.9,3.9,0,0,0,10,4.121Z\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.868,2.424A2.434,2.434,0,0,1,0,2.424,2.521,2.521,0,0,1,.049,1.95H.1A2,2,0,0,0,2.1.029,2.043,2.043,0,0,1,2.439,0,2.43,2.43,0,0,1,4.868,2.424\",transform:\"translate(7.563 5.573)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.323,3.162A3.162,3.162,0,1,1,3.161,0,3.162,3.162,0,0,1,6.323,3.162Z\",transform:\"translate(6.839 4.891)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.248,14.6c3.808,0,7.291-2.738,9.252-7.3C16.539,2.738,13.056,0,9.248,0h0C5.444,0,1.961,2.738,0,7.3c1.961,4.564,5.444,7.3,9.252,7.3Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,16h0C5.863,16,2.147,13.115.059,8.287a.721.721,0,0,1,0-.573C2.147,2.886,5.863,0,10,0h0c4.136,0,7.852,2.886,9.939,7.714a.721.721,0,0,1,0,.573,17.051,17.051,0,0,1-.823,1.654.734.734,0,0,1-1,.277.726.726,0,0,1-.277-.991c.221-.391.432-.8.625-1.228C16.6,3.9,13.453,1.456,10,1.455S3.4,3.9,1.531,8C3.4,12.1,6.547,14.545,10,14.545a8.108,8.108,0,0,0,5.6-2.4.736.736,0,0,1,1.033.024.722.722,0,0,1-.023,1.027A9.545,9.545,0,0,1,10,16ZM8,11.324a.723.723,0,0,1-.25-1,.732.732,0,0,1,1-.247A2.419,2.419,0,1,0,7.564,8,.731.731,0,0,1,6.1,8,3.892,3.892,0,1,1,8,11.324Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.323,3.162A3.162,3.162,0,1,1,3.161,0,3.162,3.162,0,0,1,6.323,3.162Z\",transform:\"translate(6.839 4.891)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.248,14.6c3.808,0,7.291-2.738,9.252-7.3C16.539,2.738,13.056,0,9.248,0h0C5.444,0,1.961,2.738,0,7.3c1.961,4.564,5.444,7.3,9.252,7.3Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{id:\"Stroke_1\",\"data-name\":\"Stroke 1\",d:\"M6.324,3.162A3.162,3.162,0,1,1,3.162,0,3.162,3.162,0,0,1,6.324,3.162Z\",transform:\"translate(6.84 4.89)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{id:\"Stroke_3\",\"data-name\":\"Stroke 3\",d:\"M0,7.3c0,3.28,4.142,7.3,9.252,7.3S18.5,10.585,18.5,7.3,14.361,0,9.252,0,0,4.022,0,7.3Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};En.displayName=\"IconlyShow\",En.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Dn=st(En),$n=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.784,16.783a.738.738,0,0,1-.088-.925l.029-.04L16.156,1.257A.247.247,0,0,0,16.2,1.2a.327.327,0,0,0,.049-.059l.917-.925A.743.743,0,0,1,17.691,0a.723.723,0,0,1,.514.214.722.722,0,0,1,.219.522.722.722,0,0,1-.219.521L16.43,3.049a14.776,14.776,0,0,1,3.513,5.159.765.765,0,0,1,0,.581C17.851,13.7,14.135,16.626,10,16.626h-.01a9.091,9.091,0,0,1-5.279-1.752l-1.893,1.91A.728.728,0,0,1,2.3,17,.7.7,0,0,1,1.784,16.783ZM7.8,11.752A3.892,3.892,0,0,0,13.892,8.5a3.989,3.989,0,0,0-.673-2.216L12.155,7.362A2.481,2.481,0,0,1,12.429,8.5,2.444,2.444,0,0,1,10,10.955a2.409,2.409,0,0,1-1.132-.275ZM.059,8.793a.747.747,0,0,1,0-.58C2.147,3.309,5.864.385,9.992.385H10a8.851,8.851,0,0,1,4,.965L10.743,4.639A4.506,4.506,0,0,0,10,4.569,3.92,3.92,0,0,0,6.1,8.508a4.566,4.566,0,0,0,.068.748L2.556,12.9A15.833,15.833,0,0,1,.059,8.793Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.99,16.244a9.053,9.053,0,0,1-5.278-1.752L7.8,11.372a3.892,3.892,0,0,0,6.088-3.249,4.007,4.007,0,0,0-.673-2.216l3.21-3.239a14.862,14.862,0,0,1,3.512,5.159.749.749,0,0,1,0,.581c-2.088,4.9-5.805,7.836-9.941,7.836ZM.059,8.408a.749.749,0,0,1,0-.581C2.147,2.924,5.864,0,9.99,0H10a8.862,8.862,0,0,1,4,.964l-3.259,3.29A4.487,4.487,0,0,0,10,4.184,3.919,3.919,0,0,0,6.1,8.123a4.676,4.676,0,0,0,.068.748l-3.61,3.642A15.827,15.827,0,0,1,.059,8.408Z\",transform:\"translate(0 0.382)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.212,16.784a.737.737,0,0,1-.088-.926l.029-.04L10.622,5.256l3.092-3.121.869-.877a.236.236,0,0,0,.049-.058.235.235,0,0,0,.049-.059L15.6.214a.734.734,0,0,1,1.034,1.043L14.856,3.049l-3.21,3.239-10.4,10.5A.725.725,0,0,1,.729,17,.706.706,0,0,1,.212,16.784Zm7.083-6.1,3.288-3.317a2.467,2.467,0,0,1-2.156,3.594A2.4,2.4,0,0,1,7.3,10.679Z\",transform:\"translate(1.574)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.925,5.395A3.123,3.123,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925\",transform:\"translate(6.836 5.472)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.537,0A3.158,3.158,0,0,1,0,2.542\",transform:\"translate(10.568 9.199)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.9,12.638A13.43,13.43,0,0,1,0,7.3,13.592,13.592,0,0,1,3.934,1.938,8.534,8.534,0,0,1,9.25,0a8.554,8.554,0,0,1,5.336,1.957\",transform:\"translate(0.75 1.334)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.98,0a15.359,15.359,0,0,1,1.8,3.146c-1.967,4.557-5.443,7.3-9.25,7.3A7.981,7.981,0,0,1,0,10.035\",transform:\"translate(7.468 5.491)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.774,0,0,15.774\",transform:\"translate(2.113 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.58,16.789a.712.712,0,0,1,0-1.018l5.2-5.116A3.749,3.749,0,0,1,6.1,8.5,3.876,3.876,0,0,1,10,4.659a3.919,3.919,0,0,1,2.191.666l2.034-2a7.712,7.712,0,0,0-9.1.45A12.62,12.62,0,0,0,1.532,8.5a14.426,14.426,0,0,0,1.4,2.43.711.711,0,0,1-.172,1,.738.738,0,0,1-1.021-.169A15.956,15.956,0,0,1,.059,8.784a.707.707,0,0,1,0-.569A14.218,14.218,0,0,1,4.221,2.642a9.23,9.23,0,0,1,11.056-.355L17.385.212a.739.739,0,0,1,1.035,0,.711.711,0,0,1,0,1.019L2.615,16.789a.739.739,0,0,1-1.035,0ZM7.561,8.5a2.324,2.324,0,0,0,.286,1.1L11.12,6.38A2.458,2.458,0,0,0,10,6.1,2.423,2.423,0,0,0,7.561,8.5Zm-.33,7.479a.719.719,0,0,1-.462-.912.736.736,0,0,1,.925-.456A7.369,7.369,0,0,0,10,14.983c3.445,0,6.592-2.417,8.468-6.483a14.169,14.169,0,0,0-1.59-2.67.712.712,0,0,1,.145-1.009.739.739,0,0,1,1.024.142A15.9,15.9,0,0,1,19.94,8.214a.715.715,0,0,1,0,.571c-2.1,4.783-5.813,7.639-9.941,7.639A8.867,8.867,0,0,1,7.231,15.98Zm2.618-4.289a.723.723,0,0,1,.59-.839A2.412,2.412,0,0,0,12.39,8.928a.733.733,0,0,1,.85-.582.72.72,0,0,1,.59.837,3.871,3.871,0,0,1-3.13,3.088.82.82,0,0,1-.132.011A.728.728,0,0,1,9.849,11.691Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.925,5.395A3.123,3.123,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925\",transform:\"translate(6.836 5.472)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.537,0A3.158,3.158,0,0,1,0,2.542\",transform:\"translate(10.568 9.199)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.9,12.638A13.43,13.43,0,0,1,0,7.3,13.592,13.592,0,0,1,3.934,1.938,8.534,8.534,0,0,1,9.25,0a8.554,8.554,0,0,1,5.336,1.957\",transform:\"translate(0.75 1.334)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.98,0a15.359,15.359,0,0,1,1.8,3.146c-1.967,4.557-5.443,7.3-9.25,7.3A7.981,7.981,0,0,1,0,10.035\",transform:\"translate(7.468 5.491)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.774,0,0,15.774\",transform:\"translate(2.113 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.67,12.89C1.44,11.43,0,9.23,0,7.3,0,4.02,4.14,0,9.25,0a10.118,10.118,0,0,1,5.59,1.71\",transform:\"translate(0.75 1.34)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.48,0a5.9,5.9,0,0,1,1.41,3.53c0,3.28-4.15,7.3-9.26,7.3A9.888,9.888,0,0,1,0,10.47\",transform:\"translate(7.37 5.11)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.925,5.4A3.12,3.12,0,0,1,0,3.166,3.16,3.16,0,0,1,5.394.925\",transform:\"translate(6.841 5.472)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.537,0A3.158,3.158,0,0,1,0,2.542\",transform:\"translate(10.573 9.199)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.774,0,0,15.774\",transform:\"translate(2.118 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};$n.displayName=\"IconlyHide\",$n.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var qn=st($n),Un=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.122,14.4a3.439,3.439,0,1,1,3.439,3.379A3.41,3.41,0,0,1,13.122,14.4ZM1.508,15.921a1.482,1.482,0,1,1,0-2.963H8.083a1.482,1.482,0,1,1,0,2.963ZM0,3.379A3.409,3.409,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.379,3.409,3.409,0,0,1,3.439,6.758,3.41,3.41,0,0,1,0,3.379ZM11.918,4.86a1.481,1.481,0,1,1,0-2.962h6.575a1.481,1.481,0,1,1,0,2.962Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.083,0H1.508A1.5,1.5,0,0,0,0,1.481,1.5,1.5,0,0,0,1.508,2.963H8.083A1.5,1.5,0,0,0,9.591,1.481,1.5,1.5,0,0,0,8.083,0\",transform:\"translate(0 12.958)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.59,1.48A1.5,1.5,0,0,0,8.083,0H1.508A1.5,1.5,0,0,0,0,1.48,1.5,1.5,0,0,0,1.508,2.962H8.083A1.5,1.5,0,0,0,9.59,1.48\",transform:\"translate(10.41 1.898)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.878,3.379a3.409,3.409,0,0,1-3.439,3.38A3.41,3.41,0,0,1,0,3.379,3.41,3.41,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.379\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.878,3.38A3.409,3.409,0,0,1,3.439,6.758,3.41,3.41,0,0,1,0,3.38,3.41,3.41,0,0,1,3.439,0,3.409,3.409,0,0,1,6.878,3.38\",transform:\"translate(13.122 11.02)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.234.588H0\",transform:\"translate(0.883 14.898)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.76,2.88A2.88,2.88,0,1,1,2.88,0,2.88,2.88,0,0,1,5.76,2.88Z\",transform:\"translate(13.358 12.607)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.588H7.235\",transform:\"translate(11.883 3.174)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.88A2.88,2.88,0,1,0,2.88,0,2.879,2.879,0,0,0,0,2.88Z\",transform:\"translate(0.883 0.882)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.476,15.286a3.741,3.741,0,0,1,3.762-3.713,3.817,3.817,0,0,1,.84.093.87.87,0,0,1,.666,1.041.884.884,0,0,1-1.057.656,2.025,2.025,0,0,0-2.447,1.923,2,2,0,0,0,4,0,1.955,1.955,0,0,0-.027-.328.873.873,0,0,1,.725-1,.882.882,0,0,1,1.015.716,3.648,3.648,0,0,1,.051.615,3.762,3.762,0,0,1-7.524,0Zm-11.594.87a.871.871,0,1,1,0-1.742H8.117a.871.871,0,1,1,0,1.742ZM0,3.713A3.637,3.637,0,0,1,.052,3.1a.881.881,0,0,1,1.015-.716.873.873,0,0,1,.725,1,2.063,2.063,0,0,0-.027.328A2,2,0,1,0,3.318,1.791a.88.88,0,0,1-1.06-.651A.869.869,0,0,1,2.918.1,3.765,3.765,0,0,1,7.525,3.713,3.742,3.742,0,0,1,3.763,7.428,3.743,3.743,0,0,1,0,3.713Zm11.884.871a.871.871,0,1,1,0-1.742h7.234a.871.871,0,1,1,0,1.742Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.234.588H0\",transform:\"translate(0.883 14.898)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.76,2.88A2.88,2.88,0,1,1,2.88,0,2.88,2.88,0,0,1,5.76,2.88Z\",transform:\"translate(13.358 12.607)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.588H7.235\",transform:\"translate(11.883 3.174)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.88A2.88,2.88,0,1,0,2.88,0,2.879,2.879,0,0,0,0,2.88Z\",transform:\"translate(0.883 0.882)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.473.447H0\",transform:\"translate(0.671 13.435)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.722C0,4.764.681,5.444,2.722,5.444s2.722-.68,2.722-2.722S4.763,0,2.722,0,0,.68,0,2.722Z\",transform:\"translate(11.205 11.162)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,.447H6.472\",transform:\"translate(10.177 2.947)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.444,2.722C5.444.681,4.764,0,2.723,0S0,.681,0,2.722.681,5.444,2.723,5.444,5.444,4.764,5.444,2.722Z\",transform:\"translate(0.671 0.671)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Un.displayName=\"IconlyFilter\",Un.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Rn=st(Un),_n=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.085,19.874a.8.8,0,0,1-.356-.67V14.389a.558.558,0,0,1,.551-.565l4.855.015a.558.558,0,0,1,.548.565v2.731a.8.8,0,0,1-.454.724L7.823,19.929A.765.765,0,0,1,7.5,20,.754.754,0,0,1,7.085,19.874Zm5.35-7.83-5.447-.016a.591.591,0,0,1-.437-.2L.574,5.258A2.234,2.234,0,0,1,0,3.758V2.193A2.161,2.161,0,0,1,2.128,0H17.872A2.16,2.16,0,0,1,20,2.192V3.724a2.225,2.225,0,0,1-.637,1.563l-6.505,6.58a.582.582,0,0,1-.416.176Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.571,10.594,17.427,4.72A1.981,1.981,0,0,0,18,3.324V1.6C18,.52,17.142,0,16.084,0H1.916C.858,0,0,.52,0,1.6V3.355A1.983,1.983,0,0,0,.518,4.694L5.9,10.563a.537.537,0,0,0,.393.175l4.9.014a.528.528,0,0,0,.38-.158\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0V6.6a.715.715,0,0,0,.319.6.681.681,0,0,0,.375.113.7.7,0,0,0,.289-.063L4.95,5.4a.71.71,0,0,0,.407-.646V0Z\",transform:\"translate(6.056 10.686)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.564,18l4.3-2.023v-5.3L17.6,3.838a1.385,1.385,0,0,0,.4-.976v-1.5A1.345,1.345,0,0,0,16.677,0H1.323A1.345,1.345,0,0,0,0,1.366V2.9a1.389,1.389,0,0,0,.357.934l6.207,6.843Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.2,17.587a.727.727,0,0,1,.338-.952l3.486-1.67V10.542a.726.726,0,0,1,.209-.51l6.22-6.294a.547.547,0,0,0,.158-.385V1.974a.535.535,0,0,0-.527-.541H8.074A.707.707,0,0,1,7.379.715.707.707,0,0,1,8.074,0h8.009A1.949,1.949,0,0,1,18,1.974V3.353a2.012,2.012,0,0,1-.575,1.408l-6.011,6.08v4.58a.716.716,0,0,1-.4.648L7.124,17.933A.68.68,0,0,1,6.831,18,.7.7,0,0,1,6.2,17.587Zm-.143-3.346v-3.3L.517,4.784A2.034,2.034,0,0,1,0,3.419V2A1.959,1.959,0,0,1,1.916,0H4.7a.711.711,0,0,1,.695.725.71.71,0,0,1-.695.724H1.916A.538.538,0,0,0,1.39,2V3.419a.564.564,0,0,0,.142.374l5.727,6.368a.737.737,0,0,1,.188.494v3.586a.7.7,0,1,1-1.39,0Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9,18c-2.011,0-2.02-2.006-2.02-5.4S0,6.827,0,3.1C0-.047,2.79,0,9,0s9-.047,9,3.1c0,3.726-6.983,6.1-6.983,9.5S11.014,18,9,18Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};_n.displayName=\"IconlyFilter2\",_n.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Fn=st(_n),zn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.332,20H5.666C2.277,20,0,17.622,0,14.083V5.917C0,2.378,2.277,0,5.666,0h8.667C17.723,0,20,2.378,20,5.917v8.167C20,17.622,17.722,20,14.332,20ZM6.307,13.241c-.5,0-1.018.383-1.724,1.279l-.038.048c-.45.569-.912,1.155-1.371,1.726a.8.8,0,0,0-.162.633.716.716,0,0,0,.328.5A4.112,4.112,0,0,0,5.529,18h8.428a4.524,4.524,0,0,0,1.407-.214,3.717,3.717,0,0,0,2.261-2.111,3.756,3.756,0,0,0,.2-2.741,2.263,2.263,0,0,0-.513-.784l0,0a10.811,10.811,0,0,0-1.868-1.6,1.429,1.429,0,0,0-.76-.235,1.874,1.874,0,0,0-1.363.806c-.177.238-.33.491-.492.759l-.1.171-.007.012a5.683,5.683,0,0,1-1.96,2.218,2.487,2.487,0,0,1-1.208.335,3.516,3.516,0,0,1-1.959-.785,5.491,5.491,0,0,0-.827-.49A1.12,1.12,0,0,0,6.307,13.241ZM6.5,4A2.5,2.5,0,1,0,9,6.5,2.5,2.5,0,0,0,6.5,4Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.333,20H5.666C2.277,20,0,17.623,0,14.084V5.917C0,2.378,2.277,0,5.666,0h8.668C17.723,0,20,2.378,20,5.917v8.168C20,17.623,17.723,20,14.333,20\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M2.515,13.567a4.184,4.184,0,0,1-2.177-.558.736.736,0,0,1-.165-1.1c.47-.57.934-1.142,1.4-1.719.892-1.1,1.492-1.424,2.161-1.143a5.581,5.581,0,0,1,.823.475,2.807,2.807,0,0,0,3.149.436A5.617,5.617,0,0,0,9.664,7.8c.194-.311.378-.621.592-.9a1.585,1.585,0,0,1,2.111-.553A10.687,10.687,0,0,1,14.229,7.9a2.181,2.181,0,0,1,.509.76,3.564,3.564,0,0,1-.2,2.656,3.635,3.635,0,0,1-2.247,2.046,4.585,4.585,0,0,1-1.4.207ZM1.1,2.486A2.485,2.485,0,1,1,3.588,4.971,2.488,2.488,0,0,1,1.1,2.486Z\",transform:\"translate(3.172 4.189)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.46,5.149V13.3c0,3.02-1.89,5.15-4.91,5.15H4.9c-3.02,0-4.9-2.13-4.9-5.15V5.149C0,2.129,1.89,0,4.9,0h8.65C16.57,0,18.46,2.129,18.46,5.149Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.14,1.529,2.527a1.4,1.4,0,0,1,2.032-.008l.885.9a1.433,1.433,0,0,0,2.131-.094L8.806.617a1.687,1.687,0,0,1,2.515-.1L13.4,2.655\",transform:\"translate(3.281 10.292)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.507,1.754A1.754,1.754,0,1,1,1.753,0,1.755,1.755,0,0,1,3.507,1.754Z\",transform:\"translate(4.806 5.38)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.98,19.949a.75.75,0,0,1,0-1.5H14.3c2.527,0,4.16-1.727,4.16-4.4V5.9c0-2.673-1.633-4.4-4.16-4.4H5.65C3.129,1.5,1.5,3.226,1.5,5.9V14.05c0,2.672,1.629,4.4,4.15,4.4h.721a.75.75,0,0,1,0,1.5H5.65c-3.38,0-5.65-2.372-5.65-5.9V5.9C0,2.371,2.271,0,5.65,0H14.3c3.386,0,5.66,2.371,5.66,5.9V14.05c0,3.528-2.274,5.9-5.66,5.9ZM2.766,14.978a.751.751,0,0,1-.028-1.061L4.267,12.3a2.126,2.126,0,0,1,1.554-.672,2.345,2.345,0,0,1,1.561.661l.881.9a.65.65,0,0,0,.517.2.677.677,0,0,0,.5-.248l2.228-2.713a2.444,2.444,0,0,1,1.783-.887,2.471,2.471,0,0,1,1.849.739l2.077,2.141a.75.75,0,0,1-1.077,1.045l-2.077-2.141a.893.893,0,0,0-.711-.285.929.929,0,0,0-.685.342L10.438,14.1a2.185,2.185,0,0,1-1.59.795,2.244,2.244,0,0,1-1.655-.652l-.886-.9a.52.52,0,0,0-.479-.206.647.647,0,0,0-.472.2l-1.53,1.615a.752.752,0,0,1-1.06.03ZM4.056,7.133a2.5,2.5,0,1,1,2.5,2.5A2.507,2.507,0,0,1,4.056,7.133Zm1.5,0a1,1,0,1,0,1-1A1.005,1.005,0,0,0,5.557,7.133Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M18.46,5.149V13.3c0,3.02-1.89,5.15-4.91,5.15H4.9c-3.02,0-4.9-2.13-4.9-5.15V5.149C0,2.129,1.89,0,4.9,0h8.65C16.57,0,18.46,2.129,18.46,5.149Z\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,4.14,1.529,2.527a1.4,1.4,0,0,1,2.032-.008l.885.9a1.433,1.433,0,0,0,2.131-.094L8.806.617a1.687,1.687,0,0,1,2.515-.1L13.4,2.655\",transform:\"translate(3.281 10.292)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.507,1.754A1.754,1.754,0,1,1,1.753,0,1.755,1.755,0,0,1,3.507,1.754Z\",transform:\"translate(4.806 5.38)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,3.71S.812,2.073,1.994,2.073,3.78,3.448,5.09,3.448,7.868,0,9.352,0,11.9,2.391,11.9,2.391\",transform:\"translate(4.071 10.749)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.115,1.558A1.558,1.558,0,1,1,1.557,0,1.558,1.558,0,0,1,3.115,1.558Z\",transform:\"translate(5.024 5.547)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};zn.displayName=\"IconlyImage\",zn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Bn=st(zn),Gn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(1.999 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.638,20a6.641,6.641,0,0,1-1.082-.094L4.524,19.9a5.232,5.232,0,0,1-3.268-1.872c-.005,0-.007,0-.011-.009a.053.053,0,0,0-.007-.01A6.2,6.2,0,0,1,0,14.1V5.888C0,2.366,2.265,0,5.638,0h8.717C17.731,0,20,2.366,20,5.888V14.1a2.3,2.3,0,0,1-.019.256c-.006.058-.013.116-.016.176,0,.034,0,.068,0,.1,0,.05,0,.1-.007.153a.537.537,0,0,1-.009.055.393.393,0,0,0-.01.057,6.709,6.709,0,0,1-.155.9c-.014.059-.03.119-.045.175l-.015.054a6.059,6.059,0,0,1-.287.807c-.021.047-.043.092-.066.138-.014.026-.025.05-.037.075a5.376,5.376,0,0,1-.407.7c-.031.043-.062.084-.094.122l-.055.07a4.914,4.914,0,0,1-.513.581c-.037.035-.076.067-.115.1s-.053.042-.078.065a5.246,5.246,0,0,1-.608.461c-.047.029-.1.054-.146.078-.033.016-.066.032-.1.05a5.223,5.223,0,0,1-.687.333,1.848,1.848,0,0,1-.186.055c-.042.012-.086.023-.129.036l-.076.023a5.194,5.194,0,0,1-.657.172,3.755,3.755,0,0,1-.42.041l-.188.014c-.068,0-.135.014-.2.021a2.608,2.608,0,0,1-.32.026ZM1.4,5.888V14.1a5.328,5.328,0,0,0,.385,2.038l.358-.436c.563-.687,1.611-1.963,1.619-1.971A3.616,3.616,0,0,1,6.4,12.259a2.71,2.71,0,0,1,1.05.22,6.455,6.455,0,0,1,1.01.561l.09.058a2.329,2.329,0,0,0,1.186.537c.024,0,.049,0,.074,0a1.04,1.04,0,0,0,.41-.143,13.5,13.5,0,0,0,2.123-2.619c.057-.081.094-.134.107-.15a3.345,3.345,0,0,1,2.619-1.4,2.983,2.983,0,0,1,1.551.441c.194.116,1.535,1.052,1.981,1.431v-5.3c0-2.73-1.669-4.493-4.251-4.493H5.638C3.061,1.395,1.4,3.158,1.4,5.888ZM4.06,6.993A2.4,2.4,0,0,1,4,6.468a2.5,2.5,0,0,1,5,.046,2.495,2.495,0,0,1-4.941.479Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.208,3.41V4.794c0,.23-.01.461-.03.691a5.407,5.407,0,0,1-5.641,5.223H4.88A5.5,5.5,0,0,1,.952,9.244,4.592,4.592,0,0,1,0,8.012c.331-.4.7-.842,1.062-1.283C1.673,6,2.265,5.274,2.635,4.8c.551-.682,2-2.476,4.018-1.634a7.191,7.191,0,0,1,1.1.622c.812.541,1.152.7,1.723.391a4.461,4.461,0,0,0,1.473-1.714c.23-.372.461-.732.711-1.063A3.115,3.115,0,0,1,15.842.443a10.544,10.544,0,0,1,1.864,1.493c.12.12.24.232.351.342.15.15.651.652,1.152,1.133\",transform:\"translate(0.791 9.292)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.339,0H5.671C2.275,0,0,2.376,0,5.914v8.172A6.435,6.435,0,0,0,.792,17.3c.331-.4.7-.842,1.062-1.284.611-.731,1.2-1.454,1.573-1.924.551-.682,2-2.476,4.018-1.634a7.191,7.191,0,0,1,1.1.622c.812.541,1.152.7,1.723.39a4.446,4.446,0,0,0,1.473-1.714c.23-.371.461-.731.711-1.062a3.115,3.115,0,0,1,4.178-.962A10.544,10.544,0,0,1,18.5,11.228c.12.12.24.232.351.342.15.149.651.651,1.152,1.133V5.914C20,2.376,17.725,0,14.339,0\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.161,2.582A2.6,2.6,0,0,1,2.58,5.163,2.6,2.6,0,0,1,0,2.582,2.6,2.6,0,0,1,2.58,0,2.6,2.6,0,0,1,5.161,2.582\",transform:\"translate(4.293 4.215)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.553,0H4.9C1.889,0,0,2.134,0,5.154V13.3c0,3.02,1.881,5.154,4.9,5.154h8.648c3.024,0,4.905-2.134,4.905-5.154V5.154C18.457,2.134,16.576,0,13.553,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.691,1.846A1.846,1.846,0,1,1,1.845,0,1.847,1.847,0,0,1,3.691,1.846Z\",transform:\"translate(5.012 4.939)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.457,2.929a22.809,22.809,0,0,0-3-2.593A2.345,2.345,0,0,0,11.3,1.1c-.765.991-1.243,2.324-2.4,2.949-1.423.771-2.259-.472-3.446-.97-1.325-.555-2.331.443-3.105,1.4S.788,6.389,0,7.339\",transform:\"translate(1.75 10.022)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.641,20C2.267,20,0,17.632,0,14.107V5.893C0,2.368,2.267,0,5.641,0h8.717C17.733,0,20,2.368,20,5.893v2.37a.7.7,0,1,1-1.4,0V5.893c0-2.733-1.666-4.5-4.245-4.5H5.641c-2.579,0-4.246,1.764-4.246,4.5v8.213c0,2.733,1.667,4.5,4.246,4.5h8.717c2.579,0,4.246-1.764,4.246-4.5V13.022c-.152-.126-.307-.261-.464-.4-1.1-.951-2.236-1.933-3.477-1.646-.867.2-1.351.916-1.911,1.743a6.164,6.164,0,0,1-1.79,1.951c-1.205.746-2.477.191-3.406-.216L7.4,14.391a2.112,2.112,0,0,0-2.683.349.7.7,0,0,1-.99-.983,3.475,3.475,0,0,1,4.23-.647l.158.069c.923.4,1.57.645,2.113.308A5.046,5.046,0,0,0,11.6,11.939a4.667,4.667,0,0,1,2.75-2.32c1.932-.45,3.47.882,4.705,1.949.234.2.462.4.684.579a.7.7,0,0,1,.262.544v1.415C20,17.632,17.732,20,14.358,20ZM4.3,6.78a2.558,2.558,0,1,1,2.558,2.56A2.561,2.561,0,0,1,4.3,6.78Zm1.395,0A1.163,1.163,0,1,0,6.854,5.618,1.163,1.163,0,0,0,5.691,6.78Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.553,0H4.9C1.889,0,0,2.134,0,5.154V13.3c0,3.02,1.881,5.154,4.9,5.154h8.648c3.024,0,4.905-2.134,4.905-5.154V5.154C18.457,2.134,16.576,0,13.553,0Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.691,1.846A1.846,1.846,0,1,1,1.845,0,1.847,1.847,0,0,1,3.691,1.846Z\",transform:\"translate(5.012 4.939)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M17.457,2.929a22.809,22.809,0,0,0-3-2.593A2.345,2.345,0,0,0,11.3,1.1c-.765.991-1.243,2.324-2.4,2.949-1.423.771-2.259-.472-3.446-.97-1.325-.555-2.331.443-3.105,1.4S.788,6.389,0,7.339\",transform:\"translate(1.75 10.022)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.522,1.761A1.761,1.761,0,1,1,1.761,0,1.76,1.76,0,0,1,3.522,1.761Z\",transform:\"translate(5.077 5.023)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.654,2.737C15.773,1.831,14.527,0,12.238,0S9.9,4.038,7.563,4.038s-3.278-1.371-4.8-.655S0,6.944,0,6.944\",transform:\"translate(2.466 9.93)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Gn.displayName=\"IconlyImage2\",Gn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Jn=st(Gn),Yn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2.001)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M16.167,12.379a2.279,2.279,0,0,0-1.674.44c-.482.281-1.4,1.024-1.923.834a11.932,11.932,0,0,1-6.313-6.16c-.193-.536.547-1.458.825-1.946a2.335,2.335,0,0,0,.436-1.685A13.7,13.7,0,0,0,5.189.615,1.912,1.912,0,0,0,4.021,0C2.52-.063.844,1.94.549,2.419-.187,3.441-.183,4.8.562,6.45c1.8,4.428,8.586,11.112,13.031,12.974A5.371,5.371,0,0,0,15.837,20a2.919,2.919,0,0,0,1.751-.549c.381-.219,2.466-1.979,2.411-3.521a1.941,1.941,0,0,0-.608-1.166,13.8,13.8,0,0,0-3.224-2.385\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.373C.807,1.849,2.549-.056,3.793,0a1.636,1.636,0,0,1,.967.517,16.863,16.863,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.426,1.851-.966,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.665-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.373Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.1,19.41c-3.265-1.355-8.2-5.75-10.982-9.783a.749.749,0,1,1,1.235-.85c2.6,3.767,7.336,8.008,10.352,9.261,1.219.567,2.128.6,2.8.117.527-.319,2.024-1.805,2-2.579a.982.982,0,0,0-.29-.443,18.073,18.073,0,0,0-2.913-2.2c-.319-.068-.651.126-1.156.445l-.257.159a.75.75,0,1,1-.774-1.284l.231-.143a3.062,3.062,0,0,1,2.3-.633,15.579,15.579,0,0,1,3.636,2.611,2.3,2.3,0,0,1,.716,1.4c.065,1.842-2.4,3.767-2.686,3.929A3.138,3.138,0,0,1,15.435,20,5.59,5.59,0,0,1,13.1,19.41ZM9.982,12.353A10.4,10.4,0,0,1,6.391,7.727a2.428,2.428,0,0,1,.365-2.192c.226-.392.351-.625.3-.876A18.964,18.964,0,0,0,4.863,1.793.909.909,0,0,0,4.382,1.5C3.667,1.482,2.2,2.9,1.87,3.448c-.515.707-.479,1.615.074,2.829A.75.75,0,0,1,.58,6.9C-.208,5.171-.193,3.73.624,2.617.927,2.109,2.839-.1,4.479,0A2.305,2.305,0,0,1,5.91.718,15.6,15.6,0,0,1,8.524,4.352a2.645,2.645,0,0,1-.467,1.929c-.265.461-.357.658-.266.907a8.884,8.884,0,0,0,3.065,3.945.75.75,0,0,1-.873,1.22Z\",fill:r}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.373C.807,1.849,2.549-.056,3.793,0a1.636,1.636,0,0,1,.967.517,16.863,16.863,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.426,1.851-.966,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.665-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.373Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,1.469,2.179\",transform:\"translate(1.883 1.294)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,2.188,1.71\",transform:\"translate(15.364 15.567)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.7,13.3C-1.2,6.4-.217,3.241.511,2.223.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.889,10.111s4.432-2.611,9.476,3.514c2.022,2.469-1.425,4.772-1.588,4.864C15.76,19.217,12.6,20.2,5.7,13.3Z\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null)}};Yn.displayName=\"IconlyImage\",Yn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Qn=st(Yn),Kn=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.12,19.446C8.83,17.655,2.275,11.231.543,6.974-.176,5.389-.182,4.082.531,3.1.815,2.639,2.433.713,3.882.774a1.863,1.863,0,0,1,1.128.59A13.212,13.212,0,0,1,7.258,4.486a2.233,2.233,0,0,1-.422,1.62c-.267.468-.982,1.354-.8,1.871a11.491,11.491,0,0,0,6.093,5.92c.506.184,1.391-.53,1.857-.8a2.211,2.211,0,0,1,1.616-.424,13.422,13.422,0,0,1,3.112,2.293,1.856,1.856,0,0,1,.585,1.121c.054,1.482-1.96,3.174-2.327,3.385a2.822,2.822,0,0,1-1.69.527A5.191,5.191,0,0,1,13.12,19.446ZM14.835,7.931h0a3.461,3.461,0,0,0-2.743-2.75.86.86,0,0,1,.327-1.689,5.175,5.175,0,0,1,4.1,4.11.865.865,0,0,1-.678,1.011.945.945,0,0,1-.166.015A.86.86,0,0,1,14.835,7.931Zm3.456-.075a6.912,6.912,0,0,0-6.126-6.138A.863.863,0,0,1,11.731.184a.818.818,0,0,1,.625-.176,8.617,8.617,0,0,1,7.638,7.656.857.857,0,0,1-.756.95.705.705,0,0,1-.1.006A.856.856,0,0,1,18.291,7.856Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.02.015A.861.861,0,0,0,.693,1.7a3.462,3.462,0,0,1,2.744,2.75h0a.859.859,0,0,0,.841.7.933.933,0,0,0,.165-.015A.865.865,0,0,0,5.12,4.125,5.174,5.174,0,0,0,1.02.015\",transform:\"translate(11.398 3.475)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.954.008A.817.817,0,0,0,.328.184.863.863,0,0,0,.762,1.718,6.912,6.912,0,0,1,6.888,7.857a.857.857,0,0,0,.851.764.8.8,0,0,0,.1-.006A.847.847,0,0,0,8.411,8.3a.856.856,0,0,0,.181-.633A8.616,8.616,0,0,0,.954.008\",transform:\"translate(11.402 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.6,11.9a2.211,2.211,0,0,0-1.615.424c-.465.27-1.35.984-1.856.8A11.493,11.493,0,0,1,6.04,7.2c-.186-.517.528-1.4.8-1.871a2.235,2.235,0,0,0,.422-1.62A13.176,13.176,0,0,0,5.009.592,1.858,1.858,0,0,0,3.882,0C2.433-.06.815,1.866.531,2.327-.181,3.309-.176,4.616.543,6.2,2.276,10.458,8.83,16.883,13.12,18.674a5.2,5.2,0,0,0,2.166.554,2.825,2.825,0,0,0,1.69-.528c.366-.211,2.38-1.9,2.326-3.385a1.856,1.856,0,0,0-.586-1.121A13.372,13.372,0,0,0,15.6,11.9\",transform:\"translate(0 0.773)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.374C.806,1.849,2.55-.056,3.793,0A1.642,1.642,0,0,1,4.76.518h0a16.884,16.884,0,0,1,2.467,3.34C7.472,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.864,16.864,0,0,1,3.34,2.468h0a1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.146,4.525-.191,3.3.49,2.374Z\",transform:\"translate(0.5 0.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.971,7.971,0,0,1,7.041,7.032\",transform:\"translate(12.565 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A4.426,4.426,0,0,1,3.5,3.5\",transform:\"translate(12.565 4.293)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.86,19.418C9.653,18.076,4.8,13.727,2.076,9.736A.745.745,0,0,1,2.264,8.7.734.734,0,0,1,3.289,8.9c2.547,3.726,7.2,7.923,10.165,9.164,1.2.56,2.092.595,2.755.116.517-.317,1.987-1.787,1.961-2.552a.988.988,0,0,0-.285-.439,17.661,17.661,0,0,0-2.859-2.18c-.317-.065-.639.123-1.135.437l-.255.16a.735.735,0,0,1-1.011-.254.745.745,0,0,1,.251-1.019l.23-.143a2.988,2.988,0,0,1,2.262-.623,15.22,15.22,0,0,1,3.569,2.584,2.277,2.277,0,0,1,.7,1.389c.064,1.821-2.36,3.725-2.637,3.885A3.067,3.067,0,0,1,15.157,20,5.486,5.486,0,0,1,12.86,19.418ZM9.8,12.434A10.29,10.29,0,0,1,6.275,7.857a2.418,2.418,0,0,1,.36-2.17c.221-.388.345-.619.293-.867A18.756,18.756,0,0,0,4.774,1.985.886.886,0,0,0,4.3,1.694c-.662-.031-2.14,1.384-2.467,1.928-.506.7-.47,1.6.073,2.8a.744.744,0,0,1-.365.983.734.734,0,0,1-.975-.368C-.2,5.328-.19,3.9.612,2.8.78,2.514,2.65.1,4.4.214A2.257,2.257,0,0,1,5.8.923a15.353,15.353,0,0,1,2.566,3.6,2.631,2.631,0,0,1-.459,1.909c-.26.455-.35.651-.261.9a8.793,8.793,0,0,0,3.008,3.9.745.745,0,0,1,.171,1.035.733.733,0,0,1-1.027.173Zm5.26-4.586a3.607,3.607,0,0,0-2.854-2.873.742.742,0,0,1,.282-1.456,5.081,5.081,0,0,1,4.019,4.046.742.742,0,0,1-.582.87.759.759,0,0,1-.142.013A.737.737,0,0,1,15.062,7.848Zm3.47-.067a7.08,7.08,0,0,0-6.264-6.3.741.741,0,0,1-.652-.819.733.733,0,0,1,.814-.654A8.545,8.545,0,0,1,20,7.614a.739.739,0,0,1-.649.82.675.675,0,0,1-.084.005A.739.739,0,0,1,18.532,7.781Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.374C.806,1.849,2.55-.056,3.793,0A1.642,1.642,0,0,1,4.76.518h0a16.884,16.884,0,0,1,2.467,3.34C7.472,5.026,6.078,5.7,6.5,6.878a9.873,9.873,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.864,16.864,0,0,1,3.34,2.468h0a1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.146,4.525-.191,3.3.49,2.374Z\",transform:\"translate(0.5 0.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.971,7.971,0,0,1,7.041,7.032\",transform:\"translate(12.565 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A4.426,4.426,0,0,1,3.5,3.5\",transform:\"translate(12.565 4.293)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A7.971,7.971,0,0,1,7.041,7.032\",transform:\"translate(12.352 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0A4.426,4.426,0,0,1,3.5,3.5\",transform:\"translate(12.352 4.293)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.7,13.3C-1.2,6.4-.217,3.241.511,2.223.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.889,10.111S13.32,7.5,18.366,13.625c2.022,2.469-1.425,4.772-1.588,4.864C15.76,19.217,12.6,20.2,5.7,13.3Z\",transform:\"translate(0 1)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Kn.displayName=\"IconlyCalling\",Kn.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Xn=st(Kn),te=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.3,19.439C8.949,17.623,2.306,11.109.549,6.791-.178,5.185-.184,3.86.537,2.864.825,2.4,2.466.445,3.934.506a1.884,1.884,0,0,1,1.143.6A13.314,13.314,0,0,1,7.356,4.27a2.269,2.269,0,0,1-.427,1.643c-.273.474-1,1.372-.807,1.9a11.651,11.651,0,0,0,6.176,6c.514.186,1.41-.538,1.881-.812a2.241,2.241,0,0,1,1.638-.429A13.523,13.523,0,0,1,18.971,14.9a1.878,1.878,0,0,1,.594,1.138c.054,1.5-1.986,3.218-2.359,3.432A2.861,2.861,0,0,1,15.494,20,5.276,5.276,0,0,1,13.3,19.439ZM18.492,7.584l-2.4-2.413-2.4,2.413a.9.9,0,0,1-1.248,0,.89.89,0,0,1,0-1.254l2.4-2.413L12.435,1.5a.89.89,0,0,1,0-1.254.9.9,0,0,1,1.248,0l2.4,2.413,2.4-2.413a.9.9,0,0,1,1.248,0,.888.888,0,0,1,0,1.254l-2.4,2.413,2.4,2.413a.888.888,0,0,1,0,1.254.879.879,0,0,1-1.248,0Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M15.816,12.066a2.241,2.241,0,0,0-1.637.43c-.471.274-1.368,1-1.882.812a11.652,11.652,0,0,1-6.176-6c-.189-.524.535-1.423.808-1.9a2.271,2.271,0,0,0,.427-1.642A13.359,13.359,0,0,0,5.077.6,1.881,1.881,0,0,0,3.934,0C2.466-.06.825,1.892.537,2.359c-.721,1-.716,2.321.012,3.927C2.306,10.6,8.949,17.118,13.3,18.934a5.271,5.271,0,0,0,2.2.561,2.863,2.863,0,0,0,1.713-.535c.372-.214,2.413-1.929,2.359-3.432a1.884,1.884,0,0,0-.595-1.137,13.534,13.534,0,0,0-3.155-2.325\",transform:\"translate(0 0.505)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.16,3.918l2.4-2.413a.888.888,0,0,0,0-1.254.9.9,0,0,0-1.249,0l-2.4,2.414L1.507.251a.9.9,0,0,0-1.249,0,.89.89,0,0,0,0,1.254l2.4,2.413L.258,6.33a.89.89,0,0,0,0,1.254.9.9,0,0,0,1.249,0l2.4-2.414,2.4,2.414A.885.885,0,0,0,7.564,6.33Z\",transform:\"translate(12.177 0)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.374C.807,1.849,2.549-.056,3.793,0a1.642,1.642,0,0,1,.967.517,16.893,16.893,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.872,9.872,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.374Z\",transform:\"translate(0.5 0.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6,0,0,6\",transform:\"translate(13.25 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,6,6\",transform:\"translate(13.25 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.1,19.412c-3.266-1.357-8.2-5.751-10.981-9.785A.749.749,0,1,1,3.349,8.78c2.594,3.765,7.334,8.006,10.35,9.26,1.22.566,2.128.6,2.8.117.526-.319,2.024-1.806,2-2.579a.992.992,0,0,0-.291-.444,18.045,18.045,0,0,0-2.912-2.2c-.316-.066-.65.126-1.156.443l-.258.161a.75.75,0,0,1-.773-1.286l.233-.143a3.066,3.066,0,0,1,2.3-.631,15.6,15.6,0,0,1,3.636,2.611,2.291,2.291,0,0,1,.715,1.4c.065,1.84-2.4,3.766-2.685,3.927A3.139,3.139,0,0,1,15.433,20,5.613,5.613,0,0,1,13.1,19.412ZM9.981,12.353A10.4,10.4,0,0,1,6.39,7.727a2.427,2.427,0,0,1,.366-2.193c.226-.391.351-.625.3-.876A19.039,19.039,0,0,0,4.862,1.792a.914.914,0,0,0-.48-.293C3.666,1.453,2.2,2.9,1.87,3.449c-.515.707-.479,1.614.074,2.829A.749.749,0,0,1,.58,6.9C-.208,5.171-.193,3.73.624,2.618.927,2.109,2.838-.106,4.479,0A2.315,2.315,0,0,1,5.91.718,15.543,15.543,0,0,1,8.523,4.353a2.647,2.647,0,0,1-.467,1.929c-.266.461-.357.658-.266.906a8.889,8.889,0,0,0,3.063,3.945.75.75,0,0,1-.871,1.22Zm8.738-5.076L16.25,4.81,13.781,7.277A.75.75,0,0,1,12.72,6.218l2.47-2.47L12.72,1.28A.75.75,0,0,1,13.781.221L16.25,2.688,18.2.736h0l.515-.515A.75.75,0,0,1,19.78,1.28L18.747,2.313h0L17.311,3.749l2.47,2.47a.75.75,0,0,1-1.061,1.059Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.49,2.374C.807,1.849,2.549-.056,3.793,0a1.642,1.642,0,0,1,.967.517,16.893,16.893,0,0,1,2.468,3.34C7.471,5.026,6.078,5.7,6.5,6.878a9.872,9.872,0,0,0,5.619,5.616c1.177.427,1.851-.965,3.019-.723a16.894,16.894,0,0,1,3.34,2.468,1.639,1.639,0,0,1,.517.967c.046,1.309-1.977,3.077-2.371,3.3-.93.666-2.144.654-3.624-.034C8.874,16.757,2.274,10.282.524,6-.145,4.525-.192,3.3.49,2.374Z\",transform:\"translate(0.5 0.5)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3,3,0,6,3,3,0,0,3,3,6,0,3,3,6,6Z\",transform:\"translate(13.25 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6,0,0,6\",transform:\"translate(13.328 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,6,6\",transform:\"translate(13.328 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M5.7,13.3C-1.2,6.4-.217,3.241.511,2.222.6,2.059,2.906-1.388,5.375.634,11.5,5.679,3.745,4.966,8.89,10.111s4.431-2.611,9.476,3.514c2.022,2.469-1.425,4.77-1.588,4.864C15.759,19.217,12.6,20.2,5.7,13.3Z\",transform:\"translate(0 1)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};te.displayName=\"IconlyCallMissed\",te.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var re=st(te),ne=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.245,20.746a.9.9,0,0,1-.129-1.058l.03-.041a.518.518,0,0,1,.069-.091L18.176,1.13A.814.814,0,0,1,18.77.864a.853.853,0,0,1,.6.266.892.892,0,0,1,0,1.229V2.37L9.958,12.015l-.572.587.8-.82a11.186,11.186,0,0,0,2.626,1.566c.506.192,1.378-.54,1.844-.814a2.163,2.163,0,0,1,1.606-.427,13.159,13.159,0,0,1,3.1,2.327,1.978,1.978,0,0,1,.585,1.139C20,17.087,18,18.8,17.63,19.018a2.792,2.792,0,0,1-1.686.539A5.046,5.046,0,0,1,13.794,19,24.043,24.043,0,0,1,7.52,14.516l-6.075,6.23A.857.857,0,0,1,.85,21,.9.9,0,0,1,.245,20.746ZM1.275,6.3C.562,4.7.552,3.366,1.265,2.37,1.543,1.9,3.158-.059,4.6,0a1.78,1.78,0,0,1,1.12.6,13.472,13.472,0,0,1,2.24,3.171,2.315,2.315,0,0,1-.417,1.657c-.267.468-.981,1.372-.793,1.9A10.335,10.335,0,0,0,7.827,9.3L5.141,12.056A21.819,21.819,0,0,1,1.275,6.3Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 1.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.092,9.3,4.406,12.056A21.819,21.819,0,0,1,.54,6.3C-.173,4.7-.183,3.366.53,2.37.808,1.9,2.423-.06,3.861,0a1.785,1.785,0,0,1,1.12.6,13.487,13.487,0,0,1,2.24,3.171A2.318,2.318,0,0,1,6.8,5.429c-.268.468-.981,1.372-.793,1.9A10.336,10.336,0,0,0,7.092,9.3\",transform:\"translate(0.735)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.429,3.79c.05,1.514-1.953,3.232-2.319,3.446a2.787,2.787,0,0,1-1.685.539,5.035,5.035,0,0,1-2.151-.559A24.046,24.046,0,0,1,0,2.733L2.666,0A11.193,11.193,0,0,0,5.293,1.565c.506.192,1.378-.54,1.844-.814A2.166,2.166,0,0,1,8.742.324a13.187,13.187,0,0,1,3.1,2.328,1.975,1.975,0,0,1,.585,1.138\",transform:\"translate(7.52 11.782)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M19.375,1.5v.01L9.958,11.151,1.444,19.882a.856.856,0,0,1-.595.254.9.9,0,0,1-.6-.254.9.9,0,0,1-.129-1.057l.03-.041a.517.517,0,0,1,.069-.091L18.175.265A.816.816,0,0,1,18.77,0a.855.855,0,0,1,.6.265.893.893,0,0,1,0,1.23\",transform:\"translate(0 0.864)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.532,10.475A19.223,19.223,0,0,1,.515,5.841c-.66-1.439-.7-2.63-.04-3.529C.785,1.8,2.485-.058,3.7,0a1.623,1.623,0,0,1,.94.5,17.785,17.785,0,0,1,1.389,1.67,7.222,7.222,0,0,1,1.01,1.58c.24,1.14-1.12,1.8-.7,2.941.093.227.191.448.3.662\",transform:\"translate(0.754 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,18.5,18.5,0\",transform:\"translate(0.75 0.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.811a24.78,24.78,0,0,0,6.98,5.18c1.44.67,2.62.679,3.52.03.39-.221,2.36-1.94,2.31-3.221a1.612,1.612,0,0,0-.5-.939,16,16,0,0,0-3.25-2.4c-1.14-.24-1.8,1.121-2.94.7A10,10,0,0,1,2.81,0\",transform:\"translate(6.44 10.751)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M13.1,19.411a24.29,24.29,0,0,1-6.658-4.8L1.28,19.772a.75.75,0,0,1-1.06-1.06L5.91,13.025a.77.77,0,0,1,1.059,0,23.929,23.929,0,0,0,6.737,5.014c1.218.568,2.123.6,2.795.116.534-.321,2.029-1.8,2-2.581a.952.952,0,0,0-.292-.451,18.068,18.068,0,0,0-2.9-2.193c-.214-.048-.448.082-.842.309a2.417,2.417,0,0,1-2.165.372A10.814,10.814,0,0,1,8.72,11.277a.749.749,0,0,1,0-1.06l10-9.995a.75.75,0,1,1,1.06,1.06l-9.446,9.44a9.578,9.578,0,0,0,2.51,1.49c.219.079.415-.011.873-.274a2.658,2.658,0,0,1,1.938-.464c.764.148,3.174,2.136,3.633,2.609a2.319,2.319,0,0,1,.709,1.4c.075,1.858-2.406,3.773-2.69,3.931a3.1,3.1,0,0,1-1.87.586A5.586,5.586,0,0,1,13.1,19.411ZM3.711,11.7A19.838,19.838,0,0,1,.577,6.874C-.2,5.173-.191,3.73.625,2.617.8,2.326,2.685-.113,4.488,0A2.31,2.31,0,0,1,5.91.713,17.8,17.8,0,0,1,7.38,2.471c1.066,1.419,1.118,1.72,1.149,1.9a2.633,2.633,0,0,1-.47,1.908c-.265.459-.355.655-.265.9.077.19.169.393.266.592a.75.75,0,0,1-1.348.659C6.6,8.2,6.494,7.962,6.4,7.718a2.41,2.41,0,0,1,.363-2.184c.225-.392.351-.628.3-.878h0A9.494,9.494,0,0,0,6.18,3.371a17.088,17.088,0,0,0-1.311-1.58A.886.886,0,0,0,4.388,1.5c-.646-.051-2.181,1.4-2.516,1.95-.514.706-.475,1.613.081,2.827a18.356,18.356,0,0,0,2.91,4.461.75.75,0,1,1-1.151.962Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.629,10.757A19.74,19.74,0,0,1,.529,6C-.148,4.521-.19,3.3.488,2.375.807,1.85,2.553-.059,3.8,0a1.668,1.668,0,0,1,.966.513A18.265,18.265,0,0,1,6.189,2.23,7.416,7.416,0,0,1,7.227,3.852c.247,1.171-1.15,1.848-.719,3.02.1.233.2.46.305.68\",transform:\"translate(1 0)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,2.887A25.454,25.454,0,0,0,7.17,8.206c1.479.688,2.691.7,3.616.031.4-.227,2.424-1.992,2.373-3.308a1.655,1.655,0,0,0-.514-.964A16.432,16.432,0,0,0,9.307,1.5c-1.171-.246-1.849,1.151-3.02.72A10.27,10.27,0,0,1,2.886,0\",transform:\"translate(6.84 10.27)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,18.333,18.333,0\",transform:\"translate(0.743 0.744)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.609,11.058C-.977,5.7-.129,3.127.509,2.225c.1-.17,2.4-3.61,4.861-1.592,4.851,4,1,4.385,1.742,6.922\",transform:\"translate(0 1)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M3.185,0c4.927,4.746,4.3-2.728,9.278,3.312C14.49,5.786,11.04,8.079,10.87,8.175,9.874,8.9,6.762,9.863,0,3.185\",transform:\"translate(5.901 11.314)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,18.5,18.5,0\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ne.displayName=\"IconlyCallSilent\",ne.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ee=st(ne),oe=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.732,20H4.269A4.227,4.227,0,0,1,0,15.826V10.888A4.165,4.165,0,0,1,2.977,6.929V5.4A5.472,5.472,0,0,1,8.485,0,5.576,5.576,0,0,1,12.4,1.58,5.3,5.3,0,0,1,14.023,5.4V6.929A4.165,4.165,0,0,1,17,10.888v4.937A4.227,4.227,0,0,1,12.732,20ZM8.5,11.384a.875.875,0,0,0-.884.865v2.206a.889.889,0,0,0,1.778,0V12.249A.881.881,0,0,0,8.5,11.384Zm.01-9.645A3.711,3.711,0,0,0,4.756,5.376V6.714h7.489V5.4A3.7,3.7,0,0,0,8.505,1.739Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.731,13.286H4.269A4.227,4.227,0,0,1,0,9.112V4.175A4.227,4.227,0,0,1,4.269,0h8.463A4.227,4.227,0,0,1,17,4.175V9.112A4.227,4.227,0,0,1,12.731,13.286ZM8.5,4.67a.875.875,0,0,0-.884.865V7.741a.889.889,0,0,0,1.778,0V5.535A.881.881,0,0,0,8.5,4.67Z\",transform:\"translate(0 6.714)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.045,5.4V6.867a4.153,4.153,0,0,0-1.118-.149h-.66V5.4A3.7,3.7,0,0,0,5.528,1.739a3.707,3.707,0,0,0-3.75,3.637V6.718h-.65A3.817,3.817,0,0,0,0,6.877V5.4A5.467,5.467,0,0,1,5.507,0a5.461,5.461,0,0,1,5.538,5.4\",transform:\"translate(2.977 0)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.121,6.7V4.551A4.561,4.561,0,0,0,0,4.531V6.7\",transform:\"translate(3.802 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.433,11.873H3.792A3.792,3.792,0,0,1,0,8.081V3.792A3.792,3.792,0,0,1,3.792,0h7.641a3.792,3.792,0,0,1,3.792,3.792V8.081A3.792,3.792,0,0,1,11.433,11.873Z\",transform:\"translate(0.75 7.377)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.221\",transform:\"translate(7.863 12.203)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.353,20H8.942a.75.75,0,1,1,0-1.5h3.411a3.07,3.07,0,0,0,3.092-3.042.364.364,0,0,1,.02-.105l.011-.041V11.169a3.071,3.071,0,0,0-3.093-3.042H4.617a3.071,3.071,0,0,0-3.092,3.042v4.144c0,.016.008.032.012.048a.351.351,0,0,1,.018.1A3.071,3.071,0,0,0,4.647,18.5a.75.75,0,1,1,0,1.5H4.622a4.632,4.632,0,0,1-3.269-1.331A4.472,4.472,0,0,1,0,15.458V11.169A4.55,4.55,0,0,1,3.1,6.9V5.3A5.367,5.367,0,0,1,8.49,0h.023A5.349,5.349,0,0,1,13.9,5.3V6.9A4.55,4.55,0,0,1,17,11.169v4.289A4.586,4.586,0,0,1,12.382,20ZM4.627,5.284V6.627h7.745V5.3A3.836,3.836,0,0,0,8.51,1.5H8.493A3.843,3.843,0,0,0,4.627,5.284Zm3.11,9.139V12.2a.762.762,0,0,1,1.525,0v2.22a.762.762,0,0,1-1.525,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.121,6.7V4.551A4.561,4.561,0,0,0,0,4.531V6.7\",transform:\"translate(3.802 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.433,11.873H3.792A3.792,3.792,0,0,1,0,8.081V3.792A3.792,3.792,0,0,1,3.792,0h7.641a3.792,3.792,0,0,1,3.792,3.792V8.081A3.792,3.792,0,0,1,11.433,11.873Z\",transform:\"translate(0.75 7.377)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.221\",transform:\"translate(7.863 12.203)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.121,6.653V4.5A4.561,4.561,0,0,0,0,4.484V6.653\",transform:\"translate(3.85 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.221\",transform:\"translate(7.91 12.156)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.4,0,7.66,0Z\",transform:\"translate(0.75 6.824)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};oe.displayName=\"IconlyLock\",oe.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ae=st(oe),se=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.731,20H4.268A4.227,4.227,0,0,1,0,15.825V10.886A4.038,4.038,0,0,1,.872,8.372,4.337,4.337,0,0,1,3.071,6.9l-.111.014V5.387A5.548,5.548,0,0,1,13.711,3.628a.838.838,0,0,1-.041.666.85.85,0,0,1-.509.438.887.887,0,0,1-.291.049.91.91,0,0,1-.847-.585A3.761,3.761,0,0,0,4.739,5.368V6.709l-.013,0h8.006A4.227,4.227,0,0,1,17,10.886v4.938A4.227,4.227,0,0,1,12.731,20ZM8.5,11.382a.875.875,0,0,0-.884.865v2.207a.889.889,0,0,0,1.778,0V12.247A.881.881,0,0,0,8.5,11.382Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.778,6.709V5.367a3.709,3.709,0,0,1,3.76-3.628A3.727,3.727,0,0,1,9.064,4.2a.906.906,0,0,0,1.138.537.861.861,0,0,0,.549-1.1A5.53,5.53,0,0,0,5.518,0,5.482,5.482,0,0,0,0,5.387V6.911Z\",transform:\"translate(2.961 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.731,13.289H4.269A4.227,4.227,0,0,1,0,9.113V4.175A4.227,4.227,0,0,1,4.269,0h8.463A4.227,4.227,0,0,1,17,4.175V9.113A4.227,4.227,0,0,1,12.731,13.289ZM8.5,4.672a.875.875,0,0,0-.884.864V7.743a.889.889,0,0,0,1.778,0V5.536A.88.88,0,0,0,8.5,4.672Z\",transform:\"translate(0 6.711)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.872,3.062A4.563,4.563,0,0,0,0,4.531V6.7\",transform:\"translate(3.052)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.433,11.874H3.792A3.793,3.793,0,0,1,0,8.081V3.793A3.793,3.793,0,0,1,3.792,0h7.641a3.793,3.793,0,0,1,3.792,3.793V8.081A3.793,3.793,0,0,1,11.433,11.874Z\",transform:\"translate(0 6.626)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.222\",transform:\"translate(7.113 11.453)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.353,20H8.942a.75.75,0,1,1,0-1.5h3.411a3.071,3.071,0,0,0,3.092-3.042.67.67,0,0,1,.03-.144V11.169a3.071,3.071,0,0,0-3.092-3.042H4.617a3.071,3.071,0,0,0-3.092,3.042v4.145a.67.67,0,0,1,.03.144A3.071,3.071,0,0,0,4.648,18.5a.75.75,0,1,1,0,1.5l-.021,0-.01,0A4.584,4.584,0,0,1,0,15.458V11.169A4.542,4.542,0,0,1,3.1,6.9V5.3A5.357,5.357,0,0,1,8.49,0h.024A5.386,5.386,0,0,1,13.6,3.567a.747.747,0,0,1-.472.955.765.765,0,0,1-.969-.464A3.861,3.861,0,0,0,8.51,1.5H8.493A3.838,3.838,0,0,0,4.627,5.284V6.627h7.756A4.585,4.585,0,0,1,17,11.169v4.289A4.584,4.584,0,0,1,12.383,20ZM7.738,14.424V12.2a.762.762,0,0,1,1.525,0v2.221a.762.762,0,0,1-1.525,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 2.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.872,3.062A4.563,4.563,0,0,0,0,4.531V6.7\",transform:\"translate(3.052)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M11.433,11.874H3.792A3.793,3.793,0,0,1,0,8.081V3.793A3.793,3.793,0,0,1,3.792,0h7.641a3.793,3.793,0,0,1,3.792,3.793V8.081A3.793,3.793,0,0,1,11.433,11.874Z\",transform:\"translate(0 6.626)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.222\",transform:\"translate(7.113 11.453)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3.5 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.927,3.237A4.562,4.562,0,0,0,0,4.484V6.653\",transform:\"translate(3.849 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,0V2.221\",transform:\"translate(7.91 12.156)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.406,0,7.66,0Z\",transform:\"translate(0.75 6.824)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};se.displayName=\"IconlyUnlock\",se.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ie=st(se),le=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,1,1,20,10,10.011,10.011,0,0,1,10,20ZM6.525,7.8A.737.737,0,0,0,6,8.02a.75.75,0,0,0-.225.54A.727.727,0,0,0,6,9.08l3.47,3.49a.75.75,0,0,0,1.06,0L14,9.08a.7.7,0,0,0,.22-.52A.75.75,0,0,0,14,8.02a.76.76,0,0,0-.529-.216.733.733,0,0,0-.531.226L10,10.98,7.06,8.03A.737.737,0,0,0,6.525,7.8Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749\",transform:\"translate(5.778 7.808)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};le.displayName=\"IconlyChevronDownCircle\",le.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ue=st(le),de=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{i:!0,transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20l-.28,0A10.011,10.011,0,1,1,10,20ZM8.56,5.78a.745.745,0,0,0-.53,1.28L10.98,10,8.03,12.94A.746.746,0,0,0,8.02,14a.752.752,0,0,0,.534.225A.727.727,0,0,0,9.08,14l3.49-3.47a.75.75,0,0,0,0-1.06L9.08,6A.7.7,0,0,0,8.56,5.78Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{i:!0,transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749\",transform:\"translate(5.778 7.808)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{i:!0,transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{i:!0,transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z\",transform:\"translate(0 20) rotate(-90)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{i:!0,transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};de.displayName=\"IconlyChevronRightCircle\",de.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ke=st(de),ce=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,1,1,20,10l0,.28A10,10,0,0,1,10,20ZM10,9.02h0l2.94,2.949a.746.746,0,0,0,1.06.01.751.751,0,0,0,.225-.539A.729.729,0,0,0,14,10.92L10.53,7.43a.747.747,0,0,0-1.06,0L6,10.92a.7.7,0,0,0-.22.52.747.747,0,0,0,.22.54.758.758,0,0,0,.529.216.733.733,0,0,0,.531-.226L10,9.021Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749\",transform:\"translate(5.778 7.808)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z\",transform:\"translate(0 20) rotate(-90)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ce.displayName=\"IconlyChevronUpCircle\",ce.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var fe=st(ce),pe=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,20A10,10,0,1,1,10,0l.28,0A10,10,0,0,1,10,20ZM11.446,5.775A.728.728,0,0,0,10.92,6L7.43,9.47a.747.747,0,0,0,0,1.06L10.92,14a.7.7,0,0,0,.52.22.745.745,0,0,0,.53-1.28L9.02,10l2.95-2.94A.745.745,0,0,0,11.98,6,.75.75,0,0,0,11.446,5.775Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M20,10A10,10,0,1,1,10,0,10.011,10.011,0,0,1,20,10\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.443.749a.747.747,0,0,1-.219.529L4.754,4.765a.752.752,0,0,1-1.063,0L.219,1.278A.75.75,0,0,1,1.282.22l2.94,2.953L7.162.22A.75.75,0,0,1,8.443.749\",transform:\"translate(5.778 7.808)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,10A9.94,9.94,0,0,1,3.9,2.073.727.727,0,0,1,4.79,3.226,8.546,8.546,0,1,0,10,1.454a8.645,8.645,0,0,0-1.3.1A.727.727,0,0,1,8.481.114,10,10,0,1,1,0,10Zm9.468,2.573L6,9.087A.75.75,0,1,1,7.06,8.028L10,10.981l2.94-2.953A.75.75,0,0,1,14,9.087L10.53,12.573a.747.747,0,0,1-1.062,0Z\",transform:\"translate(0 20) rotate(-90)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25A9.25,9.25,0,1,0,9.25,0,9.25,9.25,0,0,0,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,3.471,3.486,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0S2.392,3.486,3.472,3.486,6.942,0,6.942,0\",transform:\"translate(6.529 8.558)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};pe.displayName=\"IconlyChevronLeftCircle\",pe.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var me=st(pe),he=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 7)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.869,9.631c-.058-.057-.306-.27-.51-.469a21.69,21.69,0,0,1-4.024-5.8A4.617,4.617,0,0,1,0,2.188a1.933,1.933,0,0,1,.218-.9A1.874,1.874,0,0,1,1.122.5,9.84,9.84,0,0,1,2.186.242,23.979,23.979,0,0,1,5.992,0,27.724,27.724,0,0,1,9.681.213a8.495,8.495,0,0,1,1.327.341A1.785,1.785,0,0,1,12,2.132v.057a4.879,4.879,0,0,1-.409,1.321A21.69,21.69,0,0,1,7.625,9.177a5.66,5.66,0,0,1-.554.482A1.783,1.783,0,0,1,6.007,10a1.875,1.875,0,0,1-1.138-.369\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 7)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z\",transform:\"translate(7.074 0.005)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5 8.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0,7,7,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.417,8.753.24,1.427a.846.846,0,0,1,0-1.183.813.813,0,0,1,1.164,0L8.582,7.573a.846.846,0,0,1,0,1.184.813.813,0,0,1-1.164,0ZM9.832,6.3a.847.847,0,0,1,0-1.184L14.593.247a.814.814,0,0,1,1.165,0,.847.847,0,0,1,0,1.183L10.994,6.293a.812.812,0,0,1-1.163,0Z\",transform:\"translate(4 7.5)\",fill:r})},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5 8.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0S9.856,7,7,7,0,0,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};he.displayName=\"IconlyChevronDown\",he.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Me=st(he),Le=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(7 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.631,7.131c-.057.058-.27.306-.469.51a21.69,21.69,0,0,1-5.8,4.024A4.617,4.617,0,0,1,2.188,12a1.933,1.933,0,0,1-.9-.218,1.874,1.874,0,0,1-.795-.9A9.84,9.84,0,0,1,.242,9.814,23.979,23.979,0,0,1,0,6.008,27.724,27.724,0,0,1,.213,2.319,8.495,8.495,0,0,1,.554.992,1.785,1.785,0,0,1,2.132,0h.057A4.879,4.879,0,0,1,3.509.409,21.69,21.69,0,0,1,9.177,4.375a5.66,5.66,0,0,1,.482.554A1.783,1.783,0,0,1,10,5.993a1.875,1.875,0,0,1-.369,1.138\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(7 18) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z\",transform:\"translate(7.074 0.005)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(8.5 19) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0,7,7,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(7.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.244,15.758a.815.815,0,0,1-.073-1.08l.076-.084L7.573,7.418a.845.845,0,0,1,1.184,0A.813.813,0,0,1,8.829,8.5l-.076.084L1.427,15.759a.846.846,0,0,1-1.183,0ZM5.2,6.245l-.086-.074L.247,1.407a.813.813,0,0,1,0-1.164.847.847,0,0,1,1.1-.076l.086.073L6.293,5a.813.813,0,0,1,0,1.164.848.848,0,0,1-1.1.076Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(8.5 19) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0S9.856,7,7,7,0,0,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Le.displayName=\"IconlyChevronRight\",Le.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ae=st(Le),ye=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 7)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.131.369c.058.057.306.27.51.469a21.69,21.69,0,0,1,4.024,5.8A4.617,4.617,0,0,1,12,7.812a1.933,1.933,0,0,1-.218.9,1.874,1.874,0,0,1-.9.795,9.84,9.84,0,0,1-1.064.256A23.979,23.979,0,0,1,6.008,10a27.724,27.724,0,0,1-3.689-.213A8.495,8.495,0,0,1,.992,9.446,1.785,1.785,0,0,1,0,7.868V7.812A4.879,4.879,0,0,1,.409,6.491,21.69,21.69,0,0,1,4.375.823,5.66,5.66,0,0,1,4.929.341,1.783,1.783,0,0,1,5.993,0,1.875,1.875,0,0,1,7.131.369\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(18 17) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z\",transform:\"translate(7.074 0.005)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(19 15.5) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0,7,7,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 7.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.242,8.756a.846.846,0,0,1,0-1.184L7.417.247,7.5.171A.813.813,0,0,1,8.581.244a.846.846,0,0,1,0,1.183L1.406,8.753l-.084.076a.814.814,0,0,1-1.08-.073Zm14.351,0L9.828,3.888,9.755,3.8a.847.847,0,0,1,.076-1.1.812.812,0,0,1,1.163,0l4.766,4.865.073.085a.847.847,0,0,1-.076,1.1.814.814,0,0,1-1.165,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(19 15.5) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0S9.856,7,7,7,0,0,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};ye.displayName=\"IconlyChevronUp\",ye.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ge=st(ye),We=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(7 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.369,4.869c.057-.058.27-.306.469-.51A21.69,21.69,0,0,1,6.633.335,4.617,4.617,0,0,1,7.812,0a1.933,1.933,0,0,1,.9.218,1.874,1.874,0,0,1,.795.9,9.84,9.84,0,0,1,.256,1.064A23.979,23.979,0,0,1,10,5.992a27.724,27.724,0,0,1-.213,3.689,8.495,8.495,0,0,1-.341,1.327A1.785,1.785,0,0,1,7.868,12H7.812a4.879,4.879,0,0,1-1.321-.409A21.69,21.69,0,0,1,.823,7.625a5.66,5.66,0,0,1-.482-.554A1.783,1.783,0,0,1,0,6.007,1.875,1.875,0,0,1,.369,4.869\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(17 6) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.867.214,9.086,7.062a.435.435,0,0,1-.026.493,13.057,13.057,0,0,1-1.436,1.62,5.369,5.369,0,0,1-.559.479A1.723,1.723,0,0,1,6.006,10a1.855,1.855,0,0,1-1.14-.368c-.057-.056-.308-.268-.513-.468A21.777,21.777,0,0,1,.33,3.341,4.49,4.49,0,0,1,0,2.161a1.938,1.938,0,0,1,.217-.9,1.866,1.866,0,0,1,.9-.79A9.271,9.271,0,0,1,2.188.213,17.671,17.671,0,0,1,4.457,0a.463.463,0,0,1,.41.214\",transform:\"translate(0 0)\",fill:r}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.065.668A.443.443,0,0,1,.476,0C1.318.037,2.06.1,2.612.175A7.427,7.427,0,0,1,3.934.521,1.778,1.778,0,0,1,4.926,2.1v.055a4.5,4.5,0,0,1-.41,1.326,13.808,13.808,0,0,1-.894,1.685.459.459,0,0,1-.778.007Z\",transform:\"translate(7.074 0.005)\",fill:n,opacity:a}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(15.5 5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0,7,7,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(7.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.573,15.759.247,8.582.171,8.5A.813.813,0,0,1,.244,7.42a.845.845,0,0,1,1.183,0l7.326,7.177.076.084a.815.815,0,0,1-.073,1.08.846.846,0,0,1-1.184,0ZM2.7,6.169A.813.813,0,0,1,2.707,5L7.573.239,7.658.167a.847.847,0,0,1,1.1.076.813.813,0,0,1,0,1.164L3.888,6.171,3.8,6.245a.848.848,0,0,1-1.1-.076Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(15.5 5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14,0S9.856,7,7,7,0,0,0,0\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};We.displayName=\"IconlyChevronLeft\",We.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ve=st(We),Ze=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.33,20H5.66C2.275,20,0,17.621,0,14.08V5.91C0,2.375,2.275,0,5.66,0h8.67C17.721,0,20,2.375,20,5.91V14.08C20,17.621,17.721,20,14.33,20ZM6.25,9.57a.787.787,0,0,0-.529.22.753.753,0,0,0,0,1.06L9.47,14.62a.772.772,0,0,0,1.06,0l3.75-3.769a.751.751,0,0,0,0-1.06.767.767,0,0,0-1.07,0L10.75,12.27V5.92A.751.751,0,0,0,10,5.17a.742.742,0,0,0-.75.751v6.35L6.78,9.79A.763.763,0,0,0,6.25,9.57Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687\",transform:\"translate(5.502 5.168)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ze.displayName=\"IconlyArrowDownSquare\",Ze.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var je=st(Ze),Ce=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.08,20H5.91C2.375,20,0,17.725,0,14.34V5.67C0,2.279,2.375,0,5.91,0H14.08C17.621,0,20,2.279,20,5.67v8.67C20,17.725,17.621,20,14.08,20ZM5.92,9.25A.751.751,0,0,0,5.17,10a.742.742,0,0,0,.751.75h6.35L9.79,13.22a.763.763,0,0,0-.22.53.792.792,0,0,0,.22.53.755.755,0,0,0,1.06,0l3.769-3.75a.772.772,0,0,0,0-1.06L10.85,5.72a.753.753,0,0,0-1.06,0,.766.766,0,0,0,0,1.069L12.27,9.25Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687\",transform:\"translate(5.502 5.168)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 22) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ce.displayName=\"IconlyArrowRightSquare\",Ce.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var ve=st(Ce),He=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.34,20H5.67C2.279,20,0,17.625,0,14.09V5.92C0,2.379,2.279,0,5.67,0h8.67C17.725,0,20,2.379,20,5.92v8.17C20,17.625,17.725,20,14.34,20ZM9.25,7.73v6.35a.751.751,0,0,0,.75.751.742.742,0,0,0,.75-.751V7.73l2.47,2.479a.763.763,0,0,0,.53.22.792.792,0,0,0,.53-.22.75.75,0,0,0,0-1.059L10.53,5.38a.774.774,0,0,0-1.06,0L5.72,9.15a.752.752,0,0,0,0,1.059.764.764,0,0,0,1.069,0L9.248,7.732Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687\",transform:\"translate(5.502 5.168)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 22) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};He.displayName=\"IconlyArrowUpSquare\",He.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var be=st(He),we=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2 2)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M14.09,20H5.92C2.379,20,0,17.721,0,14.33V5.66C0,2.275,2.379,0,5.92,0h8.17C17.625,0,20,2.275,20,5.66v8.67C20,17.721,17.625,20,14.09,20ZM9.68,5.5a.742.742,0,0,0-.53.218L5.38,9.47a.774.774,0,0,0,0,1.06l3.77,3.75a.754.754,0,0,0,1.059,0,.766.766,0,0,0,0-1.07L7.73,10.75h6.35A.751.751,0,0,0,14.83,10a.742.742,0,0,0-.751-.75H7.73L10.21,6.78a.763.763,0,0,0,.22-.53.787.787,0,0,0-.22-.529A.742.742,0,0,0,9.68,5.5Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,5.916v8.168C0,17.623,2.276,20,5.665,20h8.67C17.724,20,20,17.623,20,14.084V5.916C20,2.378,17.723,0,14.334,0H5.665C2.276,0,0,2.378,0,5.916\",transform:\"translate(0 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.218,5.687,3.966,9.452a.773.773,0,0,0,1.064,0L8.778,5.687A.751.751,0,0,0,7.714,4.628L5.247,7.105V.75a.75.75,0,0,0-1.5,0V7.105L1.281,4.628A.75.75,0,0,0,.218,5.687\",transform:\"translate(5.502 5.168)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.256,20C2.393,20,0,17.608,0,13.747v-7.5C0,2.41,2.393,0,6.253,0H8.822a.756.756,0,0,1,.756.756V.765H9.561A.765.765,0,0,1,8.8,1.53H6.253C3.2,1.53,1.53,3.2,1.53,6.244v7.5c0,3.046,1.68,4.726,4.723,4.726h7.5c3.034,0,4.714-1.679,4.714-4.723v-7.5c0-3.043-1.68-4.714-4.714-4.714a.765.765,0,0,1,0-1.53C17.608,0,20,2.392,20,6.244v7.5C20,17.608,17.608,20,13.756,20ZM10,14.837a.746.746,0,0,1-.286-.058.733.733,0,0,1-.243-.162h0L5.721,10.851A.75.75,0,0,1,6.783,9.793L9.25,12.27V5.914a.75.75,0,0,1,1.5,0v8.172a.759.759,0,0,1-.059.288.731.731,0,0,1-.163.243c-.007.008-.016.01-.023.017a.773.773,0,0,1-.22.144.757.757,0,0,1-.251.051c-.013,0-.022.007-.035.007Zm1.941-2.7a.749.749,0,0,1,0-1.06l1.278-1.284a.75.75,0,0,1,1.062,1.059L13,12.136a.75.75,0,0,1-1.061,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.916,18.5h8.669c3.02,0,4.915-2.139,4.915-5.166V5.166C18.5,2.139,16.615,0,13.585,0H4.916C1.886,0,0,2.139,0,5.166v8.168C0,16.361,1.886,18.5,4.916,18.5Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0,3.748,3.764,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(22 2) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.172V0\",transform:\"translate(9.5 5.914)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.5,0S4.972,3.764,3.748,3.764,0,0,0,0\",transform:\"translate(6.252 10.322)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,9.25c0,6.937,2.313,9.25,9.25,9.25s9.25-2.313,9.25-9.25S16.187,0,9.25,0,0,2.313,0,9.25Z\",transform:\"translate(0.75 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};we.displayName=\"IconlyArrowLeftSquare\",we.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Se=st(we),Te=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.87,17.625c-.059-.058-.305-.274-.51-.477A22.081,22.081,0,0,1,.336,11.257,4.815,4.815,0,0,1,0,10.058a2,2,0,0,1,.22-.91,1.883,1.883,0,0,1,.9-.808,9.781,9.781,0,0,1,1.065-.261,23.616,23.616,0,0,1,3.805-.244,27.187,27.187,0,0,1,3.688.216,8.15,8.15,0,0,1,1.328.347A1.815,1.815,0,0,1,12,10v.058a5.023,5.023,0,0,1-.408,1.343,22.023,22.023,0,0,1-3.966,5.761,5.686,5.686,0,0,1-.553.491A1.771,1.771,0,0,1,6.008,18,1.853,1.853,0,0,1,4.87,17.625ZM4.81,5.2,4.483,1.5a1.518,1.518,0,0,1,3.036,0L7.191,5.2a1.191,1.191,0,0,1-2.381,0Z\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0\",transform:\"translate(4.483 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79\",transform:\"translate(0 7.835)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.912,17.759l-6.67-6.6A.81.81,0,0,1,.244,10a.839.839,0,0,1,1.175,0L6.67,15.2V.818a.83.83,0,0,1,1.661,0V17.182a.818.818,0,0,1-.514.756.837.837,0,0,1-.9-.179ZM9.9,14.8a.807.807,0,0,1,0-1.156L13.581,10a.841.841,0,0,1,1.175,0,.811.811,0,0,1,0,1.157L11.079,14.8a.84.84,0,0,1-1.175,0Z\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(5.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Te.displayName=\"IconlyArrowDown\",Te.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Oe=st(Te),Ie=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.149,11.781a1.889,1.889,0,0,1-.808-.9,9.727,9.727,0,0,1-.261-1.064A22.373,22.373,0,0,1,7.836,6.36V6.007a27.187,27.187,0,0,1,.216-3.688l.113-.544A3.886,3.886,0,0,1,8.4.992,1.814,1.814,0,0,1,10,0h.058A5.023,5.023,0,0,1,11.4.408,22.606,22.606,0,0,1,16.994,4.2l.379.4a3.481,3.481,0,0,1,.281.334A1.766,1.766,0,0,1,18,5.992a1.853,1.853,0,0,1-.375,1.138l-.39.42-.087.09a22.081,22.081,0,0,1-5.891,4.024l-.244.094a4.065,4.065,0,0,1-.955.242A2.005,2.005,0,0,1,9.149,11.781ZM0,6A1.511,1.511,0,0,1,1.5,4.482l3.7.327a1.191,1.191,0,0,1,0,2.381l-3.7.328A1.511,1.511,0,0,1,0,6Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 18) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0\",transform:\"translate(4.483 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79\",transform:\"translate(0 7.835)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 18.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 4.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10,14.756a.839.839,0,0,1-.071-1.09L10,13.581,15.2,8.33H.818a.831.831,0,0,1-.1-1.654l.1-.006H17.182a.818.818,0,0,1,.756.513A.841.841,0,0,1,17.832,8l-.073.083-6.6,6.671a.81.81,0,0,1-1.156,0Zm3.726-9.584L13.645,5.1,10,1.418A.839.839,0,0,1,10,.244.81.81,0,0,1,11.075.167l.085.075L14.8,3.92a.841.841,0,0,1,0,1.175.808.808,0,0,1-1.073.077Z\",transform:\"translate(0 0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 18.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4 18.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ie.displayName=\"IconlyArrowRight\",Ie.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Ne=st(Ie),xe=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.482,16.5l.327-3.7a1.191,1.191,0,0,1,2.381,0l.328,3.7a1.518,1.518,0,0,1-3.036,0ZM2.318,9.949l-.544-.113A3.886,3.886,0,0,1,.992,9.6,1.814,1.814,0,0,1,0,8V7.942A5.023,5.023,0,0,1,.408,6.6,22.605,22.605,0,0,1,4.2,1.006l.4-.379A3.481,3.481,0,0,1,4.928.347,1.766,1.766,0,0,1,5.992,0,1.853,1.853,0,0,1,7.13.375l.42.39.09.087a22.081,22.081,0,0,1,4.024,5.891l.094.244A4.065,4.065,0,0,1,12,7.942a2.005,2.005,0,0,1-.219.91,1.889,1.889,0,0,1-.9.808,9.728,9.728,0,0,1-1.064.261,22.373,22.373,0,0,1-3.452.243H6.007A27.187,27.187,0,0,1,2.318,9.949Z\",transform:\"translate(0 0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(18 21) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0\",transform:\"translate(4.483 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79\",transform:\"translate(0 7.835)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(18.5 20) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(4.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.676,17.285l-.006-.1V.818A.818.818,0,0,1,7.183.062.841.841,0,0,1,8,.168l.083.073,6.671,6.6a.81.81,0,0,1,0,1.157.839.839,0,0,1-1.09.071L13.581,8,8.33,2.8V17.182a.831.831,0,0,1-1.654.1ZM.244,8A.81.81,0,0,1,.167,6.925L.242,6.84,3.92,3.2A.841.841,0,0,1,5.1,3.2a.808.808,0,0,1,.077,1.073L5.1,4.355,1.418,8A.839.839,0,0,1,.244,8Z\",transform:\"translate(0)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(18.5 20) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(18.5 20) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};xe.displayName=\"IconlyArrowUp\",xe.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Pe=st(xe),Ee=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,a=t.opacity,s=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M7.942,12A5.023,5.023,0,0,1,6.6,11.592,22.626,22.626,0,0,1,1.006,7.8l-.379-.4a3.6,3.6,0,0,1-.281-.334A1.771,1.771,0,0,1,0,6.008,1.853,1.853,0,0,1,.375,4.87l.39-.42.087-.09A22.081,22.081,0,0,1,6.743.336L6.987.242A4.065,4.065,0,0,1,7.942,0a2,2,0,0,1,.91.22,1.883,1.883,0,0,1,.808.9,9.781,9.781,0,0,1,.261,1.065,22.351,22.351,0,0,1,.243,3.451v.354a27.187,27.187,0,0,1-.216,3.688l-.113.544a3.9,3.9,0,0,1-.233.784A1.815,1.815,0,0,1,8,12ZM12.8,7.191a1.191,1.191,0,0,1,0-2.381l3.7-.327a1.518,1.518,0,0,1,0,3.036Z\",transform:\"translate(0)\",fill:r}))},i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(21 6) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.327,5.2,0,1.5a1.518,1.518,0,0,1,3.036,0L2.709,5.2a1.191,1.191,0,0,1-2.381,0\",transform:\"translate(4.483 0)\",fill:n,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.87,9.79c-.058-.058-.305-.274-.51-.477A22.073,22.073,0,0,1,.336,3.422,4.828,4.828,0,0,1,0,2.223a2,2,0,0,1,.219-.91,1.886,1.886,0,0,1,.9-.808A9.79,9.79,0,0,1,2.188.244,23.636,23.636,0,0,1,5.993,0,27.291,27.291,0,0,1,9.681.216a8.26,8.26,0,0,1,1.327.347A1.815,1.815,0,0,1,12,2.165v.058a5.031,5.031,0,0,1-.408,1.343A22.044,22.044,0,0,1,7.626,9.327a5.693,5.693,0,0,1-.554.491,1.768,1.768,0,0,1-1.064.347A1.856,1.856,0,0,1,4.87,9.79\",transform:\"translate(0 7.835)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(20 5.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 4)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M6.676,17.285l-.006-.1V.818A.818.818,0,0,1,7.183.062.841.841,0,0,1,8,.168l.083.073,6.671,6.6a.81.81,0,0,1,0,1.157.839.839,0,0,1-1.09.071L13.581,8,8.33,2.8V17.182a.831.831,0,0,1-1.654.1ZM.244,8A.81.81,0,0,1,.167,6.925L.242,6.84,3.92,3.2A.841.841,0,0,1,5.1,3.2a.808.808,0,0,1,.077,1.073L5.1,4.355,1.418,8A.839.839,0,0,1,.244,8Z\",transform:\"translate(0.5 15.5) rotate(-90)\",fill:r}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(20 5.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:a}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0,6.025,6.05,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(20 5.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,15V0\",transform:\"translate(6.274 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M12.049,0S8.788,6.05,6.026,6.05,0,0,0,0\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(s,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null)}};Ee.displayName=\"IconlyArrowLeft\",Ee.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var De=st(Ee),$e=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,s=t.opacity,i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 6.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M9.141.09a.715.715,0,0,0-.38.627V4.783H.734a.717.717,0,1,0,0,1.435H8.762v4.065a.712.712,0,0,0,.38.627.748.748,0,0,0,.746-.02l7.77-4.783a.709.709,0,0,0,0-1.215L9.888.11A.748.748,0,0,0,9.141.09\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\",{id:\"clip-path\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}))),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 17.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0\",transform:\"translate(4.738 0)\",fill:n,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(0 7.944)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{clipPath:\"url(#clip-path)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711\",transform:\"translate(0 0.534)\",fill:r})))))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 17.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468\",transform:\"translate(0.5 11.5) rotate(-90)\",fill:r}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 17.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},c=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 17.5) rotate(-90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(4.894 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(c,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null)}};$e.displayName=\"IconlyCaretRight\",$e.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var qe=st($e),Ue=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,s=t.opacity,i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.91,9.141a.715.715,0,0,0-.627-.38H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.712.712,0,0,0-.627.38.748.748,0,0,0,.02.746l4.783,7.77a.709.709,0,0,0,1.215,0l4.783-7.77a.748.748,0,0,0,.02-.746\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\",{id:\"clip-path\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}))),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0\",transform:\"translate(4.738 0)\",fill:n,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(0 7.944)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{clipPath:\"url(#clip-path)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711\",transform:\"translate(0 0.534)\",fill:r})))))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468\",fill:r}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},c=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(4.894 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(c,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null)}};Ue.displayName=\"IconlyCaretDown\",Ue.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Re=st(Ue),_e=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,s=t.opacity,i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.09,8.859a.715.715,0,0,0,.627.38H4.783v8.027a.717.717,0,1,0,1.435,0V9.238h4.065a.712.712,0,0,0,.627-.38.748.748,0,0,0-.02-.746L6.107.343a.709.709,0,0,0-1.215,0L.11,8.112a.748.748,0,0,0-.02.746\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\",{id:\"clip-path\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}))),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(17.5 21) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0\",transform:\"translate(4.738 0)\",fill:n,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(0 7.944)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{clipPath:\"url(#clip-path)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711\",transform:\"translate(0 0.534)\",fill:r})))))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(17.5 21) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(6.5 3)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468\",transform:\"translate(11 18) rotate(180)\",fill:r}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(17.5 21) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},c=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(17.5 21) rotate(180)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(4.894 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(c,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null)}};_e.displayName=\"IconlyCaretUp\",_e.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Fe=st(_e),ze=function(t){var r=t.color,n=t.secondaryColor,e=t.strokeWidth,s=t.opacity,i=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(3 6.5)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M8.859,10.91a.715.715,0,0,0,.38-.627V6.217h8.027a.717.717,0,1,0,0-1.435H9.238V.717A.712.712,0,0,0,8.859.09a.748.748,0,0,0-.746.02L.343,4.893a.709.709,0,0,0,0,1.215l7.77,4.783a.748.748,0,0,0,.746.02\",transform:\"translate(0 0)\",fill:r}))},l=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"defs\",null,(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"clipPath\",{id:\"clip-path\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}))),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(21 6.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M1.421.711V9.189A.711.711,0,1,1,0,9.189V.711a.711.711,0,0,1,1.421,0\",transform:\"translate(4.738 0)\",fill:n,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(0 7.944)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0H10.9V8.939H0Z\",transform:\"translate(0 0.534)\",fill:\"none\"}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{clipPath:\"url(#clip-path)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.9.711a.715.715,0,0,1-.109.379L6.05,8.608a.71.71,0,0,1-1.2,0L.109,1.089A.712.712,0,0,1,.711,0h9.476A.713.713,0,0,1,10.9.711\",transform:\"translate(0 0.534)\",fill:r})))))},u=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(21 6.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},d=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(2.5 6)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M10.283,8.762H6.217V.734a.717.717,0,1,0-1.435,0V8.762H.717a.714.714,0,0,0-.628.38.748.748,0,0,0,.021.745l4.783,7.77a.708.708,0,0,0,1.215,0l2.975-4.835a.744.744,0,0,0-.224-1.012.709.709,0,0,0-.99.231L5.5,15.887,2.016,10.23h8.267a.734.734,0,0,0,0-1.468\",transform:\"translate(18.5 0.5) rotate(90)\",fill:r}))},k=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(21 6.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(5.251 0.75)\",fill:\"none\",stroke:n,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e,opacity:s}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M0,0,5,7.937,10,0Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))},c=function(){return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"g\",{transform:\"translate(21 6.5) rotate(90)\"},(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M.5,8.95V0\",transform:\"translate(4.894 0.75)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"path\",{d:\"M4.65,7.654C5.906,7.654,9.921,1.29,9.2.568S.892-.223.1.568,3.395,7.654,4.65,7.654Z\",transform:\"translate(0.75 9.7)\",fill:\"none\",stroke:r,strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeMiterlimit:\"10\",strokeWidth:e}))};switch(t.set){case\"bold\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(i,null);case\"bulk\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(l,null);case\"broken\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(d,null);case\"two-tone\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(k,null);case\"curved\":return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(c,null);default:return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(u,null)}};ze.displayName=\"IconlyCaretLeft\",ze.propTypes={opacity:Q.string,color:Q.string,secondaryColor:Q.string,set:Q.string,strokeWidth:Q.oneOfType([Q.string,Q.number])};var Be=st(ze),Ge={Search:lt,Folder:dt,Wallet:ct,Graph:pt,Bookmark:ht,Category:Lt,Home:yt,Notification:Wt,Chat:Zt,Heart:Ct,Heart2:Ht,Paper:wt,PaperPlus:Tt,PaperNegative:It,PaperFail:xt,PaperDownload:Et,PaperUpload:$t,Send:Ut,Password:_t,Swap:zt,Work:Gt,Scan:Yt,Activity:Kt,Calendar:tr,Message:nr,Video:or,Plus:sr,Chart:lr,Game:dr,Bag:cr,Bag2:pr,TicketStar:hr,MoreCircle:Lr,MoreSquare:yr,Discount:Wr,Buy:Zr,InfoCircle:Cr,InfoSquare:Hr,Danger:wr,CloseSquare:Tr,TickSquare:Ir,Discovery:xr,Location:Er,Document:$r,Setting:Ur,TimeSquare:_r,TimeCircle:zr,VolumeUp:Gr,VolumeDown:Yr,VolumeOff:Kr,Star:tn,Ticket:nn,Camera:on,User:sn,AddUser:un,TwoUsers:kn,People:fn,Login:mn,Logout:Mn,Download:An,Upload:gn,Voice:Vn,Voice2:jn,Delete:vn,Edit:bn,EditSquare:Sn,Play:On,ShieldDone:Nn,ShieldFail:Pn,Show:Dn,Hide:qn,Filter:Rn,Filter2:Fn,Image:Bn,Image2:Jn,Call:Qn,Calling:Xn,CallMissed:re,CallSilent:ee,Lock:ae,Unlock:ie,ChevronDownCircle:ue,ChevronRightCircle:ke,ChevronUpCircle:fe,ChevronLeftCircle:me,ChevronDown:Me,ChevronRight:Ae,ChevronUp:ge,ChevronLeft:Ve,ArrowDownSquare:je,ArrowRightSquare:ve,ArrowUpSquare:be,ArrowLeftSquare:Se,ArrowDown:Oe,ArrowRight:Ne,ArrowUp:Pe,ArrowLeft:De,CaretRight:qe,CaretDown:Re,CaretUp:Fe,CaretLeft:Be},Je=function(r){var n=r.className,e=r.primaryColor,o=r.secondaryColor,a=r.strokeWidth,s=r.opacity,i=r.set,l=r.size,u=r.name,d=r.style,k=X(r,[\"className\",\"primaryColor\",\"secondaryColor\",\"strokeWidth\",\"opacity\",\"set\",\"size\",\"name\",\"style\"]),c=Ge[u];if(!c)throw new Error(\"Icon '\"+u+\"' doesn't exists in react-iconly\");return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c,K({className:n,primaryColor:e,secondaryColor:o,strokeWidth:a,opacity:s,set:i,size:l,style:d},k))};\n//# sourceMappingURL=index.modern.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-iconly/dist/index.modern.js\n");

/***/ })

});